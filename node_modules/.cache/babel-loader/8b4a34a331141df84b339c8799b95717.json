{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/kefu/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/kefu/index.vue","mtime":1664816773128},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { AccountLogin, getSanCodeKey as _getSanCodeKey, scanStatus, kefuConfig, kefuCopy } from '@/api/kefu';\nimport mixins from '../account/mixins';\nimport Setting from '@/setting';\nimport util from '@/libs/util';\nimport QRCode from 'qrcodejs2';\nexport default {\n  mixins: [mixins],\n  data: function data() {\n    return {\n      fullWidth: document.documentElement.clientWidth,\n      swiperOption: {\n        pagination: '.swiper-pagination',\n        autoplay: true\n      },\n      modals: false,\n      autoLogin: true,\n      copyrightContext: '',\n      copyrightImage: '',\n      imgcode: '',\n      formInline: {\n        username: '',\n        password: '',\n        code: ''\n      },\n      ruleInline: {\n        username: [{\n          required: true,\n          message: '请输入客服账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入客服密码',\n          trigger: 'blur'\n        }],\n        code: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }]\n      },\n      errorNum: 0,\n      jigsaw: null,\n      login_logo: '',\n      swiperList: [],\n      defaultSwiperList: require('@/assets/images/sw.jpg'),\n      loginType: 0,\n      // 0 账号 1 扫码\n      codeKey: '',\n      scanTime: '',\n      rxpired: false,\n      // 扫码是否过期\n      isMobile: false,\n      version: '',\n      //版本号\n      isScan: false,\n      timeNum: 0\n    };\n  },\n  created: function created() {\n    var _this2 = this;\n\n    kefuConfig().then(function (res) {\n      _this2.version = res.data.version;\n\n      if (res.data.site_name) {\n        document.title = res.data.site_name;\n      }\n    });\n    this.isMobile = this.$store.state.admin.layout.isMobile;\n\n    var _this = this;\n\n    top != window && (top.location.href = location.href);\n\n    document.onkeydown = function (e) {\n      if (_this.$route.name === 'login') {\n        var key = window.event.keyCode;\n\n        if (key === 13) {\n          _this.handleSubmit('formInline');\n        }\n      }\n    };\n\n    window.addEventListener('resize', this.handleResize);\n    this.getKefuCopy();\n  },\n  watch: {\n    fullWidth: function fullWidth(val) {\n      // 为了避免频繁触发resize函数导致页面卡顿，使用定时器\n      if (!this.timer) {\n        // 一旦监听到的screenWidth值改变，就将其重新赋给data里的screenWidth\n        this.screenWidth = val;\n        this.timer = true;\n        var that = this;\n        setTimeout(function () {\n          // 打印screenWidth变化的值\n          that.timer = false;\n        }, 400);\n      }\n    },\n    $route: function $route(n) {\n      this.captchas();\n    }\n  },\n  mounted: function mounted() {\n    this.captchas();\n  },\n  methods: {\n    // 版权\n    getKefuCopy: function getKefuCopy() {\n      var _this3 = this;\n\n      kefuCopy().then(function (res) {\n        _this3.copyrightContext = res.data.copyrightContext;\n        _this3.copyrightImage = res.data.copyrightImage || require('@/assets/images/logo-dark.png');\n      });\n    },\n    // 切换扫码\n    bindScan: function bindScan() {\n      if (!this.isScan) {\n        this.isScan = true;\n        this.getSanCodeKey();\n      }\n\n      this.loginType = 1;\n    },\n    // 生成二维码\n    creatQrCode: function creatQrCode() {\n      var url = \"\".concat(window.location.protocol, \"//\").concat(window.location.host, \"/pages/users/scan_login/index?key=\").concat(this.codeKey);\n      var qrcode = new QRCode(this.$refs.qrCodeUrl, {\n        text: url,\n        // 需要转换为二维码的内容\n        width: 160,\n        height: 160,\n        colorDark: '#000000',\n        colorLight: '#ffffff',\n        correctLevel: QRCode.CorrectLevel.H\n      });\n    },\n    // 关闭模态框\n    closeModel: function closeModel() {\n      var _this4 = this;\n\n      var msg = this.$Message.loading({\n        content: '登录中...',\n        duration: 0\n      });\n      AccountLogin({\n        account: this.formInline.username,\n        password: this.formInline.password,\n        imgcode: this.formInline.code\n      }).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          var expires, db;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  msg();\n                  expires = _this4.getExpiresTime(res.data.exp_time); // 记录用户登陆信息\n\n                  util.cookies.setKefu('uuid', res.data.kefuInfo.uid, {\n                    expires: expires\n                  });\n                  util.cookies.setKefu('token', res.data.token, {\n                    expires: expires\n                  });\n                  util.cookies.setKefu('expires_time', res.data.exp_time, {\n                    expires: expires\n                  });\n                  util.cookies.setKefu('kefuInfo', res.data.kefuInfo, {\n                    expires: expires\n                  });\n                  _context.next = 8;\n                  return _this4.$store.dispatch('admin/db/database', {\n                    user: true\n                  });\n\n                case 8:\n                  db = _context.sent;\n\n                  if (!_this4.$store.state.admin.layout.isMobile) {\n                    _context.next = 13;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", _this4.$router.replace({\n                    path: _this4.$route.query.redirect || '/kefu/mobile_list'\n                  }));\n\n                case 13:\n                  return _context.abrupt(\"return\", _this4.$router.replace({\n                    path: _this4.$route.query.redirect || '/kefu/pc_list'\n                  }));\n\n                case 14:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        msg();\n        var data = res === undefined ? {} : res;\n        _this4.errorNum++;\n\n        _this4.captchas();\n\n        _this4.$Message.error(data.msg || '登录失败');\n\n        if (_this4.jigsaw) _this4.jigsaw.reset();\n      });\n    },\n    getExpiresTime: function getExpiresTime(expiresTime) {\n      var nowTimeNum = Math.round(new Date() / 1000);\n      var expiresTimeNum = expiresTime - nowTimeNum;\n      return parseFloat(parseFloat(parseFloat(expiresTimeNum / 60) / 60) / 24);\n    },\n    closefail: function closefail() {\n      if (this.jigsaw) this.jigsaw.reset();\n      this.$Message.error('校验错误');\n    },\n    handleResize: function handleResize(event) {\n      this.fullWidth = document.documentElement.clientWidth;\n    },\n    captchas: function captchas() {\n      this.imgcode = Setting.apiBaseURL + '/captcha_pro?' + Date.parse(new Date());\n    },\n    handleSubmit: function handleSubmit(name) {\n      var _this5 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          _this5.closeModel();\n        }\n      });\n    },\n    // 获取客服扫码key\n    getSanCodeKey: function getSanCodeKey() {\n      var _this6 = this;\n\n      _getSanCodeKey().then(function (res) {\n        _this6.codeKey = res.data.key;\n\n        _this6.creatQrCode();\n\n        _this6.scanTime = setInterval(function () {\n          _this6.timeNum++;\n\n          if (_this6.timeNum >= 60) {\n            _this6.timeNum = 0;\n            window.clearInterval(_this6.scanTime);\n            _this6.rxpired = true;\n          } else {\n            _this6.getScanStatus();\n          }\n        }, 1000);\n      }).catch(function (error) {\n        _this6.timeNum = 0;\n        window.clearInterval(_this6.scanTime);\n        _this6.rxpired = true;\n\n        _this6.$Message.error(error.msg);\n      });\n    },\n    // 扫码登录情况\n    getScanStatus: function getScanStatus() {\n      var _this7 = this;\n\n      scanStatus(this.codeKey).then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(res) {\n          var expires, db;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  // 0 = 二维码过期需要重新获取授权凭证\n                  if (res.data.status == 0) {\n                    _this7.timeNum = 0;\n                    window.clearInterval(_this7.scanTime);\n                    _this7.rxpired = true;\n                  } // 1=正在扫描\n\n\n                  if (res.data.status == 1) {} // 3 扫描成功正在登录\n\n\n                  if (!(res.data.status == 3)) {\n                    _context2.next = 17;\n                    break;\n                  }\n\n                  window.clearInterval(_this7.scanTime);\n                  expires = _this7.getExpiresTime(res.data.exp_time); // 记录用户登陆信息\n\n                  util.cookies.setKefu('uid', res.data.kefuInfo.uid, {\n                    expires: expires\n                  });\n                  util.cookies.setKefu('token', res.data.token, {\n                    expires: expires\n                  });\n                  util.cookies.setKefu('expires_time', res.data.exp_time, {\n                    expires: expires\n                  });\n                  util.cookies.setKefu('kefuInfo', JSON.stringify(res.data.kefuInfo), {\n                    expires: expires\n                  });\n                  _context2.next = 11;\n                  return _this7.$store.dispatch('admin/db/database', {\n                    user: true\n                  });\n\n                case 11:\n                  db = _context2.sent;\n\n                  if (!_this7.$store.state.admin.layout.isMobile) {\n                    _context2.next = 16;\n                    break;\n                  }\n\n                  return _context2.abrupt(\"return\", _this7.$router.replace({\n                    path: _this7.$route.query.redirect || '/kefu/mobile_list'\n                  }));\n\n                case 16:\n                  return _context2.abrupt(\"return\", _this7.$router.replace({\n                    path: _this7.$route.query.redirect || '/kefu/pc_list'\n                  }));\n\n                case 17:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (error) {\n        _this7.$Modal.error({\n          title: '提示',\n          content: error.msg\n        });\n\n        _this7.timeNum = 0;\n        window.clearInterval(_this7.scanTime);\n        _this7.rxpired = true;\n      });\n    },\n    // 刷新二维码\n    bindRefresh: function bindRefresh() {\n      this.$refs.qrCodeUrl.innerHTML = '';\n      this.rxpired = false;\n      this.getSanCodeKey();\n    }\n  },\n  beforeCreate: function beforeCreate() {},\n  beforeDestroy: function beforeDestroy() {\n    this.timeNum = 0;\n    this.$refs.qrCodeUrl.innerHTML = '';\n    window.clearInterval(this.scanTime);\n    window.removeEventListener('resize', this.handleResize); // document.getElementsByTagName('canvas')[0].removeAttribute('class', 'index_bg');\n  }\n};",null]}