{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/store/order/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/store/order/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nvar _methods;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport Distribution from \"./components/distribution.vue\";\nimport expandRow from \"./components/tableExpand.vue\";\nimport userDetails from \"@/pages/user/list/handle/userDetails\";\nimport editFrom from \"@/components/from/from\";\nimport orderSend from \"./components/orderSend\";\nimport detailsFrom from \"./components/orderDetails\";\nimport orderRecord from \"./components/orderRecord\";\nimport orderRemark from \"./components/orderRemark\";\nimport { orderList, orderChart, orderHeader, orderRecharge, orderVip, getOrdeDatas //编辑表单数据\n, getDistribution, writeUpdate, getDataInfo, orderExport, staffListInfo } from \"@/api/store\";\nimport { erpConfig } from \"@/api/erp\";\nimport timeOptions from \"@/utils/timeOptions\"; // import {\n// \tstaffListInfo\n// } from '@/api/staff';\n\nexport default {\n  name: \"index\",\n  components: {\n    userDetails: userDetails,\n    editFrom: editFrom,\n    detailsFrom: detailsFrom,\n    orderRecord: orderRecord,\n    orderRemark: orderRemark,\n    orderSend: orderSend,\n    expandRow: expandRow,\n    Distribution: Distribution\n  },\n  data: function data() {\n    return {\n      openErp: false,\n      distshow: false,\n      //分配的弹窗\n      delfromData: {},\n      pay_type: \"\",\n      status: 0,\n      //发货状态判断\n      FromData: null,\n      orderDatalist: null,\n      orderId: 0,\n      treeSelect: [{\n        id: \"free\",\n        label: \"试用\"\n      }, {\n        id: \"month\",\n        label: \"月卡\"\n      }, {\n        id: \"quarter\",\n        label: \"季卡\"\n      }, {\n        id: \"year\",\n        label: \"年卡\"\n      }, {\n        id: \"ever\",\n        label: \"永久\"\n      }, {\n        id: \"card\",\n        label: \"卡密激活\"\n      }],\n      staffData: [],\n      tablists: {},\n      orderChartType: {},\n      options: timeOptions,\n      timeVal: [],\n      // 订单列表\n      orderData: {\n        page: 1,\n        limit: 10,\n        type: 6,\n        status: \"\",\n        time: \"\",\n        real_name: \"\",\n        store_id: \"\"\n      },\n      // 充值订单搜索\n      rechargeData: {\n        nickname: \"\",\n        limit: 15\n      },\n      // 会员订单搜索\n      vipData: {\n        member_type: \"\",\n        limit: 15\n      },\n      currentTab: \"6\",\n      tableList: [],\n      total: 0,\n      loading: false,\n      rechargeColumns: [{\n        title: \"ID\",\n        key: \"id\",\n        width: 60\n      }, {\n        title: \"订单号\",\n        key: \"order_id\",\n        minWidth: 180\n      }, {\n        title: \"用户信息\",\n        slot: \"userInfo\",\n        minWidth: 160\n      }, {\n        title: \"支付金额\",\n        key: \"price\",\n        minWidth: 110\n      }, {\n        title: \"充值类型\",\n        key: \"_recharge_type\",\n        minWidth: 100\n      }, {\n        title: \"支付时间\",\n        key: \"_pay_time\",\n        minWidth: 130\n      }, {\n        title: \"关联店员\",\n        key: \"_recharge_type\",\n        minWidth: 100\n      }, {\n        title: \"操作\",\n        slot: \"action\",\n        fixed: \"right\",\n        minWidth: 200,\n        align: \"center\"\n      }],\n      vipColumns: [{\n        title: \"订单号\",\n        key: \"order_id\",\n        minWidth: 180\n      }, {\n        title: \"用户信息\",\n        slot: \"userInfo\",\n        minWidth: 180\n      }, {\n        title: \"会员类型\",\n        key: \"member_type\",\n        minWidth: 100\n      }, {\n        title: \"有效期限（天）\",\n        minWidth: 100,\n        render: function render(h, params) {\n          return h(\"span\", params.row.vip_day === -1 ? \"永久\" : params.row.vip_day);\n        }\n      }, {\n        title: \"支付金额\",\n        key: \"pay_price\",\n        minWidth: 100\n      }, {\n        title: \"支付方式\",\n        key: \"pay_type\",\n        minWidth: 100\n      }, {\n        title: \"购买时间\",\n        key: \"pay_time\",\n        minWidth: 130\n      }, {\n        title: \"关联店员\",\n        key: \"pay_time\",\n        minWidth: 130\n      }, {\n        title: \"操作\",\n        slot: \"action\",\n        fixed: \"right\",\n        minWidth: 200,\n        align: \"center\"\n      }],\n      columns: [{\n        type: \"expand\",\n        width: 30,\n        render: function render(h, params) {\n          return h(expandRow, {\n            props: {\n              row: params.row\n            }\n          });\n        }\n      }, {\n        title: \"订单号\",\n        slot: \"order_id\",\n        minWidth: 160\n      }, {\n        title: \"用户信息\",\n        slot: \"userInfo\",\n        minWidth: 120\n      }, {\n        title: \"商品信息\",\n        slot: \"info\",\n        minWidth: 350\n      }, {\n        title: \"实际支付\",\n        slot: \"pay_price\",\n        minWidth: 120\n      }, {\n        title: \"支付方式\",\n        key: \"pay_type_name\",\n        minWidth: 120\n      }, {\n        title: \"收银店员\",\n        key: \"clerk_name\",\n        minWidth: 120\n      }, {\n        title: \"下单时间\",\n        key: \"add_time\",\n        minWidth: 150\n      }, {\n        title: \"订单状态\",\n        slot: \"statusName\",\n        minWidth: 120\n      }, {\n        title: \"操作\",\n        slot: \"action\",\n        fixed: \"right\",\n        minWidth: 200,\n        align: \"center\"\n      }],\n      rowActive: {}\n    };\n  },\n  computed: _objectSpread({}, mapState(\"admin/layout\", [\"isMobile\"]), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    }\n  }),\n  created: function created() {\n    this.getErpConfig();\n    this.getTabs();\n    this.getChart();\n    this.staffList();\n    this.getList();\n  },\n  mounted: function mounted() {},\n  methods: (_methods = {\n    getErpConfig: function getErpConfig() {\n      var _this = this;\n\n      erpConfig().then(function (res) {\n        _this.openErp = res.data.open_erp;\n      }).catch(function (err) {\n        _this.$Message.error(err.msg);\n      });\n    },\n    remark: function remark(row) {\n      this.orderId = row.id;\n      this.$refs.remarks.modals = true;\n\n      switch (this.currentTab) {\n        case \"3\":\n        case \"4\":\n          this.$refs.remarks.currentTab(this.currentTab, row.remarks);\n          break;\n\n        default:\n          this.$refs.remarks.currentTab(this.currentTab, row.remark);\n      }\n    },\n    detail: function detail(row) {\n      this.orderId = row.id;\n      this.getData(row.id);\n      this.rowActive = row;\n    },\n    distribution: function distribution(row) {\n      this.$refs.distshow.modals = true;\n      this.$refs.distshow.getList(row.id);\n    },\n    record: function record(row) {\n      this.orderId = row.id;\n      this.$refs.record.modals = true;\n      this.$refs.record.getList(row.id);\n    },\n    // 查看子订单\n    splitOrderDetail: function splitOrderDetail(row) {\n      this.$router.push({\n        path: \"split_list\",\n        query: {\n          id: row.id\n        }\n      });\n    },\n    // 删除单条订单\n    delOrder: function delOrder(row, data) {\n      var _this2 = this;\n\n      if (row.is_del === 1) {\n        this.$modalSure(data).then(function (res) {\n          _this2.$Message.success(res.msg);\n\n          _this2.getList();\n        }).catch(function (res) {\n          _this2.$Message.error(res.msg);\n        });\n      } else {\n        var title = \"错误！\";\n        var content = \"<p>您选择的的订单存在用户未删除的订单，无法删除用户未删除的订单！</p>\";\n        this.$Modal.error({\n          title: title,\n          content: content\n        });\n      }\n    },\n    // 获取详情表单数据\n    getData: function getData(id, type) {\n      var _this3 = this;\n\n      getDataInfo(id).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!type) {\n                    _this3.$refs.detailss.modals = true;\n                  }\n\n                  _this3.$refs.detailss.activeName = \"detail\";\n                  _this3.orderDatalist = res.data;\n\n                  if (_this3.orderDatalist.orderInfo.refund_reason_wap_img) {\n                    try {\n                      _this3.orderDatalist.orderInfo.refund_reason_wap_img = JSON.parse(_this3.orderDatalist.orderInfo.refund_reason_wap_img);\n                    } catch (e) {\n                      _this3.orderDatalist.orderInfo.refund_reason_wap_img = [];\n                    }\n                  }\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this3.$Message.error(res.msg);\n      });\n    },\n    // 立即核销\n    bindWrite: function bindWrite(row) {\n      var self = this;\n      this.$Modal.confirm({\n        title: \"提示\",\n        content: \"确定要核销该订单吗？\",\n        cancelText: \"取消\",\n        closable: true,\n        maskClosable: true,\n        onOk: function onOk() {\n          writeUpdate(row.order_id).then(function (res) {\n            self.$Message.success(res.msg);\n            self.getList();\n          });\n        },\n        onCancel: function onCancel() {}\n      });\n    },\n    // 配送信息表单数据\n    delivery: function delivery(row) {\n      var _this4 = this;\n\n      getDistribution(row.id).then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(res) {\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _this4.FromData = res.data;\n                  _this4.$refs.edits.modals = true;\n\n                case 2:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this4.$Message.error(res.msg);\n      });\n    },\n    // 编辑\n    edit: function edit(row) {\n      this.getOrderData(row.id);\n    },\n    // 获取编辑表单数据\n    getOrderData: function getOrderData(id) {\n      var _this5 = this;\n\n      getOrdeDatas(id).then(\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee3(res) {\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (!(res.data.status === false)) {\n                    _context3.next = 2;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\", _this5.$authLapse(res.data));\n\n                case 2:\n                  _this5.$authLapse(res.data);\n\n                  _this5.FromData = res.data;\n                  _this5.$refs.edits.modals = true;\n\n                case 5:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this5.$Message.error(res.msg);\n      });\n    },\n    // 修改成功(编辑只有未支付时出现)\n    submitFail: function submitFail() {\n      this.status = 0;\n\n      if (this.currentTab == 3) {\n        this.getRecharge();\n      } else if (this.currentTab == 4) {\n        this.getVipOrder();\n      } else {\n        this.getList();\n        this.getData(this.orderId, 1);\n      }\n    },\n    // 发送货\n    sendOrder: function sendOrder(row) {\n      var _this6 = this;\n\n      this.$store.commit(\"admin/order/setSplitOrder\", row.total_num);\n      this.$refs.send.modals = true;\n      this.orderId = row.id;\n      this.status = row._status;\n      this.pay_type = row.pay_type;\n      this.$refs.send.getList();\n      this.$refs.send.getDeliveryList();\n      this.$nextTick(function (e) {\n        _this6.$refs.send.getCartInfo(row._status, row.id);\n      });\n    },\n    // 详情\n    showUserInfo: function showUserInfo(row) {\n      this.$refs.userDetails.modals = true;\n      this.$refs.userDetails.activeName = \"info\";\n      this.$refs.userDetails.getDetails(row.uid);\n    },\n    // 初始化数据\n    clearData: function clearData() {\n      this.orderData = {\n        page: 1,\n        limit: 15,\n        type: 6,\n        status: \"\",\n        time: \"\",\n        real_name: \"\",\n        store_id: \"\"\n      };\n      this.rechargeData = {\n        nickname: \"\",\n        limit: 15\n      };\n      this.vipData = {\n        member_type: \"\",\n        limit: 15\n      };\n    },\n    // 店员列表\n    staffList: function staffList() {\n      var _this7 = this;\n\n      var data = {\n        page: 0,\n        limit: 0\n      };\n      staffListInfo().then(function (res) {\n        _this7.staffData = res.data;\n      }).catch(function (err) {\n        _this7.$Message.error(err.msg);\n      });\n    },\n    // 获取门店订单头部统计\n    getTabs: function getTabs() {\n      var _this8 = this;\n\n      orderHeader().then(function (res) {\n        _this8.tablists = res.data;\n      }).catch(function (err) {\n        _this8.$Message.error(err.msg);\n      });\n    },\n    // 订单头部数据\n    getChart: function getChart() {\n      var _this9 = this;\n\n      orderChart({\n        type: this.currentTab\n      }).then(function (res) {\n        _this9.orderChartType = res.data;\n      }).catch(function (err) {\n        _this9.$Message.error(err.msg);\n      });\n    }\n  }, _defineProperty(_methods, \"edit\", function edit(row) {\n    this.getOrderData(row.id);\n  }), _defineProperty(_methods, \"onClickTab\", function onClickTab() {\n    this.clearData();\n    this.orderData.type = this.currentTab;\n    this.orderData.page = 1;\n    this.timeVal = [];\n    this.getChart();\n    this.searchList();\n  }), _defineProperty(_methods, \"searchList\", function searchList() {\n    if (this.currentTab == 3) {\n      this.getRecharge();\n    } else if (this.currentTab == 4) {\n      this.getVipOrder();\n    } else {\n      this.getList();\n    }\n  }), _defineProperty(_methods, \"userSearchs\", function userSearchs() {\n    this.orderData.page = 1;\n    this.searchList();\n  }), _defineProperty(_methods, \"selectStatus\", function selectStatus() {\n    this.orderData.page = 1;\n    this.getList();\n  }), _defineProperty(_methods, \"getVipOrder\", function getVipOrder() {\n    var _this10 = this;\n\n    this.loading = true;\n    this.tableList = [];\n    this.vipData.name = this.rechargeData.nickname;\n    this.vipData.add_time = this.orderData.time;\n    this.vipData.store_id = this.orderData.store_id;\n    this.vipData.page = this.orderData.page;\n    orderVip(this.vipData).then(function (res) {\n      var data = res.data;\n      _this10.tableList = data.list;\n      _this10.total = data.count;\n      _this10.loading = false;\n    }).catch(function (err) {\n      _this10.loading = false;\n\n      _this10.$Message.error(err.msg);\n    });\n  }), _defineProperty(_methods, \"getRecharge\", function getRecharge() {\n    var _this11 = this;\n\n    this.loading = true;\n    this.tableList = [];\n    this.rechargeData.data = this.orderData.time;\n    this.rechargeData.store_id = this.orderData.store_id;\n    this.rechargeData.page = this.orderData.page;\n    orderRecharge(this.rechargeData).then(function (res) {\n      var data = res.data;\n      _this11.tableList = data.list;\n      _this11.total = data.count;\n      _this11.loading = false;\n    }).catch(function (err) {\n      _this11.loading = false;\n\n      _this11.$Message.error(err.msg);\n    });\n  }), _defineProperty(_methods, \"getList\", function getList() {\n    var _this12 = this;\n\n    this.loading = true;\n    this.tableList = [];\n    orderList(this.orderData).then(function (res) {\n      var data = res.data;\n      data.data.forEach(function (item) {\n        if (item.id == _this12.orderId) {\n          _this12.rowActive = item;\n        }\n      });\n      _this12.tableList = data.data;\n      _this12.total = data.count;\n      _this12.loading = false;\n    }).catch(function (err) {\n      _this12.loading = false;\n\n      _this12.$Message.error(err.msg);\n    });\n  }), _defineProperty(_methods, \"pageChange\", function pageChange(index) {\n    this.orderData.page = index;\n    this.searchList();\n  }), _defineProperty(_methods, \"orderSearch\", function orderSearch() {\n    this.orderData.page = 1;\n    this.searchList();\n  }), _defineProperty(_methods, \"onchangeTime\", function onchangeTime(e) {\n    this.timeVal = e;\n    this.orderData.time = this.timeVal.join(\"-\");\n    this.orderData.page = 1;\n\n    if (!e[0]) {\n      this.orderData.time = \"\";\n    }\n\n    this.searchList();\n  }), _defineProperty(_methods, \"selectChange\", function selectChange() {\n    this.orderData.page = 1;\n    this.timeVal = [];\n    this.searchList();\n  }), _defineProperty(_methods, \"getExcelData\", function getExcelData(excelData) {\n    var _this13 = this;\n\n    return new Promise(function (resolve, reject) {\n      var type = 1;\n\n      if (_this13.currentTab == 6 || _this13.currentTab == 7 || _this13.currentTab == 5) {\n        type = 1;\n      } else if (_this13.currentTab == 3) {\n        type = 2;\n      } else {\n        type = 3;\n      }\n\n      orderExport(excelData, type).then(function (res) {\n        return resolve(res.data);\n      });\n    });\n  }), _methods)\n};",null]}