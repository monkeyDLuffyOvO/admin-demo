{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/work/channelCode/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/work/channelCode/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport { workChannelCate, workCateCreate, workCateEdit, workCateDel, workChannelCode, getWorkCodeClient, getWorkCodeInfo, workBranchCate } from \"@/api/work\";\nexport default {\n  name: \"\",\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      loading: false,\n      formInline: {},\n      channelCateList: [],\n      current: 0,\n      sortName: \"\",\n      codeInfoStatus: false,\n      clentStatus: false,\n      branchStatus: false,\n      columns1: [{\n        type: \"selection\",\n        width: 60\n      }, {\n        title: \"二维码\",\n        slot: \"qrcode_url\",\n        minWidth: 80\n      }, {\n        title: \"二维码名称\",\n        key: \"name\",\n        minWidth: 100\n      }, {\n        title: \"分类\",\n        slot: \"category\",\n        minWidth: 100\n      }, {\n        title: \"添加好友\",\n        slot: \"skip_verify\",\n        minWidth: 80\n      }, {\n        title: \"类型\",\n        slot: \"type\",\n        minWidth: 80\n      }, {\n        title: \"客户数\",\n        key: \"client_num\",\n        minWidth: 80\n      }, {\n        title: \"创建时间\",\n        key: \"create_time\",\n        minWidth: 110\n      }, {\n        title: \"用户标签\",\n        slot: \"label_name\",\n        minWidth: 130\n      }, {\n        title: \"操作\",\n        slot: \"action\",\n        // fixed: \"right\",\n        width: 150\n      }],\n      tableData: [],\n      clientList: {\n        count: 0,\n        list: []\n      },\n      infoData: {\n        welcome_words: {\n          attachments: []\n        }\n      },\n      //详情弹窗内容赋值\n      grid: {\n        xl: 7,\n        lg: 10,\n        md: 12,\n        sm: 24,\n        xs: 24\n      },\n      tableFrom: {\n        type: \"\",\n        name: \"\",\n        cate_id: null,\n        page: 1,\n        limit: 15\n      },\n      clientColumn: [{\n        title: \"ID\",\n        key: \"client_id\",\n        minWidth: 60,\n        align: \"center\"\n      }, {\n        title: \"头像\",\n        slot: \"avatar\",\n        minWidth: 100,\n        align: \"center\"\n      }, {\n        title: \"客户名称\",\n        slot: \"name\",\n        minWidth: 100,\n        align: \"center\"\n      }, {\n        title: \"加入时间\",\n        key: \"create_time\",\n        minWidth: 120,\n        align: \"center\"\n      }],\n      branchCateId: '',\n      branchRow: []\n    }, _defineProperty(_ref, \"loading\", false), _defineProperty(_ref, \"userLoading\", false), _defineProperty(_ref, \"clientForm\", {\n      id: 0,\n      page: 1,\n      limit: 15\n    }), _defineProperty(_ref, \"total\", 0), _ref;\n  },\n  computed: _objectSpread({}, mapState(\"admin/layout\", [\"isMobile\"]), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 80;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? \"top\" : \"left\";\n    }\n  }),\n  created: function created() {\n    this.getWorkChannelCate();\n    this.getChannelCode();\n  },\n  methods: {\n    //编辑\n    editData: function editData(row) {\n      this.$router.push({\n        path: \"/admin/work/createCode/\" + row.id\n      });\n    },\n    //移动\n    move: function move() {},\n    // 操作\n    changeMenu: function changeMenu(row, name, index) {\n      var _this = this;\n\n      switch (name) {\n        case \"1\":\n          this.branchRow[0] = row;\n          this.branchStatus = true;\n          break;\n\n        case \"2\":\n          var delfromData = {\n            title: '删除渠道码',\n            num: index,\n            url: \"work/channel/code/\".concat(row.id),\n            method: \"DELETE\",\n            ids: \"\"\n          };\n          this.$modalSure(delfromData).then(function (res) {\n            _this.$Message.success(res.msg);\n\n            if (_this.tableData.list.length == 1) {\n              _this.tableFrom.page = _this.tableFrom.page - 1;\n\n              _this.getChannelCode();\n            } else {\n              _this.getChannelCode();\n            }\n          }).catch(function (res) {\n            _this.$Message.error(res.msg);\n          });\n          break;\n\n        case \"3\":\n          this.clentStatus = true;\n          this.clientForm.id = row.id;\n          this.getClient();\n          break;\n      }\n    },\n    codeInfo: function codeInfo(row) {\n      var _this2 = this;\n\n      getWorkCodeInfo(row.id).then(function (res) {\n        _this2.infoData = res.data;\n      });\n      this.codeInfoStatus = true;\n    },\n    //获取客户列表\n    getClient: function getClient() {\n      var _this3 = this;\n\n      this.userLoading = true;\n      getWorkCodeClient(this.clientForm).then(function (res) {\n        _this3.$set(_this3, 'clientList', res.data);\n\n        _this3.userLoading = false;\n      }).catch(function (res) {\n        _this3.userLoading = false;\n\n        _this3.$Message.error(res.msg);\n      });\n    },\n    //获取分类列表\n    getWorkChannelCate: function getWorkChannelCate(key) {\n      var _this4 = this;\n\n      workChannelCate().then(function (res) {\n        var obj = {\n          name: \"全部\",\n          id: \"\"\n        };\n        res.data.unshift(obj);\n        res.data.forEach(function (el) {\n          el.status = false;\n        });\n\n        if (!key) {\n          _this4.sortName = res.data[0].id;\n        }\n\n        _this4.channelCateList = res.data;\n      });\n    },\n    bindMenuItem: function bindMenuItem(name, index) {\n      this.tableFrom.cate_id = name.id;\n      this.current = index;\n      this.channelCateList.forEach(function (el) {\n        el.status = false;\n      });\n      this.getChannelCode();\n    },\n    // 显示标签小菜单\n    showMenu: function showMenu(item) {\n      this.channelCateList.forEach(function (el) {\n        if (el.id == item.id) {\n          el.status = item.status ? false : true;\n        } else {\n          el.status = false;\n        }\n      });\n    },\n    //添加分类\n    addChannelCate: function addChannelCate() {\n      var _this5 = this;\n\n      this.$modalForm(workCateCreate()).then(function () {\n        _this5.getWorkChannelCate();\n      });\n    },\n    //删除分类\n    delChannelCate: function delChannelCate(item, name, index) {\n      var _this6 = this;\n\n      workCateDel(item.id).then(function (res) {\n        _this6.getWorkChannelCate();\n\n        _this6.$Message.success('删除成功');\n      });\n    },\n    //编辑分类\n    labelEdit: function labelEdit(item) {\n      var _this7 = this;\n\n      this.$modalForm(workCateEdit(item.id)).then(function () {\n        item.status = false;\n\n        _this7.getWorkChannelCate(1);\n      });\n    },\n    //获取渠道码列表\n    getChannelCode: function getChannelCode() {\n      var _this8 = this;\n\n      this.loading = true;\n      workChannelCode(this.tableFrom).then(function (res) {\n        _this8.tableData = res.data;\n        _this8.loading = false;\n      }).catch(function (res) {\n        _this8.loading = false;\n\n        _this8.$Message.error(res.msg);\n      });\n    },\n    //批量移动\n    branchCate: function branchCate() {\n      this.branchStatus = true;\n    },\n    branchCateConfirm: function branchCateConfirm() {\n      var _this9 = this;\n\n      var data = {\n        cate_id: this.branchCateId,\n        ids: this.branchRow.map(function (item) {\n          return item.id;\n        })\n      };\n      workBranchCate(data).then(function (res) {\n        _this9.$Message.success(\"移动成功\");\n\n        _this9.branchRow = [];\n\n        _this9.getChannelCode();\n      });\n    },\n    selectAll: function selectAll(row) {\n      if (row.length) {\n        this.branchRow = row;\n      }\n    },\n    handleSelectRow: function handleSelectRow(row) {\n      this.branchRow = row;\n    },\n    //搜索\n    codeSearchs: function codeSearchs() {\n      this.tableFrom.page = 1;\n      this.getChannelCode();\n    },\n    //分页\n    pageChange: function pageChange(index) {\n      this.tableFrom.page = index;\n      this.getChannelCode();\n    },\n    //分页\n    clientChange: function clientChange(index) {\n      this.clientForm.page = index;\n      this.getClient();\n    },\n    //下载活码\n    downloadCodeImg: function downloadCodeImg() {\n      var link = document.createElement('a');\n      var url = this.infoData.qrcode_url; //codeIMG  要下载的路径\n      // 这里是将url转成blob地址，\n\n      fetch(url).then(function (res) {\n        return res.blob();\n      }).then(function (blob) {\n        // 将链接地址字符内容转变成blob地址\n        link.href = URL.createObjectURL(blob);\n        link.download = 'pic';\n        document.body.appendChild(link);\n        link.click();\n      });\n    },\n    downPic: function downPic() {\n      var _this10 = this;\n\n      var _loop = function _loop(i) {\n        var link = document.createElement('a');\n        var url = _this10.branchRow[i].qrcode_url;\n        fetch(url).then(function (res) {\n          return res.blob();\n        }).then(function (blob) {\n          link.href = URL.createObjectURL(blob);\n          link.download = _this10.branchRow[i].name;\n          document.body.appendChild(link);\n          link.click();\n        });\n      };\n\n      for (var i in this.branchRow) {\n        _loop(i);\n      }\n    }\n  }\n};",null]}