{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/kefu/pc/components/delivery.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/kefu/pc/components/delivery.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport { splitCartInfo } from \"@/api/order\";\nimport { orderExport, orderTemp, orderDeliveryAll, orderDelivery, getSender, splitDelivery } from \"@/api/kefu\";\nexport default {\n  name: \"delivery\",\n  props: {\n    isShow: {\n      type: Boolean,\n      default: false\n    },\n    orderId: {\n      type: String | Number,\n      default: \"\"\n    },\n    exportOpen: {\n      type: String,\n      default: \"0\"\n    },\n    orderType: {\n      type: Number,\n      default: 0\n    }\n  },\n  computed: _objectSpread({}, mapState(\"admin/order\", [\"splitOrder\"])),\n  watch: {\n    \"formValidate.shipStatus\": {\n      handler: function handler(nVal, oVal) {\n        var _this = this;\n\n        if (nVal == 1) {\n          this.getOrderExport(\"\");\n        }\n\n        if (nVal == 2 && !this.formValidate.sendName) {\n          getSender().then(function (res) {\n            _this.formValidate.sendName = res.data.to_name;\n            _this.formValidate.sendPhone = res.data.to_tel;\n            _this.formValidate.sendAddress = res.data.to_add;\n          });\n          this.getOrderExport(1);\n        }\n\n        this.$refs[\"formValidate\"].resetFields();\n      },\n      deep: true\n    },\n    \"formValidate.gender\": {\n      handler: function handler(nVal, oVal) {\n        this.$refs[\"formValidate\"].resetFields();\n      },\n      deep: true\n    }\n  },\n  data: function data() {\n    var _this2 = this;\n\n    return {\n      productType: 0,\n      splitSwitch: true,\n      shipType: [{\n        key: 1,\n        title: \"手动填写\"\n      }, {\n        key: 2,\n        title: \"电子面单打印\"\n      }],\n      radioList: [{\n        key: 1,\n        title: \"发货\"\n      }, {\n        key: 2,\n        title: \"送货\"\n      }, {\n        key: 3,\n        title: \"虚拟\"\n      }],\n      ruleInline: {\n        logisticsCode: [{\n          required: true,\n          message: \"请选择快递公司\",\n          trigger: \"change\"\n        }],\n        number: [{\n          required: true,\n          message: \"请填写快递单号\",\n          trigger: \"change\"\n        }],\n        sendName: [{\n          required: true,\n          message: \"请填写寄件人姓名\",\n          trigger: \"change\"\n        }],\n        sendPhone: [{\n          required: true,\n          message: \"请填写寄件人手机\",\n          trigger: \"change\"\n        }, {\n          pattern: /^1[3456789]\\d{9}$/,\n          message: \"手机号码格式不正确\",\n          trigger: \"blur\"\n        }],\n        sendAddress: [{\n          required: true,\n          message: \"请填写寄件人地址\",\n          trigger: \"change\"\n        }],\n        msg: [{\n          required: true,\n          message: \"请填写备注信息\",\n          trigger: \"change\"\n        }]\n      },\n      formValidate: {\n        gender: 1,\n        shipStatus: 1,\n        logisticsCode: \"\",\n        // 快递公司编号\n        logisticsName: \"\",\n        // 快递公司名称\n        number: \"\",\n        // 快递单号\n        electronic: \"\",\n        //电子面单\n        sendName: \"\",\n        //寄件人姓名\n        sendPhone: \"\",\n        // 寄件人电话\n        sendAddress: \"\",\n        //寄件人地址\n        postPeople: \"\",\n        // 配送员\n        msg: \"\" // 备注\n\n      },\n      logisticsList: [],\n      orderTempList: [],\n      deliveryList: [],\n      manyFormValidate: [],\n      orderStatus: 0,\n      selectData: [],\n      header: [{\n        type: \"selection\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"商品信息\",\n        slot: \"image\",\n        width: 200,\n        align: \"center\"\n      }, {\n        title: \"规格\",\n        slot: \"value\",\n        align: \"center\",\n        minWidth: 120\n      }, {\n        title: \"商品售价\",\n        slot: \"sellPrice\",\n        align: \"center\",\n        minWidth: 100\n      }, {\n        title: \"商品优惠价\",\n        slot: \"price\",\n        align: \"center\",\n        minWidth: 100\n      }, {\n        title: \"总数\",\n        key: \"cart_num\",\n        align: \"center\",\n        minWidth: 80\n      }, {\n        title: \"待发数量\",\n        key: \"surplus_num\",\n        align: \"center\",\n        width: 180,\n        render: function render(h, params) {\n          return h(\"div\", [h(\"InputNumber\", {\n            props: {\n              min: 1,\n              max: params.row.numShow,\n              value: params.row.surplus_num || 1\n            },\n            on: {\n              \"on-change\": function onChange(e) {\n                params.row.surplus_num = e || 1;\n                _this2.manyFormValidate[params.index] = params.row;\n\n                _this2.selectData.forEach(function (v, index) {\n                  if (v.cart_id === params.row.cart_id) {\n                    _this2.selectData.splice(index, 1, params.row);\n                  }\n                });\n              }\n            }\n          })]);\n        }\n      }]\n    };\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    this.getOrderExport();\n    this.getDelivery();\n    this.$nextTick(function (e) {\n      _this3.getCartInfo(_this3.orderType);\n    });\n  },\n  methods: {\n    // 获取配送人\n    getDelivery: function getDelivery() {\n      var _this4 = this;\n\n      orderDeliveryAll().then(function (res) {\n        _this4.deliveryList = res.data;\n      });\n    },\n    //查看大图\n    inited: function inited(viewer) {\n      this.$viewer = viewer;\n    },\n    //物流公司\n    getOrderExport: function getOrderExport(status) {\n      var _this5 = this;\n\n      orderExport(status ? status : \"\").then(function (res) {\n        _this5.logisticsList = res.data;\n      });\n    },\n    changeSplitStatus: function changeSplitStatus(status) {\n      var _this6 = this;\n\n      if (status) {\n        splitCartInfo(this.orderId).then(function (res) {\n          var data = res.data;\n          data.forEach(function (item) {\n            item.numShow = item.surplus_num;\n          });\n          _this6.manyFormValidate = data;\n        });\n      }\n    },\n    getCartInfo: function getCartInfo(data) {\n      var _this7 = this;\n\n      this.$set(this, \"orderStatus\", data);\n      this.$set(this, \"splitSwitch\", data === 8 ? true : false); // if (data === 8) {\n\n      splitCartInfo(this.orderId).then(function (res) {\n        var data = res.data;\n        data.forEach(function (item) {\n          item.numShow = item.surplus_num;\n        });\n        _this7.manyFormValidate = data;\n        _this7.productType = data[0].product_type;\n\n        if (_this7.productType == 3) {\n          _this7.radioList.splice(0, 2);\n\n          _this7.formValidate.gender = 3;\n        }\n      }); // }\n    },\n    selectOne: function selectOne(data) {\n      this.selectData = data;\n    },\n    handleSubmit: function handleSubmit(name) {\n      var _this8 = this;\n\n      if (this.formValidate.gender == 1) {\n        this.$refs[name].validate(function (valid) {\n          var paramsData = {};\n          paramsData.type = _this8.formValidate.gender;\n          paramsData.express_record_type = parseFloat(_this8.formValidate.shipStatus);\n          paramsData.delivery_name = _this8.formValidate.logisticsName;\n          paramsData.delivery_code = _this8.formValidate.logisticsCode;\n          paramsData.cart_ids = []; // 手动\n\n          if (_this8.formValidate.gender == 1 && _this8.formValidate.shipStatus == 1) {\n            paramsData.delivery_id = _this8.formValidate.number;\n          } // 电子\n\n\n          if (_this8.formValidate.gender == 1 && _this8.formValidate.shipStatus == 2) {\n            paramsData.to_name = _this8.formValidate.sendName;\n            paramsData.to_tel = _this8.formValidate.sendPhone;\n            paramsData.to_addr = _this8.formValidate.sendAddress;\n            paramsData.express_temp_id = _this8.formValidate.electronic;\n          }\n\n          if (valid && !_this8.splitSwitch) {\n            orderDelivery(_this8.orderId, paramsData).then(function (res) {\n              _this8.$Message.success(res.msg);\n\n              _this8.$emit(\"ok\");\n            }).catch(function (error) {\n              _this8.$Message.error(error.msg);\n            });\n          } else if (valid && _this8.splitSwitch) {\n            var data = {\n              id: _this8.orderId,\n              datas: _objectSpread({}, paramsData)\n            };\n            data.datas.cart_ids = [];\n\n            _this8.selectData.forEach(function (v) {\n              data.datas.cart_ids.push({\n                cart_id: v.cart_id,\n                cart_num: v.surplus_num\n              });\n            });\n\n            splitDelivery(data).then(function (res) {\n              _this8.modals = false;\n\n              _this8.$Message.success(res.msg);\n\n              _this8.$emit(\"ok\");\n\n              _this8.splitSwitch = false;\n            }).catch(function (res) {\n              _this8.$Message.error(res.msg);\n            });\n          } else {}\n        });\n      }\n\n      if (this.formValidate.gender == 2) {\n        var people = {};\n        this.deliveryList.forEach(function (el, index) {\n          if (el.uid == _this8.formValidate.postPeople) {\n            people = el;\n          }\n        });\n\n        if (!this.splitSwitch) {\n          orderDelivery(this.orderId, {\n            type: this.formValidate.gender,\n            sh_delivery_name: people.wx_name,\n            sh_delivery_id: people.phone,\n            sh_delivery_uid: people.uid\n          }).then(function (res) {\n            _this8.$Message.success(res.msg);\n\n            _this8.$emit(\"ok\");\n          }).catch(function (error) {\n            _this8.$Message.error(error.msg);\n          });\n        } else {\n          var paramsData = {\n            type: this.formValidate.gender,\n            sh_delivery_name: people.wx_name,\n            sh_delivery_id: people.phone,\n            sh_delivery_uid: people.uid,\n            cart_ids: []\n          };\n          this.selectData.forEach(function (v) {\n            paramsData.cart_ids.push({\n              cart_id: v.cart_id,\n              cart_num: v.surplus_num\n            });\n          });\n          var data = {\n            id: this.orderId,\n            datas: _objectSpread({}, paramsData)\n          };\n          splitDelivery(data).then(function (res) {\n            _this8.modals = false;\n\n            _this8.$Message.success(res.msg);\n\n            _this8.$emit(\"ok\");\n\n            _this8.splitSwitch = false;\n          }).catch(function (res) {\n            _this8.$Message.error(res.msg);\n          });\n        }\n      }\n\n      if (this.formValidate.gender == 3) {\n        orderDelivery(this.orderId, {\n          type: this.formValidate.gender,\n          remark: this.formValidate.msg\n        }).then(function (res) {\n          _this8.$Message.success(res.msg);\n\n          _this8.$emit(\"ok\");\n        }).catch(function (error) {\n          _this8.$Message.error(error.msg);\n        });\n      }\n    },\n    close: function close() {\n      this.$emit(\"close\");\n    },\n    // 物流选中\n    bindChange: function bindChange(val) {\n      var _this9 = this;\n\n      this.formValidate.logisticsName = val.label;\n\n      if (this.formValidate.shipStatus == 2) {\n        orderTemp({\n          com: val.value\n        }).then(function (res) {\n          _this9.orderTempList = res.data.data;\n        });\n      }\n    },\n    lookImg: function lookImg() {\n      var _this10 = this;\n\n      if (this.formValidate.electronic) {\n        this.orderTempList.forEach(function (el, index) {\n          if (el.temp_id == _this10.formValidate.electronic) {\n            _this10.$viewer.view(index);\n          }\n        });\n      } else {\n        this.$Message.error(\"请选择电子面单\");\n      }\n    }\n  }\n};",null]}