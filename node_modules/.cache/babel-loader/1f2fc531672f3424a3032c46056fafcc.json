{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/marketing/storeDiscounts/create.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/marketing/storeDiscounts/create.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport goodsList from \"@/components/goodsList/index\";\nimport uploadPictures from \"@/components/uploadPictures\";\nimport { lotteryDetailApi, discountsSave, discountsGetDetails } from \"@/api/discounts\"; //详情 创建 编辑\n\nimport { discountsFrom } from \"./formRule/discountsFrom\";\nimport { // labelListApi,\ngenerateIdGetAttrApi, getProductAttr } from \"@/api/product\";\nimport { productAttrsApi } from \"@/api/marketing\";\nimport { formatDate as _formatDate } from \"@/utils/validate\";\nimport userLabel from \"@/components/labelList\";\nexport default {\n  name: \"lotteryCreate\",\n  components: {\n    goodsList: goodsList,\n    uploadPictures: uploadPictures,\n    userLabel: userLabel\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      dataLabel: [],\n      labelShow: false,\n      ggModel: false,\n      modals: false,\n      loading: false,\n      manyFormValidate: [],\n      selectProductAttrList: [],\n      header: [{\n        type: \"selection\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"图片\",\n        slot: \"image\",\n        width: 120,\n        align: \"center\"\n      }, {\n        title: \"规格\",\n        key: \"value\",\n        align: \"center\",\n        minWidth: 120\n      }, {\n        title: \"售价\",\n        key: \"p_price\",\n        align: \"center\",\n        minWidth: 120\n      }, {\n        title: \"优惠价\",\n        key: \"price\",\n        align: \"center\",\n        minWidth: 120,\n        render: function render(h, params) {\n          return h(\"div\", [h(\"InputNumber\", {\n            props: {\n              min: 0,\n              // max: params.row.cart_num,\n              value: params.row.price\n            },\n            on: {\n              \"on-change\": function onChange(e) {\n                params.row.price = e;\n                _this.manyFormValidate[params.index] = params.row;\n\n                _this.selectProductAttrList.forEach(function (v, index) {\n                  if (v.value === params.row.value) {\n                    _this.selectProductAttrList.splice(index, 1, params.row);\n                  }\n                });\n              }\n            }\n          })]);\n        }\n      }],\n      // userLabelList: [], //用户标签列表\n      userLevelListApi: [],\n      //用户等级列表\n      submitOpen: false,\n      spinShow: false,\n      addGoodsModel: false,\n      editData: {},\n      myConfig: {\n        autoHeightEnabled: false,\n        // 编辑器不自动被内容撑高\n        initialFrameHeight: 500,\n        // 初始容器高度\n        initialFrameWidth: \"100%\",\n        // 初始容器宽度\n        UEDITOR_HOME_URL: \"/admin/UEditor/\",\n        serverUrl: \"\"\n      },\n      isChoice: \"单选\",\n      current: 0,\n      modalPic: false,\n      modal_loading: false,\n      images: [],\n      templateList: [{\n        id: 0,\n        name: \"非付费会员\"\n      }, {\n        id: 1,\n        name: \"付费会员\"\n      }],\n      columns: [{\n        title: \"商品名称\",\n        slot: \"store_name\",\n        width: 300,\n        align: \"center\"\n      }, {\n        title: \"参与规格\",\n        slot: \"attr\",\n        align: \"center\",\n        minWidth: 120\n      }, {\n        title: \"操作\",\n        slot: \"setting\",\n        align: \"center\",\n        width: 180\n      }],\n      goodsAddType: \"\",\n      specsMainData: [],\n      specsData: [],\n      formValidate: {\n        title: \"\",\n        //套餐名称\n        type: 0,\n        //套餐类型\n        image: \"\",\n        //套餐主图\n        is_time: 0,\n        //是否限时\n        is_limit: 0,\n        //限量1/不限量0\n        limit_num: 0,\n        //限量\n        link_ids: [],\n        //参与用户标签\n        time: [],\n        //套餐时间\n        sort: 0,\n        //排序\n        free_shipping: 1,\n        //是否包邮\n        status: 1,\n        products: []\n      },\n      ruleValidate: discountsFrom,\n      currentid: \"\",\n      picTit: \"\",\n      tableIndex: 0,\n      copy: 0,\n      editIndex: null,\n      id: \"\",\n      rate_price: 0\n    };\n  },\n  filters: {\n    typeName: function typeName(type) {\n      if (type == 1) {\n        return \"未中奖\";\n      } else if (type == 2) {\n        return \"积分\";\n      } else if (type == 3) {\n        return \"余额\";\n      } else if (type == 4) {\n        return \"红包\";\n      } else if (type == 5) {\n        return \"优惠券\";\n      } else if (type == 6) {\n        return \"商品\";\n      }\n    }\n  },\n  computed: _objectSpread({}, mapState(\"admin/layout\", [\"isMobile\", \"menuCollapse\"]), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 135;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    }\n  }),\n  mounted: function mounted() {\n    if (this.$route.query.id) {\n      this.id = this.$route.query.id;\n      this.current = 0;\n      this.copy = this.$route.query.copy || 0;\n      this.getInfo();\n    } // this.labelListApi();\n\n  },\n  methods: {\n    closeLabel: function closeLabel(label) {\n      var index = this.dataLabel.indexOf(this.dataLabel.filter(function (d) {\n        return d.id == label.id;\n      })[0]);\n      this.dataLabel.splice(index, 1);\n    },\n    activeData: function activeData(dataLabel) {\n      this.labelShow = false;\n      this.dataLabel = dataLabel;\n    },\n    openLabel: function openLabel(row) {\n      this.labelShow = true;\n      this.$refs.userLabel.userLabel(JSON.parse(JSON.stringify(this.dataLabel)));\n    },\n    // 标签弹窗关闭\n    labelClose: function labelClose() {\n      this.labelShow = false;\n    },\n    //勾选规格\n    selectOne: function selectOne(data) {\n      this.selectProductAttrList = data;\n    },\n    //提交选中规格\n    getAttr: function getAttr() {\n      if (!this.selectProductAttrList.length) return this.$Message.warning(\"请先选择规格\");\n      var type;\n      this.goodsAddType === \"Main\" ? type = this.specsMainData : type = this.specsData;\n      this.$set(type[this.tabIndex], \"attr\", this.selectProductAttrList);\n      this.$set(type[this.tabIndex], \"items\", this.selectProductAttrList[0].items);\n      this.ggModel = false;\n    },\n    clearOne: function clearOne(data) {},\n    //修改优惠价格\n    changeRatePrice: function changeRatePrice() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.manyFormValidate[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var val = _step.value;\n          this.$set(val, \"price\", this.rate_price);\n          var list = this.selectProductAttrList;\n\n          for (var i = 0; i < list.length; i++) {\n            if (val.value === list[i].value) {\n              this.$set(val, \"_checked\", true);\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n    // 规格列表\n    generate: function generate(id, type) {\n      var _this2 = this;\n\n      productAttrsApi(id, type).then(function (res) {\n        var info = JSON.parse(JSON.stringify(res.data.info.attrs));\n        var items = JSON.parse(JSON.stringify(res.data.info.items));\n\n        for (var k = 0; k < info.length; k++) {\n          var element = info[k];\n          element.items = items;\n        }\n\n        var data = _this2.goodsAddType === \"Main\" ? _this2.specsMainData[_this2.tabIndex].attr || [] : _this2.specsData[_this2.tabIndex].attr || [];\n        _this2.selectProductAttrList = [];\n\n        if (data.length) {\n          for (var i = 0; i < data.length; i++) {\n            var _element = data[i];\n\n            for (var j = 0; j < info.length; j++) {\n              if (_element.value === info[j].value) {\n                _this2.$set(info[j], \"price\", _element.price);\n\n                _this2.$set(info[j], \"_checked\", true);\n\n                _this2.selectProductAttrList.push(info[j]);\n              }\n            }\n          }\n        }\n\n        _this2.manyFormValidate = info;\n        _this2.ggModel = true;\n      }).catch(function (res) {\n        _this2.$Message.error(res.msg);\n      });\n    },\n    // 选择的商品\n    getProductId: function getProductId(productList) {\n      var _this3 = this;\n\n      if (this.goodsAddType === \"Main\" && (productList.length > 1 || this.specsMainData.length > 0)) {\n        this.$Message.warning(\"最多添加一个商品\");\n        return;\n      }\n\n      var pData = JSON.parse(JSON.stringify(productList));\n\n      for (var i = 0; i < pData.length; i++) {\n        pData[i].attr = [];\n      }\n\n      this.$nextTick(function (e) {\n        if (_this3.goodsAddType === \"Main\") {\n          var arr = _this3.concat_arr(_this3.specsData, pData);\n\n          if (arr.length) {\n            return _this3.$Message.warning(\"已存在搭配商品\");\n          }\n\n          _this3.specsMainData = _this3.specsMainData.concat(pData);\n        } else {\n          var _arr = _this3.concat_arr(_this3.specsData, pData);\n\n          var mainArr = _this3.concat_arr(_this3.specsMainData, pData);\n\n          if (_arr.length || mainArr.length) {\n            return _this3.$Message.warning(\"已存在相同主商品/搭配商品\");\n          }\n\n          _this3.specsData = _this3.specsData.concat(pData);\n        }\n\n        _this3.modals = false;\n      });\n    },\n    //用户标签列表\n    // labelListApi() {\n    //   labelListApi().then((res) => {\n    //     this.userLabelList = res.data.list;\n    //     this.userLabelList.map((i) => {\n    //       i.id = i.id + \"\";\n    //     });\n    //   });\n    // },\n    // 具体日期\n    onchangeTime: function onchangeTime(e) {\n      var _this4 = this;\n\n      this.$nextTick(function () {\n        _this4.$set(_this4.formValidate, \"time\", e); // this.formValidate.time = e;\n\n      });\n    },\n    // 详情\n    getInfo: function getInfo() {\n      var _this5 = this;\n\n      this.spinShow = true;\n      discountsGetDetails(this.id).then(function (res) {\n        _this5.spinShow = false;\n        _this5.formValidate = res.data; // this.formValidate.link_ids = res.data.link_ids || [];\n\n        _this5.dataLabel = res.data.link_ids || [];\n        _this5.formValidate.time = res.data.time || [];\n\n        for (var i = 0; i < res.data.products.length; i++) {\n          var element = res.data.products[i];\n\n          if (element.type == 1) {\n            _this5.specsMainData.push(element);\n          } else {\n            _this5.specsData.push(element);\n          }\n        }\n      });\n    },\n    // 下一步\n    next: function next(name) {\n      var _this6 = this;\n\n      if (this.formValidate.type === 1 && !this.specsMainData.length) {\n        return this.$Message.warning(\"请选择主商品\");\n      } else if (this.formValidate.type === 0 && !this.specsData.length) {\n        return this.$Message.warning(\"请选择套餐商品\");\n      }\n\n      this.specsMainData.forEach(function (v) {\n        v.type = 1;\n      });\n      this.specsData.forEach(function (v) {\n        v.type = 0;\n      });\n      var productData;\n\n      if (this.formValidate.type == 1) {\n        productData = this.specsMainData.concat(this.specsData);\n      } else {\n        productData = this.specsData;\n      }\n\n      if (productData.length < 2) {\n        return this.$Message.warning(\"套餐内商品不能少于2个\");\n      }\n\n      for (var i = 0; i < productData.length; i++) {\n        var element = productData[i];\n\n        if (!element.items) {\n          return this.$Message.warning(\"\\u8BF7\\u9009\\u62E9 \".concat(element.store_name, \" \\u7684\\u89C4\\u683C\"));\n        }\n      }\n\n      this.formValidate.products = productData;\n      var activeIds = [];\n      this.dataLabel.forEach(function (item) {\n        activeIds.push(item.id);\n      });\n      this.formValidate.link_ids = activeIds;\n      if (this.submitOpen) return false;\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          _this6.submitOpen = true;\n\n          if (_this6.id && !_this6.copy) {\n            discountsSave(_this6.formValidate).then(\n            /*#__PURE__*/\n            function () {\n              var _ref = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee(res) {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _this6.$Message.success(res.msg);\n\n                        setTimeout(function () {\n                          _this6.submitOpen = false;\n\n                          _this6.$router.push({\n                            path: \"/admin/marketing/store_discounts/index\"\n                          });\n                        }, 500);\n\n                      case 2:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x) {\n                return _ref.apply(this, arguments);\n              };\n            }()).catch(function (res) {\n              _this6.submitOpen = false;\n\n              _this6.$Message.error(res.msg);\n            });\n          } else {\n            discountsSave(_this6.formValidate).then(\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee2(res) {\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _this6.$Message.success(res.msg);\n\n                        setTimeout(function () {\n                          _this6.submitOpen = false;\n\n                          _this6.$router.push({\n                            path: \"/admin/marketing/store_discounts/index\"\n                          });\n                        }, 500);\n\n                      case 2:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }()).catch(function (res) {\n              _this6.submitOpen = false;\n\n              _this6.$Message.error(res.msg);\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    concat_arr: function concat_arr(arr1, arr2) {\n      var result = [];\n\n      for (var i = 0; i < arr1.length; i++) {\n        var obj = arr1[i];\n        var num = obj.product_id;\n        var flag = false;\n\n        for (var j = 0; j < arr2.length; j++) {\n          var aj = arr2[j];\n          var n = aj.product_id;\n\n          if (n == num) {\n            flag = true;\n            break;\n          }\n        }\n\n        if (flag) {\n          result.push(obj);\n        }\n      }\n\n      return result;\n    },\n    // 点击商品图\n    modalPicTap: function modalPicTap(tit, picTit, index) {\n      this.modalPic = true;\n      this.isChoice = tit === \"dan\" ? \"单选\" : \"多选\";\n      this.picTit = picTit || \"\";\n      this.tableIndex = index;\n    },\n    // 获取单张图片信息\n    getPic: function getPic(pc) {\n      switch (this.picTit) {\n        case \"danFrom\":\n          this.formValidate.image = pc.att_dir;\n          break;\n\n        default:\n          this.specsData[this.tableIndex].image = pc.att_dir;\n      }\n\n      this.modalPic = false;\n    },\n    handleRemove: function handleRemove() {\n      this.formValidate.image = \"\";\n    },\n    // 表单验证\n    validate: function validate(prop, status, error) {\n      if (status === false) {\n        this.$Message.error(error);\n        return false;\n      } else {\n        return true;\n      }\n    },\n    cancel: function cancel() {\n      this.modals = false;\n    },\n    //新增商品\n    addGoods: function addGoods(type) {\n      this.goodsAddType = type;\n      this.modals = true;\n    },\n    //编辑设置规格\n    editGoods: function editGoods(row, index, type) {\n      this.goodsAddType = type;\n      this.tabIndex = index;\n      this.generate(row.product_id, 0);\n    },\n    //删除商品\n    deleteGoods: function deleteGoods(index, type) {\n      if (type === \"Main\") {\n        this.specsMainData.splice(index, 1);\n      } else {\n        this.specsData.splice(index, 1);\n      }\n    },\n    //获取数组中某个字段之和\n    sumArr: function sumArr(arr, name) {\n      var arrData = [];\n\n      for (var i = 0; i < arr.length; i++) {\n        arrData.push(arr[i][name]);\n      }\n\n      return eval(arrData.join(\"+\"));\n    },\n    addGoodsData: function addGoodsData(data) {\n      this.editIndex != null ? this.specsData.concat(data) : this.specsData.length < 8 ? this.specsData.push(data) : this.$Message.warning(\"最多添加8个奖品\");\n      this.addGoodsModel = false;\n      this.editIndex = null;\n    },\n    //修改排序\n    onDragDrop: function onDragDrop(a, b) {\n      var _this$specsData;\n\n      (_this$specsData = this.specsData).splice.apply(_this$specsData, [b, 1].concat(_toConsumableArray(this.specsData.splice(a, 1, this.specsData[b]))));\n    },\n    //时间格式转换\n    formatDate: function formatDate(time) {\n      if (time) {\n        var date = new Date(time * 1000);\n        return _formatDate(date, \"yyyy-MM-dd hh:mm\");\n      } else {\n        return \"\";\n      }\n    }\n  }\n};",null]}