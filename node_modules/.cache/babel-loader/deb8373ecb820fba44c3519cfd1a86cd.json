{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/account/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/account/login/index.vue","mtime":1664880383118},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { AccountLogin, loginInfoApi, mobilLogin, resetPassword, copyrightInfoApi } from '@/api/account';\nimport { getHeaderName, getHeaderSider, getMenuSider, getSiderSubmenu } from '@/libs/system';\nimport mixins from '../mixins';\nimport Setting from '@/setting';\nimport util from '@/libs/util';\nimport axios from 'axios'; // import Vcode from \"vue-puzzle-vcode\";\n\nimport Verify from \"@/components/verifition/Verify\";\nexport default {\n  mixins: [mixins],\n  components: {\n    Verify: Verify // Vcode\n\n  },\n  data: function data() {\n    return {\n      fullWidth: document.documentElement.clientWidth,\n      swiperOption: {\n        pagination: '.swiper-pagination',\n        autoplay: true\n      },\n      isShow: false,\n      // 验证码模态框是否出现\n      loading: false,\n      autoLogin: true,\n      imgcode: '',\n      formInline: {\n        username: '',\n        password: '',\n        phone: '',\n        code: '',\n        new_pwd: ''\n      },\n      ruleInline: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        code: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '请填写手机号码',\n          trigger: 'change'\n        }, {\n          pattern: /^1[3456789]\\d{9}$/,\n          message: \"手机号码格式不正确\",\n          trigger: \"change\"\n        }]\n      },\n      errorNum: 0,\n      login_logo: '',\n      swiperList: [],\n      defaultSwiperList: require('@/assets/images/sw.jpg'),\n      loginTab: ['账号登录', '短信登录'],\n      active: 0,\n      isSms: false,\n      disabled: false,\n      text: \"获取验证码\",\n      resetStatus: true,\n      copyright: '',\n      version: ''\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    top != window && (top.location.href = location.href);\n\n    document.onkeydown = function (e) {\n      if (_this.$route.name === 'login') {\n        var key = window.event.keyCode;\n\n        if (key === 13) {\n          _this.handleSubmit('formInline');\n        }\n      }\n    };\n\n    window.addEventListener('resize', this.handleResize);\n  },\n  watch: {\n    fullWidth: function fullWidth(val) {\n      // 为了避免频繁触发resize函数导致页面卡顿，使用定时器\n      if (!this.timer) {\n        // 一旦监听到的screenWidth值改变，就将其重新赋给data里的screenWidth\n        this.screenWidth = val;\n        this.timer = true;\n        var that = this;\n        setTimeout(function () {\n          // 打印screenWidth变化的值\n          that.timer = false;\n        }, 400);\n      }\n    },\n    $route: function $route(n) {\n      this.captchas();\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      if (_this2.screenWidth < 768) {\n        document.getElementsByTagName('canvas')[0] ? document.getElementsByTagName('canvas')[0].removeAttribute('class', 'index_bg') : '';\n      } else {\n        document.getElementsByTagName('canvas')[0] ? document.getElementsByTagName('canvas')[0].className = 'index_bg' : '';\n      }\n\n      _this2.swiperData();\n    });\n    this.captchas();\n    this.getCopyright();\n  },\n  methods: {\n    //切换登录方式\n    loginTabSwitch: function loginTabSwitch(index) {\n      this.active = index;\n      this.formInline.code = \"\";\n    },\n    //发送验证码\n    sendCode: function sendCode(params) {\n      var _this3 = this;\n\n      if (this.disabled) {\n        this.closeModel(params);\n      } // if (this.disabled) return;\n\n\n      this.disabled = true;\n      var n = 60;\n      this.text = \"剩余 \" + n + \"s\";\n      var run = setInterval(function () {\n        n = n - 1;\n\n        if (n < 0) {\n          clearInterval(run);\n        }\n\n        _this3.text = \"剩余 \" + n + \"s\";\n\n        if (_this3.text < \"剩余 \" + 0 + \"s\") {\n          _this3.disabled = false;\n          _this3.text = \"重新获取\";\n        }\n      }, 1000);\n    },\n    code: function code() {\n      this.isSms = true;\n      if (!this.formInline.phone) return this.$Message.error('请填写手机号码');\n      if (!/^1(3|4|5|7|8|9|6)\\d{9}$/i.test(this.formInline.phone)) return this.$Message.error('请输入正确的手机号码');\n      this.$refs.verify.show();\n    },\n    //忘记密码\n    resetUpwd: function resetUpwd() {\n      if (this.resetStatus) {\n        this.$set(this, 'loginTab', ['忘记密码']);\n        this.resetStatus = false;\n      } else {\n        this.$set(this, 'loginTab', ['账号登录', '短信登录']);\n        this.resetStatus = true;\n        this.active = 0;\n      }\n\n      this.$refs['formInline'].resetFields();\n    },\n    swiperData: function swiperData() {\n      var _this4 = this;\n\n      loginInfoApi().then(function (res) {\n        var data = res.data || {};\n        _this4.login_logo = data.login_logo ? data.login_logo : require('@/assets/images/logo.png');\n        _this4.swiperList = data.slide.length ? data.slide : [_this4.defaultSwiperList]; // this.swiperList = data.slide.length ? data.slide : [{ slide: this.defaultSwiperList }];\n\n        _this4.$cache.local.setJSON('file_size_max', data.upload_file_size_max);\n      }).catch(function (res) {\n        _this4.$Message.error(res.msg);\n      });\n    },\n    getChilden: function getChilden(data) {\n      if (data.length && data[0].children) {\n        return this.getChilden(data[0].children);\n      }\n\n      return data[0].path;\n    },\n    getCopyright: function getCopyright() {\n      var _this5 = this;\n\n      copyrightInfoApi().then(function (res) {\n        var data = res.data;\n        _this5.copyright = data.copyrightContext;\n        _this5.version = data.version;\n      }).catch(function (res) {\n        _this5.$Message.error(res.msg);\n      });\n    },\n    // 关闭模态框\n    closeModel: function closeModel(params) {\n      var _this6 = this;\n\n      if (this.resetStatus == false) {\n        if (this.formInline.phone == \"\") return this.$Message.error(\"手机号不能为空\");\n        if (this.formInline.new_pwd == \"\") return this.$Message.error(\"新密码不能为空\");\n        resetPassword({\n          phone: this.formInline.phone,\n          code: this.formInline.code,\n          new_pwd: this.formInline.new_pwd // captchaType: 'blockPuzzle',\n          // captchaVerification: params.captchaVerification,\n\n        }).then(function (res) {\n          _this6.$Message.success(res.msg);\n\n          _this6.$set(_this6, 'loginTab', ['账号登录', '短信登录']);\n\n          _this6.resetStatus = true;\n          _this6.active = 0;\n\n          _this6.$refs['formInline'].resetFields();\n        }).catch(function (err) {\n          _this6.$Message.error(err.msg);\n        });\n      } else if (this.resetStatus == true && this.active == 0) {\n        var msg = this.$Message.loading({\n          content: '登录中...',\n          duration: 0\n        });\n        AccountLogin({\n          account: this.formInline.username,\n          pwd: this.formInline.password,\n          imgcode: this.formInline.code,\n          captchaType: 'blockPuzzle',\n          captchaVerification: params.captchaVerification\n        }).then(\n        /*#__PURE__*/\n        function () {\n          var _ref = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(res) {\n            var expires, db, menuSider, headerSider, toPath, headerName, filterMenuSider;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    msg();\n\n                    if (res.data.unique_auth.length) {\n                      _context.next = 3;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\", _this6.$Message.error('您暂无任何菜单权限'));\n\n                  case 3:\n                    _this6.$store.dispatch('admin/account/setPageTitle');\n\n                    expires = res.data.expires_time; // 记录用户登陆信息\n\n                    util.cookies.set('uuid', res.data.user_info.id, {\n                      expires: expires\n                    });\n                    util.cookies.set('token', res.data.token, {\n                      expires: expires\n                    });\n                    util.cookies.set('expires_time', res.data.expires_time, {\n                      expires: expires\n                    });\n                    _context.next = 10;\n                    return _this6.$store.dispatch('admin/db/database', {\n                      user: true\n                    });\n\n                  case 10:\n                    db = _context.sent;\n                    // 保存菜单信息\n                    // db.set('menus', res.data.menus).set('unique_auth', res.data.unique_auth).set('user_info', res.data.user_info).write();\n                    db.set('unique_auth', res.data.unique_auth).set('user_info', res.data.user_info).write();\n                    menuSider = res.data.menus;\n\n                    _this6.$store.commit('admin/menus/getmenusNav', menuSider);\n\n                    headerSider = getHeaderSider(res.data.menus);\n\n                    _this6.$store.commit('admin/menu/setHeader', headerSider);\n\n                    toPath = _this6.getChilden(res.data.menus); // 获取侧边栏菜单\n\n                    headerName = getHeaderName({\n                      path: toPath,\n                      query: {},\n                      params: {}\n                    }, menuSider);\n                    filterMenuSider = getMenuSider(menuSider, headerName); // 指定当前显示的侧边菜单\n\n                    _this6.$store.commit('admin/menu/setSider', filterMenuSider[0].children); //设置首页path\n\n\n                    _this6.$store.commit('admin/menus/setIndexPath', toPath); // 记录用户信息\n\n\n                    _this6.$store.dispatch('admin/user/set', {\n                      name: res.data.user_info.account,\n                      avatar: res.data.user_info.head_pic,\n                      access: res.data.unique_auth,\n                      logo: res.data.logo,\n                      logoSmall: res.data.logo_square,\n                      version: res.data.version,\n                      newOrderAudioLink: res.data.newOrderAudioLink\n                    }); // if (this.jigsaw) this.jigsaw.reset();\n\n\n                    return _context.abrupt(\"return\", _this6.$router.replace({\n                      path: _this6.$route.query.redirect || toPath || '/admin/'\n                    }));\n\n                  case 23:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }()).catch(function (res) {\n          msg();\n          var data = res === undefined ? {} : res;\n          _this6.errorNum++;\n\n          _this6.captchas();\n\n          _this6.$Message.error(data.msg || '登录失败');\n        });\n      } else {\n        var _msg = this.$Message.loading({\n          content: '登录中...',\n          duration: 0\n        });\n\n        mobilLogin({\n          phone: this.formInline.phone,\n          code: this.formInline.code\n        }).then(\n        /*#__PURE__*/\n        function () {\n          var _ref2 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee2(res) {\n            var expires, db, menuSider, headerSider, toPath, headerName, filterMenuSider;\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _msg();\n\n                    if (res.data.unique_auth.length) {\n                      _context2.next = 3;\n                      break;\n                    }\n\n                    return _context2.abrupt(\"return\", _this6.$Message.error('您暂无任何菜单权限'));\n\n                  case 3:\n                    _this6.$store.dispatch('admin/account/setPageTitle');\n\n                    expires = res.data.expires_time; // 记录用户登陆信息\n\n                    util.cookies.set('uuid', res.data.user_info.id, {\n                      expires: expires\n                    });\n                    util.cookies.set('token', res.data.token, {\n                      expires: expires\n                    });\n                    util.cookies.set('expires_time', res.data.expires_time, {\n                      expires: expires\n                    });\n                    _context2.next = 10;\n                    return _this6.$store.dispatch('admin/db/database', {\n                      user: true\n                    });\n\n                  case 10:\n                    db = _context2.sent;\n                    // 保存菜单信息\n                    // db.set('menus', res.data.menus).set('unique_auth', res.data.unique_auth).set('user_info', res.data.user_info).write();\n                    db.set('unique_auth', res.data.unique_auth).set('user_info', res.data.user_info).write();\n                    menuSider = res.data.menus;\n\n                    _this6.$store.commit('admin/menus/getmenusNav', menuSider);\n\n                    headerSider = getHeaderSider(res.data.menus);\n\n                    _this6.$store.commit('admin/menu/setHeader', headerSider);\n\n                    toPath = _this6.getChilden(res.data.menus); // 获取侧边栏菜单\n\n                    headerName = getHeaderName({\n                      path: toPath,\n                      query: {},\n                      params: {}\n                    }, menuSider);\n                    filterMenuSider = getMenuSider(menuSider, headerName); // 指定当前显示的侧边菜单\n\n                    _this6.$store.commit('admin/menu/setSider', filterMenuSider[0].children); //设置首页path\n\n\n                    _this6.$store.commit('admin/menus/setIndexPath', toPath); // 记录用户信息\n\n\n                    _this6.$store.dispatch('admin/user/set', {\n                      name: res.data.user_info.account,\n                      avatar: res.data.user_info.head_pic,\n                      access: res.data.unique_auth,\n                      logo: res.data.logo,\n                      logoSmall: res.data.logo_square,\n                      version: res.data.version,\n                      newOrderAudioLink: res.data.newOrderAudioLink\n                    });\n\n                    return _context2.abrupt(\"return\", _this6.$router.replace({\n                      path: _this6.$route.query.redirect || toPath || '/admin/'\n                    }));\n\n                  case 23:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          return function (_x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }()).catch(function (res) {\n          _msg();\n\n          var data = res === undefined ? {} : res;\n          _this6.errorNum++;\n\n          _this6.captchas();\n\n          _this6.$Message.error(data.msg || '登录失败');\n        });\n      }\n    },\n    getExpiresTime: function getExpiresTime(expiresTime) {\n      var nowTimeNum = Math.round(new Date() / 1000);\n      var expiresTimeNum = expiresTime - nowTimeNum;\n      return parseFloat(parseFloat(parseFloat(expiresTimeNum / 60) / 60) / 24);\n    },\n    handleResize: function handleResize(event) {\n      this.fullWidth = document.documentElement.clientWidth;\n\n      if (this.fullWidth < 768) {\n        document.getElementsByTagName('canvas')[0].removeAttribute('class', 'index_bg');\n      } else {\n        document.getElementsByTagName('canvas')[0].className = 'index_bg';\n      }\n    },\n    captchas: function captchas() {\n      this.imgcode = Setting.apiBaseURL + '/captcha_pro?' + Date.parse(new Date());\n    },\n    handleSubmit: function handleSubmit(name) {\n      var _this7 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          _this7.$refs.verify.show(); // if (this.errorNum >= 2) {\n          //     this.isShow = true;\n          // }else {\n          //     this.closeModel();\n          // }\n\n        }\n      });\n    },\n    resetPwd: function resetPwd(name) {\n      var _this8 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          _this8.$refs.verify.show(); // if (this.formInline.phone == \"\") return this.$Message.error(\"手机号不能为空\");\n          // if (this.formInline.new_pwd == \"\") return this.$Message.error(\"新密码不能为空\");\n          // resetPassword({\n          //     phone: this.formInline.phone,\n          //     code: this.formInline.code,\n          //     new_pwd: this.formInline.new_pwd,\n          //     captchaType: 'blockPuzzle',\n          //     captchaVerification: params.captchaVerification,\n          // }).then(res => {\n          //     this.$Message.success(res.msg);\n          //     this.$set(this, 'loginTab', ['账号登录', '短信登录']);\n          //     this.resetStatus = true;\n          //     this.active = 0;\n          //     this.$refs['formInline'].resetFields();\n          // }).catch(err => {\n          //     this.$Message.error(err.msg)\n          // })\n\n        }\n      });\n    },\n    success: function success(params) {\n      var _this9 = this;\n\n      if (this.isSms) {\n        var verification = Setting.apiBaseURL.replace(/adminapi/, 'api');\n        axios.get(verification + '/verify_code').then(function (res) {\n          var codeData = {\n            type: \"login\",\n            phone: _this9.formInline.phone,\n            key: res.data.data.key,\n            code: '',\n            captchaType: 'blockPuzzle',\n            captchaVerification: params.captchaVerification\n          };\n          fetch(verification + '/register/verify', {\n            method: 'POST',\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(codeData)\n          }).then(function (response) {\n            _this9.sendCode();\n          }).catch(function (err) {\n            _this9.$Message.error(err.msg);\n          });\n        });\n      } else {\n        this.closeModel(params); //可执行通过验证后的操作\n      }\n    },\n    // 用户点击遮罩层，应该关闭模态框\n    onClose: function onClose() {\n      this.isShow = false;\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    if (this.fullWidth < 768) {\n      document.getElementsByTagName('canvas')[0] ? document.getElementsByTagName('canvas')[0].removeAttribute('class', 'index_bg') : '';\n    } else {\n      document.getElementsByTagName('canvas')[0] ? document.getElementsByTagName('canvas')[0].className = 'index_bg' : '';\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n    document.getElementsByTagName('canvas')[0] ? document.getElementsByTagName('canvas')[0].removeAttribute('class', 'index_bg') : '';\n  }\n};",null]}