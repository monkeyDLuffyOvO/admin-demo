{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/kefu/mobile/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/kefu/mobile/index.vue","mtime":1661152956000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Setting from '@/setting';\nimport words from '../components/words';\nimport { Socket } from '@/libs/socket';\nimport util from '@/libs/util';\nimport emojiList from '@/utils/emoji';\nimport { serviceList, transferList, serviceTransfer } from '@/api/kefu';\n\nvar mp3 = require('@/assets/video/notice.mp3');\n\nvar mp3 = new Audio(mp3);\n\nvar chunk = function chunk(arr, num) {\n  num = num * 1 || 1;\n  var ret = [];\n  arr.forEach(function (item, i) {\n    if (i % num === 0) {\n      ret.push([]);\n    }\n\n    ret[ret.length - 1].push(item);\n  });\n  return ret;\n};\n\nexport default {\n  name: 'adminChat_index',\n  data: function data() {\n    return {\n      ops: {\n        vuescroll: {\n          mode: 'native',\n          enable: false,\n          tips: {\n            deactive: 'Push to Load',\n            active: 'Release to Load',\n            start: 'Loading...',\n            beforeDeactive: 'Load Successfully!'\n          },\n          auto: false,\n          autoLoadDistance: 0,\n          pullRefresh: {\n            enable: false\n          },\n          pushLoad: {\n            enable: true,\n            auto: true,\n            autoLoadDistance: 10\n          }\n        },\n        bar: {\n          background: '#393232',\n          opacity: '.5',\n          size: '5px'\n        }\n      },\n      swiperOptions: {},\n      status: false,\n      loading: false,\n      isTool: false,\n      isSwiper: false,\n      isWords: false,\n      autoplay: false,\n      circular: true,\n      interval: 3000,\n      duration: 500,\n      emojiGroup: chunk(emojiList, 21),\n      con: '',\n      toUid: '',\n      limit: 15,\n      upperId: 0,\n      chatList: [],\n      kefuInfo: {},\n      scrollTop: 0,\n      active: true,\n      isScroll: true,\n      oldHeight: 0,\n      selector: '',\n      transferList: [],\n      // 转接列表\n      isTransfer: false,\n      uploadData: {},\n      // 上传参数\n      header: {},\n      fileUrl: '',\n      tourist: 0,\n      activeKF: '',\n      pageWs: ''\n    };\n  },\n  components: {\n    words: words\n  },\n  computed: {\n    isSend: function isSend() {\n      if (this.con.length == 0) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    records: function records() {\n      var _this = this;\n\n      return this.chatList.map(function (item, index) {\n        item.time = _this.$moment(item.add_time * 1000).format('MMMDo h:mm');\n\n        if (index) {\n          if (item.add_time - _this.chatList[index - 1].add_time >= 300) {\n            item.show = true;\n          } else {\n            item.show = false;\n          }\n        } else {\n          item.show = true;\n        }\n\n        return item;\n      });\n    }\n  },\n  created: function created() {\n    this.fileUrl = Setting.apiBaseURL.replace('adminapi', 'kefuapi') + '/upload';\n    this.toUid = this.$route.query.toUid || '';\n    this.nickname = this.$route.query.nickname || '';\n    this.kefuInfo = JSON.parse(util.cookies.kefuGet('kefuInfo'));\n    Promise.all([this.getChatList(), this.getTransferList()]);\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    window.document.title = \"\".concat(this.$route.query.nickname || '', \" - \\u5BF9\\u8BDD\\u8BE6\\u60C5\"); // 上传头部token\n\n    this.header['Authori-zation'] = 'Bearer ' + util.cookies.kefuGet('token');\n    this.bus.pageWs = Socket(true);\n    this.$nextTick(function () {\n      if (typeof _this2.bus.pageWs == 'undefined') {\n        _this2.wsLogin();\n      } else {\n        _this2.wsStart();\n      }\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.bus.pageWs.then(function (ws) {\n      ws.send({\n        data: {\n          id: 0\n        },\n        type: 'to_chat'\n      });\n    });\n  },\n  methods: {\n    goBack: function goBack() {\n      this.$router.go(-1);\n    },\n    wsLogin: function wsLogin() {\n      var _this3 = this;\n\n      var token = util.cookies.kefuGet('token');\n      this.bus.pageWs.then(function (ws) {\n        ws.send({\n          type: 'kefu_login',\n          data: token\n        }); // 消息接收\n\n        ws.$on('success', function (data) {\n          _this3.wsStart();\n        });\n      }).catch(function (error) {\n        setTimeout(function (res) {\n          _this3.wsRestart();\n        }, 2000);\n      });\n    },\n    wsStart: function wsStart() {\n      var _this4 = this;\n\n      var that = this;\n      this.bus.pageWs.then(function (ws) {\n        ws.send({\n          data: {\n            id: _this4.toUid\n          },\n          type: 'to_chat'\n        }); // 消息接收\n\n        ws.$on(['reply', 'chat'], function (data) {\n          if (data.msn_type == 1 || data.msn_type == 2) {\n            data.msn = _this4.replace_em(data.msn);\n          }\n\n          if (data.msn_type == 5) {\n            if (data.uid != _this4.toUid) return;\n          }\n\n          _this4.chatList.push(data);\n\n          _this4.$refs['scrollBox'].refresh();\n\n          _this4.$nextTick(function () {\n            _this4.scrollBom();\n          });\n        });\n        ws.$on('reply', function (data) {// mp3.play();\n        });\n        ws.$on('socket_error', function () {\n          _this4.$util.Tips({\n            title: '连接失败'\n          });\n        });\n        ws.$on('timeout', function (data) {\n          setTimeout(function () {\n            _this4.wsRestart();\n          }, 2000);\n        });\n      }).catch(function (error) {\n        setTimeout(function () {\n          _this4.wsRestart();\n        }, 2000);\n      });\n    },\n    wsRestart: function wsRestart() {\n      this.bus.pageWs = Socket(true);\n      this.wsLogin();\n    },\n    handleFormatError: function handleFormatError(file) {\n      this.$Message.error('上传图片只能是 jpg、jpg、jpeg、gif 格式!');\n    },\n    // 用户详情\n    goUserInfo: function goUserInfo(item, status) {\n      if (!status) {\n        this.$router.push({\n          path: \"/kefu/user/index/\".concat(item.uid, \"/\").concat(item.type)\n        });\n      }\n    },\n    // 上传之前\n    beforeUpload: function beforeUpload() {},\n    // 上传成功\n    handleSuccess: function handleSuccess(res, file, fileList) {\n      if (res.status === 200) {\n        this.$Message.success(res.msg);\n        this.sendMsg(res.data.url, 3);\n      } else {\n        this.$Message.error(res.msg);\n      }\n    },\n    // 滚动到底部\n    scrollBom: function scrollBom() {\n      var _this5 = this;\n\n      setTimeout(function (res) {\n        var num = parseFloat(document.getElementById('chatBox').offsetHeight);\n\n        if (_this5.$refs['scrollBox']) {\n          _this5.$refs['scrollBox'].scrollTo({\n            y: num\n          }, 300);\n        }\n      }, 30);\n    },\n    // 订单详情\n    goOrderDetail: function goOrderDetail(item) {\n      if (item.msn_type == 7) {\n        this.$router.push({\n          path: \"/kefu/orderDetail/\".concat(item.orderInfo.id, \"/1\")\n        });\n      } else {\n        this.$router.push({\n          path: \"/kefu/orderDetail/\".concat(item.orderInfo.id)\n        });\n      } // uni.navigateTo({\n      //     url: `/pages/admin/orderDetail/index?id=${item.msn}`\n      // })\n\n    },\n    // 底部功能区打开\n    openBox: function openBox(key) {\n      var _this6 = this;\n\n      if (key == 1) {\n        this.isTool = false;\n        this.isSwiper = !this.isSwiper;\n      } else {\n        this.isSwiper = false;\n        this.isTool = !this.isTool;\n      }\n\n      this.$refs['scrollBox'].refresh();\n      this.$nextTick(function () {\n        _this6.scrollBom();\n      });\n    },\n    showWords: function showWords() {\n      this.isWords = true;\n    },\n    // 转接\n    goTransfer: function goTransfer() {\n      this.isTransfer = true;\n    },\n    // 转接关闭\n    closeTransfer: function closeTransfer() {\n      this.transferList.forEach(function (el, index) {\n        el.isCheck = false;\n      });\n      this.isTransfer = false;\n    },\n    // 转接确认\n    confirm: function confirm() {\n      var _this7 = this;\n\n      if (this.activeKF) {\n        serviceTransfer({\n          uid: this.toUid,\n          kefuToUid: this.activeKF\n        }).then(function (res) {\n          _this7.transferList.forEach(function (el, index) {\n            el.isCheck = false;\n          });\n\n          _this7.$Message.success(res.msg);\n\n          _this7.isTransfer = false;\n        }).catch(function (error) {\n          _this7.$Message.error(error.msg);\n        });\n      } else {\n        this.$Message.error('请选择转接客服');\n      }\n    },\n    // 商品信息\n    goodsInfo: function goodsInfo() {\n      this.$router.push({\n        path: '/kefu/goods/list?toUid=' + this.toUid\n      });\n    },\n    // 表情点击\n    addEmoji: function addEmoji(item) {\n      var val = \"[\".concat(item, \"]\");\n      this.con += val;\n    },\n    // 聊天表情转换\n    replace_em: function replace_em(str) {\n      str = str.replace(/\\[em-([\\s\\S]*)\\]/g, \"<span class='em em-$1'/></span>\");\n      return str;\n    },\n    // 获取聊天列表\n    getChatList: function getChatList() {\n      var _this8 = this;\n\n      var self = this;\n      serviceList({\n        limit: this.limit,\n        uid: this.toUid,\n        upperId: this.upperId,\n        is_tourist: this.$route.query.is_tourist\n      }).then(function (res) {\n        var sH = 0;\n        res.data.forEach(function (el) {\n          if (el.msn_type == 1 || el.msn_type == 2) {\n            el.msn = _this8.replace_em(el.msn);\n          }\n        });\n        var selector = '';\n\n        if (_this8.upperId == 0) {\n          selector = \"chat_\".concat(res.data[res.data.length - 1].id);\n        } else {\n          selector = \"chat_\".concat(_this8.chatList[0].id);\n        }\n\n        _this8.selector = selector;\n        _this8.chatList = [].concat(_toConsumableArray(res.data), _toConsumableArray(_this8.chatList));\n        _this8.loading = false;\n        _this8.isScroll = res.data.length >= _this8.limit;\n\n        _this8.$nextTick(function () {\n          _this8.$emit('change', true);\n\n          _this8.$refs['scrollBox'].refresh();\n\n          if (_this8.upperId == 0) {\n            setTimeout(function (res) {\n              var num = parseFloat(document.getElementById(selector).offsetTop) - 60;\n\n              _this8.$refs['scrollBox'].scrollTo({\n                y: num\n              }, 0);\n            }, 600);\n          }\n        });\n      });\n    },\n    // 发送消息\n    sendText: function sendText() {\n      if (!this.isSend) {\n        return this.$Message.error('请输入内容');\n      }\n\n      this.sendMsg(this.con, 1);\n      this.con = '';\n    },\n    // ws发送\n    sendMsg: function sendMsg(msn, type) {\n      var obj = {\n        type: 'chat',\n        data: {\n          msn: msn,\n          type: type,\n          to_uid: this.toUid\n        }\n      };\n      this.bus.pageWs.then(function (ws) {\n        ws.send(obj);\n      });\n    },\n    // 图片上传\n    uploadImg: function uploadImg() {\n      var self = this;\n      self.$util.uploadImageOne('upload/image', function (res) {\n        if (res.status == 200) {\n          self.sendMsg(res.data.url, 3);\n        }\n      });\n    },\n    // 常用于选择\n    selectWords: function selectWords(item) {\n      this.isWords = false;\n      this.sendMsg(item.message, 1);\n    },\n    //  商品详情页\n    goProduct: function goProduct(item) {\n      this.$router.push({\n        path: '/kefu/goods/detail?goodsId=' + item.msn\n      });\n    },\n    // 管理员订单\n    goAdminOrder: function goAdminOrder() {\n      this.$router.push({\n        path: '/kefu/orderList/0/' + this.toUid\n      });\n    },\n    // 滚动到底部\n    height: function height() {\n      var self = this;\n      var scrollTop = 0;\n      var info = uni.createSelectorQuery().select('.chat');\n      setTimeout(function (res) {\n        info.boundingClientRect(function (data) {\n          // data - 各种参数\n          scrollTop = data.height;\n\n          if (self.active) {\n            self.scrollTop = parseInt(scrollTop) + 500;\n          } else {\n            self.scrollTop = parseInt(scrollTop) + 100;\n          }\n        }).exec();\n      }, 1000);\n    },\n    // 转接列表\n    getTransferList: function getTransferList() {\n      var _this9 = this;\n\n      transferList({\n        uid: this.toUid\n      }).then(function (res) {\n        res.data.list.forEach(function (item, index) {\n          item.isCheck = false;\n        });\n        _this9.transferList = res.data.list;\n      });\n    },\n    // 关闭常用语\n    closeBox: function closeBox() {\n      this.isWords = false;\n    },\n    // 选择话术\n    selectMsg: function selectMsg(data) {\n      this.con += data;\n      this.isWords = false;\n    },\n    handleActivate: function handleActivate(vm, refreshDom) {\n      this.upperId = this.chatList[0].id;\n    },\n    handleStart: function handleStart(vm, refreshDom, done) {\n      setTimeout(function () {\n        // load finished\n        done();\n      }, 2000);\n    },\n    handleBeforeDeactivate: function handleBeforeDeactivate(vm, refreshDom, done) {\n      this.getChatList();\n      this.$on('change', function (data) {\n        if (data) done();\n      });\n    },\n    handleDeactivate: function handleDeactivate(vm, refreshDom) {\n      var num = parseFloat(document.getElementById(this.selector).offsetTop) - 60;\n      this.$refs['scrollBox'].scrollTo({\n        y: num\n      }, 0);\n    }\n  }\n};",null]}