{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/components/verifition/Verify/VerifyPoints.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/components/verifition/Verify/VerifyPoints.vue","mtime":1663402499000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/**\n     * VerifyPoints\n     * @description 点选\n     * */\nimport { resetSize as _resetSize, _code_chars, _code_color1, _code_color2 } from './../utils/util';\nimport { aesEncrypt } from './../utils/ase';\nimport { ajCaptcha, ajCaptchaCheck } from \"../../../api/common\";\nexport default {\n  name: 'VerifyPoints',\n  props: {\n    // 弹出式pop，固定fixed\n    mode: {\n      type: String,\n      default: 'fixed'\n    },\n    captchaType: {\n      type: String\n    },\n    // 间隔\n    vSpace: {\n      type: Number,\n      default: 5\n    },\n    imgSize: {\n      type: Object,\n      default: function _default() {\n        return {\n          width: '310px',\n          height: '155px'\n        };\n      }\n    },\n    barSize: {\n      type: Object,\n      default: function _default() {\n        return {\n          width: '310px',\n          height: '40px'\n        };\n      }\n    },\n    defaultImg: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      secretKey: '',\n      // 后端返回的ase加密秘钥\n      checkNum: 3,\n      // 默认需要点击的字数\n      fontPos: [],\n      // 选中的坐标信息\n      checkPosArr: [],\n      // 用户点击的坐标\n      num: 1,\n      // 点击的记数\n      pointBackImgBase: '',\n      // 后端获取到的背景图片\n      poinTextList: [],\n      // 后端返回的点击字体顺序\n      backToken: '',\n      // 后端返回的token值\n      setSize: {\n        imgHeight: 0,\n        imgWidth: 0,\n        barHeight: 0,\n        barWidth: 0\n      },\n      tempPoints: [],\n      text: '',\n      barAreaColor: undefined,\n      barAreaBorderColor: undefined,\n      showRefresh: true,\n      bindingClick: true\n    };\n  },\n  computed: {\n    resetSize: function resetSize() {\n      return _resetSize;\n    }\n  },\n  watch: {\n    // type变化则全面刷新\n    type: {\n      immediate: true,\n      handler: function handler() {\n        this.init();\n      }\n    }\n  },\n  mounted: function mounted() {\n    // 禁止拖拽\n    this.$el.onselectstart = function () {\n      return false;\n    };\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      // 加载页面\n      this.fontPos.splice(0, this.fontPos.length);\n      this.checkPosArr.splice(0, this.checkPosArr.length);\n      this.num = 1;\n      this.getPictrue();\n      this.$nextTick(function () {\n        _this.setSize = _this.resetSize(_this); // 重新设置宽度高度\n\n        _this.$parent.$emit('ready', _this);\n      });\n    },\n    canvasClick: function canvasClick(e) {\n      var _this2 = this;\n\n      this.checkPosArr.push(this.getMousePos(this.$refs.canvas, e));\n\n      if (this.num == this.checkNum) {\n        this.num = this.createPoint(this.getMousePos(this.$refs.canvas, e)); // 按比例转换坐标值\n\n        this.checkPosArr = this.pointTransfrom(this.checkPosArr, this.setSize); // 等创建坐标执行完\n\n        setTimeout(function () {\n          // var flag = this.comparePos(this.fontPos, this.checkPosArr);\n          // 发送后端请求\n          var captchaVerification = _this2.secretKey ? aesEncrypt(_this2.backToken + '---' + JSON.stringify(_this2.checkPosArr), _this2.secretKey) : _this2.backToken + '---' + JSON.stringify(_this2.checkPosArr);\n          var data = {\n            captchaType: _this2.captchaType,\n            'pointJson': _this2.secretKey ? aesEncrypt(JSON.stringify(_this2.checkPosArr), _this2.secretKey) : JSON.stringify(_this2.checkPosArr),\n            'token': _this2.backToken\n          };\n          ajCaptchaCheck(data).then(function (res) {\n            if (res.repCode == '0000') {\n              _this2.barAreaColor = '#4cae4c';\n              _this2.barAreaBorderColor = '#5cb85c';\n              _this2.text = '验证成功';\n              _this2.bindingClick = false;\n\n              if (_this2.mode == 'pop') {\n                setTimeout(function () {\n                  _this2.$parent.clickShow = false;\n\n                  _this2.refresh();\n                }, 1500);\n              }\n\n              _this2.$parent.$emit('success', {\n                captchaVerification: captchaVerification\n              });\n            } else {\n              _this2.$parent.$emit('error', _this2);\n\n              _this2.barAreaColor = '#d9534f';\n              _this2.barAreaBorderColor = '#d9534f';\n              _this2.text = '验证失败';\n              setTimeout(function () {\n                _this2.refresh();\n              }, 700);\n            }\n          });\n        }, 400);\n      }\n\n      if (this.num < this.checkNum) {\n        this.num = this.createPoint(this.getMousePos(this.$refs.canvas, e));\n      }\n    },\n    // 获取坐标\n    getMousePos: function getMousePos(obj, e) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      return {\n        x: x,\n        y: y\n      };\n    },\n    // 创建坐标点\n    createPoint: function createPoint(pos) {\n      this.tempPoints.push(Object.assign({}, pos));\n      return ++this.num;\n    },\n    refresh: function refresh() {\n      this.tempPoints.splice(0, this.tempPoints.length);\n      this.barAreaColor = '#000';\n      this.barAreaBorderColor = '#ddd';\n      this.bindingClick = true;\n      this.fontPos.splice(0, this.fontPos.length);\n      this.checkPosArr.splice(0, this.checkPosArr.length);\n      this.num = 1;\n      this.getPictrue();\n      this.text = '验证失败';\n      this.showRefresh = true;\n    },\n    // 请求背景图片和验证图片\n    getPictrue: function getPictrue() {\n      var _this3 = this;\n\n      var data = {\n        captchaType: this.captchaType,\n        clientUid: localStorage.getItem('point'),\n        ts: Date.now() // 现在的时间戳\n\n      };\n      ajCaptcha(data).then(function (res) {\n        if (res.repCode == '0000') {\n          _this3.pointBackImgBase = res.repData.originalImageBase64;\n          _this3.backToken = res.repData.token;\n          _this3.secretKey = res.repData.secretKey;\n          _this3.poinTextList = res.repData.wordList;\n          _this3.text = '请依次点击【' + _this3.poinTextList.join(',') + '】';\n        } else {\n          _this3.text = res.repMsg;\n        } // 判断接口请求次数是否失效\n\n\n        if (res.repCode == '6201') {\n          _this3.pointBackImgBase = null;\n        }\n      });\n    },\n    // 坐标转换函数\n    pointTransfrom: function pointTransfrom(pointArr, imgSize) {\n      var newPointArr = pointArr.map(function (p) {\n        var x = Math.round(310 * p.x / parseInt(imgSize.imgWidth));\n        var y = Math.round(155 * p.y / parseInt(imgSize.imgHeight));\n        return {\n          x: x,\n          y: y\n        };\n      }); // console.log(newPointArr,\"newPointArr\");\n\n      return newPointArr;\n    }\n  }\n};",null]}