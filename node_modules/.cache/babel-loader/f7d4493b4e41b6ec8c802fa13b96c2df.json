{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/kefu/components/PriceChange.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/kefu/components/PriceChange.vue","mtime":1640264908000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, num } from \"@/utils/validate\";\nimport { validatorDefaultCatch } from \"@/libs/dialog\";\nimport { orderRemark, editPriceApi, orderRefundApi, putRefund } from '@/api/kefu';\nexport default {\n  name: \"PriceChange\",\n  components: {},\n  props: {\n    change: Boolean,\n    orderInfo: {\n      type: Object,\n      default: null\n    },\n    status: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      focus: false,\n      price: 0,\n      refund_price: 0,\n      remark: \"\"\n    };\n  },\n  watch: {\n    orderInfo: function orderInfo() {\n      this.price = this.orderInfo.pay_price;\n      this.refund_price = this.orderInfo.pay_price;\n      this.remark = this.orderInfo.remark;\n    }\n  },\n  methods: {\n    priceChange: function priceChange() {\n      this.focus = true;\n    },\n    close: function close() {\n      this.price = this.orderInfo.pay_price;\n      this.$emit(\"closeChange\", false);\n    },\n    save: function save() {\n      this.savePrice({\n        price: this.price,\n        refund_price: this.refund_price,\n        type: 1,\n        remark: this.remark,\n        id: this.orderInfo.id,\n        order_id: this.orderInfo.order_id\n      });\n    },\n    savePrice: function () {\n      var _savePrice = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(opt) {\n        var _this = this;\n\n        var that, data, price, refund_price, refund_status, remark;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                that = this, data = {}, price = opt.price, refund_price = opt.refund_price, refund_status = that.orderInfo.refund_status, remark = opt.remark;\n\n                if (!(that.status == 0)) {\n                  _context.next = 19;\n                  break;\n                }\n\n                _context.prev = 2;\n                _context.next = 5;\n                return this.$validator({\n                  price: [required(required.message(\"金额\")), num(num.message(\"金额\"))]\n                }).validate({\n                  price: price\n                });\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](2);\n                return _context.abrupt(\"return\", validatorDefaultCatch(_context.t0));\n\n              case 10:\n                data.total_price = this.orderInfo.total_price;\n                data.total_postage = this.orderInfo.total_price;\n                data.pay_postage = this.orderInfo.pay_postage;\n                data.gain_integral = this.orderInfo.gain_integral;\n                data.pay_price = opt.price;\n                data.order_id = opt.order_id;\n                editPriceApi(opt.id, data).then(function () {\n                  _this.$emit(\"closechange\", false);\n\n                  that.$dialog.success(\"改价成功\");\n                }).catch(function (error) {\n                  that.$dialog.error(error.msg);\n                });\n                _context.next = 49;\n                break;\n\n              case 19:\n                if (!(that.status == 2)) {\n                  _context.next = 37;\n                  break;\n                }\n\n                _context.prev = 20;\n                _context.next = 23;\n                return this.$validator({\n                  refund_price: [required(required.message(\"金额\")), num(num.message(\"金额\"))]\n                }).validate({\n                  refund_price: refund_price\n                });\n\n              case 23:\n                _context.next = 28;\n                break;\n\n              case 25:\n                _context.prev = 25;\n                _context.t1 = _context[\"catch\"](20);\n                return _context.abrupt(\"return\", validatorDefaultCatch(_context.t1));\n\n              case 28:\n                data.refund_price = parseFloat(opt.refund_price);\n                data.type = opt.type;\n\n                if (!(data.refund_price <= 0)) {\n                  _context.next = 32;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", that.$dialog.error('请输入退款金额'));\n\n              case 32:\n                if (!(data.refund_price > parseFloat(that.orderInfo.pay_price))) {\n                  _context.next = 34;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", that.$dialog.error('退款应小于支付金额'));\n\n              case 34:\n                // data.order_id = opt.order_id;\n                putRefund(opt.id, data).then(function (res) {\n                  _this.$emit(\"closechange\", false);\n\n                  that.$dialog.success('操作成功');\n                }, function (err) {\n                  _this.$emit(\"closechange\", false);\n\n                  that.$dialog.error(err.msg);\n                });\n                _context.next = 49;\n                break;\n\n              case 37:\n                if (!(that.status == 1)) {\n                  _context.next = 49;\n                  break;\n                }\n\n                _context.prev = 38;\n                _context.next = 41;\n                return this.$validator({\n                  remark: [required(required.message(\"备注\"))]\n                }).validate({\n                  remark: remark\n                });\n\n              case 41:\n                _context.next = 46;\n                break;\n\n              case 43:\n                _context.prev = 43;\n                _context.t2 = _context[\"catch\"](38);\n                return _context.abrupt(\"return\", validatorDefaultCatch(_context.t2));\n\n              case 46:\n                data.remark = remark;\n                data.order_id = opt.order_id;\n                orderRemark(data).then(function (res) {\n                  _this.$emit(\"closechange\", false);\n\n                  that.$dialog.success('提交成功');\n                }, function (err) {\n                  _this.$emit(\"closechange\", false);\n\n                  that.$dialog.error(err.msg);\n                });\n\n              case 49:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 7], [20, 25], [38, 43]]);\n      }));\n\n      function savePrice(_x) {\n        return _savePrice.apply(this, arguments);\n      }\n\n      return savePrice;\n    }(),\n    refuse: function refuse() {\n      this.savePrice({\n        price: this.price,\n        refund_price: this.refund_price,\n        type: 2,\n        remark: this.remark,\n        id: this.orderInfo.id,\n        order_id: this.orderInfo.order_id\n      });\n    }\n  }\n};",null]}