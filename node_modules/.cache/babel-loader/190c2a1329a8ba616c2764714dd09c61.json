{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/setting/membershipLevel/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/setting/membershipLevel/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\"; // import createLevel from \"./components/createLevel\";\n\nimport { membershipDataAddApi, membershipDataListApi, membershipDataEditApi, membershipSetApi, levelTaskSetApi, levelTaskListDataAddApi, levelTaskDataEditApi, levelTaskDataAddApi } from \"@/api/membershipLevel\";\nexport default {\n  name: \"list\",\n  // components: { createLevel },\n  data: function data() {\n    return {\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24\n      },\n      modal1: false,\n      modal2: false,\n      formValidate: {\n        status: \"\",\n        page: 1,\n        limit: 20,\n        gid: 0\n      },\n      taskData: {\n        keyword: \"\",\n        page: 1,\n        limit: 20,\n        status: \"\"\n      },\n      total: 0,\n      taskTotal: 0,\n      tabList: [],\n      taskTabList: [],\n      columns1: [{\n        key: \"id\",\n        width: 80,\n        title: \"ID\"\n      }, {\n        slot: \"image\",\n        minWidth: 100,\n        title: \"背景图\"\n      }, {\n        key: \"name\",\n        minWidth: 100,\n        title: \"名称\"\n      }, {\n        key: \"grade\",\n        minWidth: 80,\n        title: \"等级\"\n      }, {\n        key: \"one_brokerage\",\n        minWidth: 120,\n        title: \"一级返佣上浮比例(%)\"\n      }, {\n        key: \"two_brokerage\",\n        minWidth: 120,\n        title: \"二级返佣上浮比例(%)\"\n      }, {\n        slot: \"status\",\n        minWidth: 80,\n        title: \"是否显示\"\n      }, {\n        fixed: \"right\",\n        minWidth: 160,\n        slot: \"action\",\n        title: \"操作\"\n      }],\n      columns2: [{\n        key: \"id\",\n        minWidth: 35,\n        title: \"ID\"\n      }, {\n        key: \"name\",\n        minWidth: 35,\n        title: \"名称\"\n      }, {\n        key: \"type_name\",\n        minWidth: 35,\n        title: \"任务类型\"\n      }, {\n        key: \"number\",\n        minWidth: 35,\n        title: \"限定数量\"\n      }, {\n        slot: \"status\",\n        minWidth: 35,\n        title: \"是否显示\"\n      }, {\n        key: \"sort\",\n        minWidth: 35,\n        title: \"排序\"\n      }, {\n        // fixed: \"right\",\n        minWidth: 120,\n        slot: \"action\",\n        title: \"操作\"\n      }],\n      FromData: null,\n      loading: false,\n      taskLoading: false,\n      titleType: \"group\",\n      groupAll: [],\n      theme3: \"light\",\n      labelSort: [],\n      sortName: null,\n      current: 0,\n      model1: \"\",\n      value1: \"\"\n    };\n  },\n  computed: _objectSpread({}, mapState(\"admin/layout\", [\"isMobile\"]), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    }\n  }),\n  watch: {\n    $route: function $route(to, from) {\n      if (this.$route.params.id) {} else {}\n    }\n  },\n  mounted: function mounted() {\n    this.getList();\n  },\n  methods: {\n    bindMenuItem: function bindMenuItem(name, index) {\n      this.current = index;\n      this.formValidate.gid = name.id;\n      this.getListHeader();\n      this.getList();\n    },\n    // 列表\n    getList: function getList() {\n      var _this = this;\n\n      this.loading = true;\n      membershipDataListApi(this.formValidate).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  data = res.data;\n                  _this.tabList = data.list;\n                  _this.total = data.count;\n                  _this.loading = false;\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this.loading = false;\n\n        _this.$Message.error(res.msg);\n      });\n    },\n    // 列表\n    getTaskList: function getTaskList() {\n      var _this2 = this;\n\n      this.taskLoading = true;\n      levelTaskListDataAddApi(this.taskData).then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  data = res.data;\n                  _this2.taskTabList = data.list;\n                  _this2.taskTotal = data.count;\n                  _this2.taskLoading = false;\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this2.taskLoading = false;\n\n        _this2.$Message.error(res.msg);\n      });\n    },\n    pageChange: function pageChange(index) {\n      this.formValidate.page = index;\n      this.getList();\n    },\n    pageTaskChange: function pageTaskChange(index) {\n      this.taskData.page = index;\n      this.getList();\n    },\n    // 表格搜索\n    search: function search() {\n      this.formValidate.page = 1;\n      this.getList();\n    },\n    searchTask: function searchTask() {\n      this.taskData.page = 1;\n      this.getTaskList();\n    },\n    // 添加表单\n    groupAdd: function groupAdd() {\n      var _this3 = this;\n\n      this.$modalForm(membershipDataAddApi({}, \"/agent/level/create\")).then(function () {\n        return _this3.getList();\n      });\n    },\n    taskAdd: function taskAdd() {\n      var _this4 = this;\n\n      this.$modalForm(levelTaskDataAddApi({}, \"/agent/level_task/create?level_id=\" + this.taskData.id)).then(function () {\n        return _this4.getTaskList();\n      });\n    },\n    // 修改是否显示\n    onchangeIsShow: function onchangeIsShow(row) {\n      var _this5 = this;\n\n      membershipSetApi(\"agent/level/set_status/\".concat(row.id, \"/\").concat(row.status)).then(\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee3(res) {\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _this5.$Message.success(res.msg);\n\n                  _this5.getList();\n\n                case 2:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this5.$Message.error(res.msg);\n      });\n    },\n    // 修改是否显示\n    onchangeTaskIsShow: function onchangeTaskIsShow(row) {\n      var _this6 = this;\n\n      levelTaskSetApi(\"agent/level_task/set_status/\".concat(row.id, \"/\").concat(row.status)).then(\n      /*#__PURE__*/\n      function () {\n        var _ref4 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee4(res) {\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _this6.$Message.success(res.msg);\n\n                  _this6.getList();\n\n                case 2:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref4.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this6.$Message.error(res.msg);\n      });\n    },\n    //添加等级任务\n    addTask: function addTask(row) {\n      this.id = row.id;\n      this.modal2 = true;\n      this.taskData.id = row.id;\n      this.getTaskList();\n    },\n    // 编辑\n    edit: function edit(row) {\n      var _this7 = this;\n\n      var data = {\n        gid: row.gid\n      };\n      this.$modalForm(membershipDataEditApi(data, \"agent/level/\".concat(row.id, \"/edit\"))).then(function () {\n        return _this7.getList();\n      });\n    },\n    // 编辑\n    editTask: function editTask(row) {\n      var _this8 = this;\n\n      var data = {\n        gid: row.gid\n      };\n      this.$modalForm(levelTaskDataEditApi(data, \"agent/level_task/\".concat(row.id, \"/edit\"))).then(function () {\n        return _this8.getTaskList();\n      });\n    },\n    // 删除\n    del: function del(row, tit, num) {\n      var _this9 = this;\n\n      var delfromData = {\n        title: tit,\n        num: num,\n        url: \"agent/level/\".concat(row.id),\n        method: \"DELETE\",\n        ids: \"\"\n      };\n      this.$modalSure(delfromData).then(function (res) {\n        _this9.$Message.success(res.msg);\n\n        _this9.tabList.splice(num, 1);\n      }).catch(function (res) {\n        _this9.$Message.error(res.msg);\n      });\n    },\n    // 删除\n    delTask: function delTask(row, tit, num) {\n      var _this10 = this;\n\n      var delfromData = {\n        title: tit,\n        num: num,\n        url: \"agent/level_task/\".concat(row.id),\n        method: \"DELETE\",\n        ids: \"\"\n      };\n      this.$modalSure(delfromData).then(function (res) {\n        _this10.$Message.success(res.msg);\n\n        _this10.taskTabList.splice(num, 1);\n      }).catch(function (res) {\n        _this10.$Message.error(res.msg);\n      });\n    }\n  }\n};",null]}