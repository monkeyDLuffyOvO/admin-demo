{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/app/wechat/user/user.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/app/wechat/user/user.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport { wechatUserListtApi, tagListtApi, groupsEditApi } from '@/api/app';\nimport newsCategory from '@/components/newsCategory/index';\nimport editFrom from '@/components/from/from';\nimport sendFrom from '@/components/sendCoupons/index';\nexport default {\n  name: 'user',\n  components: {\n    newsCategory: newsCategory,\n    editFrom: editFrom,\n    sendFrom: sendFrom\n  },\n  data: function data() {\n    return {\n      tagidList: [],\n      isShowSend: true,\n      maxCols: 4,\n      scrollerHeight: '600',\n      contentTop: '130',\n      contentWidth: '98%',\n      modal13: false,\n      timeVal: [],\n      fromList: {\n        title: '选择时间',\n        custom: true,\n        fromTxt: [{\n          text: '全部',\n          val: ''\n        }, {\n          text: '今天',\n          val: 'today'\n        }, {\n          text: '昨天',\n          val: 'yesterday'\n        }, {\n          text: '最近7天',\n          val: 'lately7'\n        }, {\n          text: '最近30天',\n          val: 'lately30'\n        }, {\n          text: '本月',\n          val: 'month'\n        }, {\n          text: '本年',\n          val: 'year'\n        }]\n      },\n      formValidate: {\n        limit: 15,\n        page: 1,\n        nickname: '',\n        data: '',\n        tagid_list: '',\n        sex: '',\n        groupid: 0,\n        subscribe: '',\n        export: 2\n      },\n      loading: false,\n      tabList: [],\n      total: 0,\n      value2: '',\n      grid: {\n        xl: 8,\n        lg: 8,\n        md: 8,\n        sm: 24,\n        xs: 24\n      },\n      columns4: [{\n        type: 'selection',\n        min: 60,\n        align: 'center'\n      }, {\n        title: 'ID',\n        key: 'uid'\n      }, {\n        title: '微信用户名称',\n        key: 'nickname'\n      }, {\n        title: '头像',\n        slot: 'headimgurl'\n      }, {\n        title: '性别',\n        slot: 'sex'\n      }, {\n        title: '地区',\n        slot: 'country'\n      }, {\n        title: '是否关注公众号',\n        slot: 'subscribe'\n      }, {\n        title: '用户分组',\n        key: 'groupid'\n      }, {\n        title: '用户标签',\n        key: 'tagid_list'\n      }, {\n        title: '操作',\n        slot: 'createModalFrame',\n        fixed: 'right',\n        width: 100\n      }],\n      tagList: [],\n      groupList: [],\n      FromData: null,\n      selectionList: [],\n      user_ids: ''\n    };\n  },\n  computed: _objectSpread({}, mapState('admin/layout', ['isMobile']), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 80;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    }\n  }),\n  created: function created() {\n    this.getListTag();\n    this.getList();\n  },\n  methods: {\n    // 操作\n    changeMenu: function changeMenu(row, name) {\n      var _this = this;\n\n      switch (name) {\n        case '1':\n          this.editGroup(\"app/wechat/user_group/\".concat(row.openid, \"/edit\"));\n          break;\n\n        case '2':\n          this.editGroup(\"app/wechat/user_tag/\".concat(row.openid, \"/edit\"));\n          break;\n\n        default:\n          var delfromData = {\n            title: '同步该用户标签',\n            url: \"app/wechat/syn_tag/\".concat(row.openid),\n            method: 'PUT',\n            ids: ''\n          };\n          this.$modalSure(delfromData).then(function (res) {\n            _this.$Message.success(res.msg);\n\n            _this.getList();\n          }).catch(function (res) {\n            _this.$Message.error(res.msg);\n          });\n      }\n    },\n    // 修改用户分组 标签\n    editGroup: function editGroup(url) {\n      var _this2 = this;\n\n      groupsEditApi(url).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this2.FromData = res.data;\n                  _this2.$refs.edits.modals = true;\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this2.$Message.error(res.msg);\n      });\n    },\n    // 修改成功\n    submitFail: function submitFail() {\n      this.getList();\n    },\n    // 同步标签\n    submitModel: function submitModel() {\n      this.getList();\n    },\n    // 点击发送优惠券\n    onSend: function onSend() {\n      if (this.selectionList.length === 0) {\n        this.$Message.warning('请选择要发送优惠券的用户');\n      } else {\n        this.$refs.sends.modals = true;\n        this.$refs.sends.getList();\n      }\n    },\n    // 发送图文消息\n    onSendPic: function onSendPic() {\n      if (this.selectionList.length === 0) {\n        this.$Message.warning('请选择要发送图文消息的用户');\n      } else {\n        this.modal13 = true;\n      }\n    },\n    // 全选\n    onSelectTab: function onSelectTab(selection) {\n      this.selectionList = selection;\n      var data = [];\n      this.selectionList.map(function (item) {\n        data.push(item.uid);\n      });\n      this.user_ids = data.join(',');\n    },\n    // 具体日期\n    onchangeTime: function onchangeTime(e) {\n      this.timeVal = e;\n      this.formValidate.data = this.timeVal.join('-');\n      this.getList();\n    },\n    // 选择时间\n    selectChange: function selectChange(tab) {\n      this.formValidate.data = tab;\n      this.timeVal = [];\n      this.getList();\n    },\n    // 标签 分组\n    getListTag: function getListTag() {\n      var _this3 = this;\n\n      var obj = {\n        id: '',\n        name: '全部'\n      };\n      tagListtApi().then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  data = res.data;\n                  _this3.tagList = data.tagList;\n                  _this3.groupList = data.groupList;\n\n                  _this3.groupList.unshift(obj);\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this3.loading = false;\n\n        _this3.$Message.error(res.msg);\n      });\n    },\n    // 列表\n    getList: function getList() {\n      var _this4 = this;\n\n      this.loading = true;\n      this.formValidate.sex = this.formValidate.sex || '';\n      this.formValidate.subscribe = this.formValidate.subscribe || '';\n      this.formValidate.tagid_list = this.tagidList.join(',');\n      wechatUserListtApi(this.formValidate).then(\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee3(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  data = res.data;\n                  _this4.tabList = data.list;\n                  _this4.total = data.count;\n                  _this4.loading = false;\n\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this4.loading = false;\n\n        _this4.$Message.error(res.msg);\n      });\n    },\n    pageChange: function pageChange(index) {\n      this.formValidate.page = index;\n      this.getList();\n    },\n    // 搜索\n    userSearchs: function userSearchs() {\n      this.getList();\n    }\n  }\n};",null]}