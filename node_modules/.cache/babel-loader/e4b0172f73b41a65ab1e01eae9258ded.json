{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/marketing/live/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/marketing/live/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport { liveList, liveShow, liveRoomGoodsAdd, liveSyncRoom } from '@/api/live';\nimport detailsFrom from './components/live_detail';\nimport addGoods from './components/add_goods';\nimport goodsList from '@/components/goodsList';\nexport default {\n  name: \"live\",\n  components: {\n    detailsFrom: detailsFrom,\n    addGoods: addGoods,\n    goodsList: goodsList\n  },\n  data: function data() {\n    return {\n      isShowBox: false,\n      modals: false,\n      total: 0,\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24\n      },\n      formValidate: {\n        status: '',\n        kerword: '',\n        page: 1,\n        limit: 20\n      },\n      treeData: {\n        withdrawal: [{\n          title: '全部',\n          value: ''\n        }, {\n          title: '直播中',\n          value: 1\n        }, {\n          title: '未开始',\n          value: 2\n        }, {\n          title: '已结束',\n          value: 3\n        }]\n      },\n      columns1: [{\n        \"key\": \"id\",\n        \"title\": \"直播间ID\",\n        \"width\": 80\n      }, {\n        \"key\": \"name\",\n        \"minWidth\": 120,\n        \"title\": \"直播间名称\"\n      }, {\n        \"key\": \"anchor_name\",\n        \"minWidth\": 120,\n        \"title\": \"主播昵称\"\n      }, {\n        \"key\": \"anchor_wechat\",\n        \"minWidth\": 120,\n        \"title\": \"主播微信号\"\n      }, {\n        \"key\": \"start_time\",\n        \"minWidth\": 130,\n        \"title\": \"直播开始时间\"\n      }, {\n        \"key\": \"end_time\",\n        \"minWidth\": 130,\n        \"title\": \"计划结束时间\"\n      }, {\n        \"key\": \"add_time\",\n        \"minWidth\": 130,\n        \"title\": \"创建时间\"\n      }, {\n        \"slot\": \"is_mer_show\",\n        \"title\": \"显示状态\",\n        \"minWidth\": 80\n      }, {\n        \"slot\": \"status\",\n        \"minWidth\": 80,\n        \"title\": \"直播状态\"\n      }, {\n        \"key\": \"sort\",\n        \"minWidth\": 70,\n        \"title\": \"排序\"\n      }, {\n        \"slot\": \"action\",\n        \"fixed\": \"right\",\n        \"title\": \"操作\",\n        \"minWidth\": 160\n      }],\n      tabList: [],\n      loading: false,\n      activeItem: {}\n    };\n  },\n  computed: _objectSpread({}, mapState('admin/layout', ['isMobile']), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    }\n  }),\n  created: function created() {\n    this.getList();\n  },\n  methods: {\n    // 获取直播列表\n    getList: function getList() {\n      var _this = this;\n\n      this.loading = true;\n      liveList(this.formValidate).then(function (res) {\n        _this.total = res.data.count;\n        _this.tabList = res.data.list;\n        _this.loading = false;\n      });\n    },\n    // 选择\n    selChange: function selChange() {\n      this.formValidate.page = 1;\n      this.getList();\n    },\n    // 添加直播间\n    menusAdd: function menusAdd() {\n      this.$router.push({\n        path: '/admin/marketing/live/add_live_room'\n      });\n    },\n    // 分页\n    pageChange: function pageChange(index) {\n      this.formValidate.page = index;\n      this.getList();\n    },\n    // 直播间显示隐藏\n    onchangeIsShow: function onchangeIsShow(_ref) {\n      var _this2 = this;\n\n      var id = _ref.id,\n          is_show = _ref.is_show;\n      liveShow(id, is_show).then(function (res) {\n        _this2.$Message.success(res.msg);\n      }).catch(function (error) {\n        _this2.$Message.error(error.msg);\n      });\n    },\n    //  详情\n    detail: function detail(row) {\n      this.modals = true;\n      this.$refs.studioDetail.getData(row.id);\n    },\n    // 直播间添加商品\n    addGoods: function addGoods(row) {\n      this.activeItem = row;\n      this.isShowBox = true;\n    },\n    getData: function getData(data) {\n      var _this3 = this;\n\n      liveRoomGoodsAdd({\n        room_id: this.activeItem.id,\n        goods_ids: data\n      }).then(function (res) {\n        _this3.$Message.success(res.msg);\n\n        _this3.isShowBox = false;\n        _this3.$refs.liveAdd.goodsList = [];\n      }).catch(function (error) {\n        _this3.$Message.error(error.msg);\n\n        _this3.isShowBox = false;\n        _this3.$refs.liveAdd.goodsList = [];\n      });\n    },\n    // 同步直播间\n    syncRoom: function syncRoom() {\n      var _this4 = this;\n\n      liveSyncRoom().then(function (res) {\n        _this4.$Message.success(res.msg);\n\n        _this4.getList();\n      }).catch(function (error) {\n        _this4.$Message.error(res.msg);\n      });\n    },\n    // 删除\n    del: function del(row, tit, num) {\n      var _this5 = this;\n\n      var delfromData = {\n        title: tit,\n        num: num,\n        url: \"live/room/del/\".concat(row.id),\n        method: 'DELETE',\n        ids: ''\n      };\n      this.$modalSure(delfromData).then(function (res) {\n        _this5.$Message.success(res.msg);\n\n        _this5.tabList.splice(num, 1);\n\n        _this5.getList();\n      }).catch(function (res) {\n        _this5.$Message.error(res.msg);\n      });\n    },\n    getProductId: function getProductId(data) {\n      var arr = [];\n      data.map(function (el) {\n        arr.push(el.product_id);\n      });\n      this.getData(arr);\n    }\n  }\n};",null]}