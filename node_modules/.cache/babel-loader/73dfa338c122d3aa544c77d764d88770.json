{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/marketing/live/add_goods.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/marketing/live/add_goods.vue","mtime":1649819790000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport goodsList from '@/components/goodsList';\nimport { liveGoodsCreat, liveGoodsAdd } from '@/api/live';\nexport default {\n  name: \"add_goods\",\n  components: {\n    goodsList: goodsList\n  },\n  computed: _objectSpread({}, mapState('admin/layout', ['isMobile']), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 100;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    }\n  }),\n  data: function data() {\n    var _this = this;\n\n    return {\n      isShowBox: false,\n      loading: false,\n      modals: false,\n      goodsList: [],\n      tempGoods: {},\n      formValidate: {},\n      columns1: [{\n        \"key\": \"id\",\n        \"title\": \"商品ID\"\n      }, {\n        \"slot\": \"img\",\n        \"title\": \"商品信息\",\n        minWidth: 250\n      }, {\n        \"key\": \"price\",\n        \"title\": \"直播售价\",\n        render: function render(h, params) {\n          return h('Input', {\n            props: {\n              type: 'number',\n              value: params.row.price\n            },\n            on: {\n              'input': function input(val) {\n                _this.tabList[params.index].price = val;\n              }\n            }\n          });\n        }\n      }, {\n        \"key\": \"cost_price\",\n        \"title\": \"直播原价\",\n        render: function render(h, params) {\n          return h('Input', {\n            props: {\n              type: 'number',\n              value: params.row.cost_price\n            },\n            on: {\n              'input': function input(val) {\n                _this.tabList[params.index].cost_price = val;\n              }\n            }\n          });\n        }\n      }, {\n        \"key\": \"stock\",\n        \"title\": \"库存\"\n      }, {\n        \"slot\": \"action\",\n        \"fixed\": \"right\",\n        \"title\": \"操作\"\n      }],\n      tabList: []\n    };\n  },\n  methods: {\n    // 生成直播商品\n    liveGoods: function liveGoods() {\n      var _this2 = this;\n\n      var array = [];\n      this.goodsList.map(function (el) {\n        array.push(el.product_id);\n      });\n      liveGoodsCreat({\n        product_id: array\n      }).then(function (res) {\n        _this2.tabList = res.data;\n        _this2.isShowBox = true;\n      }).catch(function (error) {\n        _this2.$Message.error(error.msg);\n      });\n    },\n    getProductId: function getProductId(data) {\n      var _this3 = this;\n\n      this.goodsList = this.goodsList.concat(data);\n      this.$nextTick(function (res) {\n        setTimeout(function () {\n          _this3.modals = false;\n        }, 300);\n      });\n    },\n    bindDelete: function bindDelete(index) {\n      this.goodsList.splice(index, 1);\n    },\n    del: function del(row, index) {\n      this.tabList.splice(index, 1);\n    },\n    // 提交\n    bindSub: function bindSub() {\n      var _this4 = this;\n\n      liveGoodsAdd({\n        goods_info: this.tabList\n      }).then(function (res) {\n        _this4.$Message.success('添加成功');\n\n        setTimeout(function () {\n          _this4.$router.push({\n            path: '/admin/marketing/live/live_goods'\n          });\n        }, 500);\n      }).catch(function (error) {\n        _this4.$Message.error(error.msg);\n      });\n    }\n  }\n};",null]}