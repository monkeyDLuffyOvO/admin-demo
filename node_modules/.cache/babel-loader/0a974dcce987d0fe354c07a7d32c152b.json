{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/notify/smsConfig/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/notify/smsConfig/index.vue","mtime":1643092836000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport loginFrom from './components/loginFrom';\nimport forgetPassword from './components/forgetPassword';\nimport registerFrom from './components/register';\nimport tableList from './tableList';\nimport forgetPhone from './components/forgetPhone';\nimport { isLoginApi, logoutApi, smsNumberApi, serveInfoApi } from '@/api/setting';\nexport default {\n  name: 'smsConfig',\n  components: {\n    loginFrom: loginFrom,\n    forgetPassword: forgetPassword,\n    registerFrom: registerFrom,\n    tableList: tableList,\n    forgetPhone: forgetPhone\n  },\n  data: function data() {\n    return {\n      imgUrl: require('@/assets/images/ren.png'),\n      spinShow: false,\n      isShowLogn: false,\n      // 登录\n      isShow: false,\n      // 修改密码\n      isShowReg: false,\n      // 注册\n      isShowList: false,\n      // 登录之后列表\n      smsAccount: '',\n      accountInfo: {},\n      isForgetPhone: false,\n      // 修改手机号\n      isIndex: false,\n      // 判断忘记密码返回的路径\n      sms: {\n        open: 0\n      },\n      // 短信信息\n      query: {\n        open: 0\n      },\n      // 物流查询\n      dump: {\n        open: 0\n      },\n      // 电子面单打印\n      copy: {\n        open: 0\n      },\n      // 商品采集\n      psd: false //1修改密码，0忘记密码\n\n    };\n  },\n  created: function created() {\n    this.onIsLogin();\n  },\n  methods: {\n    onChangePhone: function onChangePhone() {\n      this.isForgetPhone = true;\n      this.isShowLogn = false;\n      this.isShowList = false;\n    },\n    onOpen: function onOpen(val) {\n      this.$refs.tableLists.onOpenIndex(val);\n    },\n    mealPay: function mealPay(val) {\n      this.$router.push({\n        path: '/admin/setting/sms/sms_pay/index',\n        query: {\n          type: val\n        }\n      });\n    },\n    // 开通服务\n    openService: function openService(val) {\n      switch (val) {\n        case 'sms':\n          this.sms.open = 1;\n          break;\n\n        case 'copy':\n          this.copy.open = 1;\n          break;\n\n        default:\n          this.dump.open = 1;\n          this.query.open = 1;\n          break;\n      }\n    },\n    // 平台用户信息\n    getServeInfo: function getServeInfo() {\n      var _this = this;\n\n      this.spinShow = true;\n      serveInfoApi().then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  data = res.data;\n                  _this.sms = {\n                    num: data.sms.num,\n                    open: data.sms.open,\n                    surp: data.sms.open\n                  };\n                  _this.query = {\n                    num: data.query.num,\n                    open: data.query.open,\n                    surp: data.query.open\n                  };\n                  _this.dump = {\n                    num: data.dump.num,\n                    open: data.dump.open,\n                    surp: data.dump.open\n                  };\n                  _this.copy = {\n                    num: data.copy.num,\n                    open: data.copy.open,\n                    surp: data.copy.open\n                  };\n                  _this.spinShow = false;\n                  _this.smsAccount = data.account;\n                  _this.accountInfo = data;\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this.$Message.error(res.msg);\n\n        _this.isShowLogn = true;\n        _this.isShowList = false;\n        _this.spinShow = false;\n      });\n    },\n    // 查看是否登录\n    onIsLogin: function onIsLogin() {\n      var _this2 = this;\n\n      this.spinShow = true;\n      isLoginApi().then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  data = res.data;\n                  _this2.isShowLogn = !data.status;\n                  _this2.isShowList = data.status;\n                  _this2.spinShow = false;\n\n                  if (data.status) {\n                    _this2.getServeInfo();\n                  }\n\n                case 5:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this2.spinShow = false;\n\n        _this2.$Message.error(res.msg);\n      });\n    },\n    // 退出登录\n    signOut: function signOut() {\n      var _this3 = this;\n\n      logoutApi().then(\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee3(res) {\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _this3.isShowLogn = true;\n                  _this3.isShowList = false;\n\n                case 2:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this3.$Message.error(res.msg);\n      });\n    },\n    // 修改密码\n    onChangePassswordIndex: function onChangePassswordIndex() {\n      this.isIndex = true;\n      this.psd = true;\n      this.passsword();\n    },\n    // 忘记密码\n    onChangePasssword: function onChangePasssword() {\n      this.isIndex = false;\n      this.psd = false;\n      this.passsword(); // this.isShowLogn = false;\n      // this.isShow = true;\n      // this.isShowList = false;\n    },\n    passsword: function passsword() {\n      this.isShowLogn = false;\n      this.isShow = true;\n      this.isShowList = false;\n    },\n    // 立即注册\n    onChangeReg: function onChangeReg() {\n      this.isShowLogn = false;\n      this.isShow = false;\n      this.isShowReg = true;\n    },\n    // 立即登录\n    logoup: function logoup() {\n      this.isShowLogn = true;\n      this.isShow = false;\n      this.isShowReg = false;\n    },\n    // 登录跳转\n    onLogin: function onLogin() {\n      var url = this.$route.query.url;\n\n      if (url) {\n        this.$router.replace(url);\n      } else {\n        this.isShowLogn = false;\n        this.isShow = false;\n        this.isShowReg = false;\n        this.isForgetPhone = false;\n        this.isShowList = true;\n        this.getServeInfo();\n      }\n    },\n    // 密码返回\n    goback: function goback() {\n      if (this.isIndex) {\n        this.isShowList = true;\n        this.isShow = false;\n      } else {\n        this.isShowLogn = true;\n        this.isShow = false;\n      }\n    },\n    // 手机号返回\n    gobackPhone: function gobackPhone() {\n      this.isShowList = true;\n      this.isForgetPhone = false;\n    }\n  }\n};",null]}