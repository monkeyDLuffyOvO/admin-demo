{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/store/cash/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/store/cash/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport { storeExtractInfo, storeExtractMarkApi, staffListInfo, storeExtractVerifyApi, storepaying } from \"@/api/store\";\nimport cardsData from \"../../../components/cards/cards.vue\";\nimport timeOptions from \"@/utils/timeOptions\";\nexport default {\n  name: \"bill\",\n  components: {\n    cardsData: cardsData\n  },\n  data: function data() {\n    return {\n      id: 0,\n      modal: false,\n      modalmark: false,\n      formItem: {\n        type: \"1\",\n        message: \"\"\n      },\n      remarkId: 0,\n      remarks: {\n        mark: \"\"\n      },\n      total: 0,\n      cardLists: [],\n      extractStatistics: [],\n      staff: [],\n      loading: false,\n      columns: [{\n        title: \"ID\",\n        key: \"id\",\n        width: 60\n      }, {\n        title: \"图片\",\n        slot: \"admin_id\",\n        width: 60\n      }, {\n        title: \"门店\",\n        slot: \"store\",\n        minWidth: 120\n      }, {\n        title: \"申请金额\",\n        key: \"extract_price\",\n        minWidth: 80\n      }, {\n        title: \"申请时间\",\n        key: \"add_time\",\n        minWidth: 150\n      }, {\n        title: \"收款方式\",\n        slot: \"extract_type\",\n        minWidth: 80\n      }, {\n        title: \"收款信息\",\n        slot: \"type\",\n        minWidth: 200\n      }, {\n        title: \"审核状态\",\n        slot: \"status\",\n        minWidth: 150\n      }, {\n        title: \"转账状态\",\n        slot: \"pay_status\",\n        minWidth: 180\n      }, {\n        title: \"管理员\",\n        key: \"admin_name\",\n        minWidth: 80\n      }, {\n        title: \"备注\",\n        key: \"store_mark\",\n        minWidth: 150\n      }, {\n        title: \"操作\",\n        slot: \"action\",\n        fixed: \"right\",\n        minWidth: 120,\n        align: \"center\"\n      }],\n      orderList: [],\n      formValidate: {\n        pay_status: \"\",\n        extract_type: \"\",\n        data: \"\",\n        status: \"\",\n        store_id: \"\",\n        page: 1,\n        limit: 15\n      },\n      timeVal: [],\n      options: timeOptions,\n      fromLists: {\n        custom: true,\n        status: [{\n          text: \"全部\",\n          val: \"\"\n        }, {\n          text: \"待审核\",\n          val: \"0\"\n        }, {\n          text: \"已通过\",\n          val: \"1\"\n        }, {\n          text: \"未通过\",\n          val: \"-1\"\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState(\"admin/layout\", [\"isMobile\"]), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    }\n  }),\n  mounted: function mounted() {\n    this.staffApi();\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this = this;\n\n      this.loading = true;\n      storeExtractInfo(this.formValidate).then(function (res) {\n        _this.orderList = res.data.list.list;\n        _this.total = res.data.list.count;\n        _this.extractStatistics = res.data.extract_statistics;\n        _this.cardLists = [{\n          col: 6,\n          count: _this.extractStatistics.unPayPrice,\n          name: \"待转账金额\",\n          className: \"md-basket\"\n        }, {\n          col: 6,\n          count: _this.extractStatistics.price,\n          name: \"待审核金额\",\n          className: \"md-cash\"\n        }, {\n          col: 6,\n          count: _this.extractStatistics.price_not,\n          name: \"可提现金额\",\n          className: \"ios-cash\"\n        }, {\n          col: 6,\n          count: _this.extractStatistics.paidPrice,\n          name: \"累计提现金额\",\n          className: \"ios-cash\"\n        }];\n        _this.loading = false;\n      });\n    },\n    staffApi: function staffApi() {\n      var _this2 = this;\n\n      staffListInfo().then(function (res) {\n        _this2.staff = res.data;\n      });\n    },\n    searchs: function searchs() {\n      this.formValidate.page = 1;\n      this.getList();\n    },\n    // 选择时间\n    selectChange: function selectChange(tab) {\n      this.formValidate.page = 1;\n      this.formValidate.data = tab;\n      this.timeVal = [];\n      this.getList();\n    },\n    //审核状态\n    payStatus: function payStatus(tab) {\n      this.formValidate.page = 1;\n      this.formValidate.status = tab;\n      this.getList();\n    },\n    // 具体日期\n    onchangeTime: function onchangeTime(e) {\n      this.timeVal = e;\n      this.formValidate.data = this.timeVal[0] ? this.timeVal.join(\"-\") : \"\";\n      this.formValidate.page = 1;\n      this.getList();\n    },\n    //分页\n    pageChange: function pageChange(status) {\n      this.formValidate.page = status;\n      this.getList();\n    },\n    remark: function remark(data) {\n      this.remarkId = data.id;\n      this.remarks.mark = data.store_mark;\n      this.modalmark = true;\n    },\n    //审核\n    examine: function examine(row) {\n      this.modal = true;\n      this.id = row.id;\n    },\n    //转账\n    paying: function paying(row) {\n      var _this3 = this;\n\n      this.$modalForm(storepaying(row.id)).then(function () {\n        return _this3.getList();\n      });\n    },\n    //审核提交\n    ok: function ok() {\n      var _this4 = this;\n\n      if (this.formItem.type == 2) {\n        if (this.formItem.message == \"\") {\n          this.$Message.error(\"请填写拒绝原因\");\n          return;\n        }\n      }\n\n      storeExtractVerifyApi(this.id, this.formItem).then(function (res) {\n        _this4.$Message.success(res.msg);\n\n        _this4.formItem = {\n          type: \"1\",\n          message: \"\"\n        };\n        _this4.modal = false;\n\n        _this4.getList();\n      }).catch(function (err) {\n        _this4.$Message.error(err.msg);\n\n        _this4.modal = false;\n      });\n    },\n    // 取消按钮\n    cancel: function cancel() {\n      this.formItem = {\n        type: \"1\",\n        message: \"\"\n      };\n      this.remarks.mark = \"\";\n      this.modal = false;\n      this.modalmark = false;\n    },\n    //备注的提交\n    putRemark: function putRemark() {\n      var _this5 = this;\n\n      storeExtractMarkApi(this.remarkId, this.remarks).then(function (res) {\n        _this5.$Message.success(res.msg);\n\n        _this5.modalmark = false;\n\n        _this5.getList();\n      }).catch(function (err) {\n        _this5.$Message.error(err.msg);\n      });\n    }\n  }\n};",null]}