{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/order/orderList/handle/orderSend.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/order/orderList/handle/orderSend.vue","mtime":1660787421000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport { getExpressData, putDelivery, splitDelivery, orderExpressTemp, orderDeliveryList, orderSheetInfo, splitCartInfo } from \"@/api/order\";\nexport default {\n  name: \"orderSend\",\n  props: {\n    orderId: Number,\n    status: Number,\n    pay_type: String\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      productType: 0,\n      orderStatus: 0,\n      splitSwitch: false,\n      formItem: {\n        type: \"1\",\n        express_record_type: \"1\",\n        delivery_name: \"\",\n        delivery_id: \"\",\n        express_temp_id: \"\",\n        to_name: \"\",\n        to_tel: \"\",\n        to_addr: \"\",\n        sh_delivery: \"\",\n        fictitious_content: \"\",\n        station_type: 1,\n        delivery_type: '1',\n        cargo_weight: 0,\n        remark: '',\n        mark: ''\n      },\n      modals: false,\n      express: [],\n      expressTemp: [],\n      deliveryList: [],\n      temp: {},\n      export_open: true,\n      manyFormValidate: [],\n      stopSubmit: false,\n      header: [{\n        type: \"selection\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"商品信息\",\n        slot: \"image\",\n        width: 200,\n        align: \"center\"\n      }, {\n        title: \"规格\",\n        slot: \"value\",\n        align: \"center\",\n        minWidth: 120\n      }, {\n        title: \"商品售价\",\n        slot: \"sellPrice\",\n        align: \"center\",\n        minWidth: 100\n      }, {\n        title: \"商品优惠价\",\n        slot: \"price\",\n        align: \"center\",\n        minWidth: 100\n      }, {\n        title: \"总数\",\n        key: \"cart_num\",\n        align: \"center\",\n        minWidth: 80\n      }, {\n        title: \"待发数量\",\n        key: \"surplus_num\",\n        align: \"center\",\n        width: 180,\n        render: function render(h, params) {\n          return h(\"div\", [h(\"InputNumber\", {\n            props: {\n              min: 1,\n              max: params.row.numShow,\n              value: params.row.surplus_num || 1\n            },\n            on: {\n              \"on-change\": function onChange(e) {\n                params.row.surplus_num = e || 1;\n                _this.manyFormValidate[params.index] = params.row;\n\n                _this.selectData.forEach(function (v, index) {\n                  if (v.cart_id === params.row.cart_id) {\n                    _this.selectData.splice(index, 1, params.row);\n                  }\n                });\n              }\n            }\n          })]);\n        }\n      }],\n      selectData: [],\n      sheetInfo: {}\n    };\n  },\n  computed: _objectSpread({}, mapState(\"admin/order\", [\"splitOrder\"])),\n  methods: {\n    changeDelivery: function changeDelivery(e) {// console.log('eeeeeeeee',e);\n      // this.formItem.delivery_type = e;\n    },\n    selectOne: function selectOne(data) {\n      this.selectData = data;\n    },\n    changeModal: function changeModal(status) {\n      if (!status) this.cancel();\n    },\n    changeSplitStatus: function changeSplitStatus(status) {\n      var _this2 = this;\n\n      if (status) {\n        splitCartInfo(this.orderId).then(function (res) {\n          var data = res.data;\n          data.forEach(function (item) {\n            item.numShow = item.surplus_num;\n          });\n          _this2.manyFormValidate = data;\n        });\n      }\n    },\n    changeRadio: function changeRadio(o) {\n      this.$refs.formItem.resetFields();\n\n      switch (o) {\n        case \"1\":\n          this.formItem.delivery_name = \"\";\n          this.formItem.delivery_id = \"\";\n          this.formItem.express_temp_id = \"\";\n          this.formItem.express_record_type = \"1\";\n          this.expressTemp = [];\n          break;\n\n        case \"2\":\n          this.formItem.sh_delivery = \"\";\n\n          if (this.sheetInfo.self_delivery_status) {\n            this.formItem.delivery_type = '1';\n          } else {\n            this.formItem.delivery_type = '2';\n          }\n\n          if (this.sheetInfo.dada_delivery_status) {\n            this.formItem.station_type = 1;\n          } else {\n            this.formItem.station_type = 2;\n          }\n\n          break;\n\n        case \"3\":\n          this.formItem.fictitious_content = \"\";\n          break;\n\n        default:\n          break;\n      }\n    },\n    changeExpress: function changeExpress(j) {\n      switch (j) {\n        case \"2\":\n          this.formItem.delivery_name = \"\";\n          this.formItem.express_temp_id = \"\";\n          this.expressTemp = [];\n          this.getList(2);\n          break;\n\n        case \"1\":\n          this.formItem.delivery_name = \"\";\n          this.formItem.delivery_id = \"\";\n          this.getList(1);\n          break;\n\n        default:\n          break;\n      }\n    },\n    reset: function reset() {\n      this.formItem = {\n        type: \"1\",\n        express_record_type: \"1\",\n        delivery_name: \"\",\n        delivery_id: \"\",\n        express_temp_id: \"\",\n        expressTemp: [],\n        to_name: \"\",\n        to_tel: \"\",\n        to_addr: \"\",\n        sh_delivery: \"\",\n        fictitious_content: \"\",\n        station_type: 1,\n        delivery_type: '1',\n        cargo_weight: 0,\n        remark: '',\n        mark: ''\n      };\n    },\n    // 物流公司列表\n    getList: function getList(type) {\n      var _this3 = this;\n\n      var status = type === 2 ? 1 : \"\";\n      getExpressData(status).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this3.express = res.data;\n\n                  _this3.getSheetInfo();\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this3.loading = false;\n\n        _this3.$Message.error(res.msg);\n      });\n    },\n    // 提交\n    putSend: function putSend(name) {\n      var _this4 = this;\n\n      var data = {\n        id: this.orderId,\n        datas: this.formItem\n      };\n\n      if (this.formItem.type === \"1\" && this.formItem.express_record_type === \"2\") {\n        if (this.formItem.delivery_name === \"\") {\n          return this.$Message.error(\"快递公司不能为空\");\n        } else if (this.formItem.express_temp_id === \"\") {\n          return this.$Message.error(\"电子面单不能为空\");\n        } else if (this.formItem.to_name === \"\") {\n          return this.$Message.error(\"寄件人姓名不能为空\");\n        } else if (this.formItem.to_tel === \"\") {\n          return this.$Message.error(\"寄件人电话不能为空\");\n        } else if (!/^1(3|4|5|7|8|9|6)\\d{9}$/i.test(this.formItem.to_tel)) {\n          return this.$Message.error(\"请输入正确的手机号码\");\n        } else if (this.formItem.to_addr === \"\") {\n          return this.$Message.error(\"寄件人地址不能为空\");\n        }\n      }\n\n      if (this.formItem.type === \"1\" && this.formItem.express_record_type === \"1\") {\n        if (this.formItem.delivery_name === \"\") {\n          return this.$Message.error(\"快递公司不能为空\");\n        } else if (this.formItem.delivery_id === \"\") {\n          return this.$Message.error(\"快递单号不能为空\");\n        }\n      }\n\n      if (this.formItem.type === \"2\") {\n        if (this.formItem.delivery_type === '1' && this.formItem.sh_delivery === \"\") {\n          return this.$Message.error(\"送货人不能为空\");\n        }\n\n        if (this.formItem.delivery_type === '2' && this.formItem.cargo_weight <= 0) {\n          return this.$Message.error(\"请输入有效的重量\");\n        }\n      }\n\n      if (this.splitSwitch) {\n        data.datas.cart_ids = [];\n        this.selectData.forEach(function (v) {\n          data.datas.cart_ids.push({\n            cart_id: v.cart_id,\n            cart_num: v.surplus_num\n          });\n        });\n        splitDelivery(data).then(function (res) {\n          _this4.modals = false;\n\n          _this4.$Message.success(res.msg);\n\n          _this4.$emit(\"submitFail\");\n\n          _this4.reset();\n\n          _this4.splitSwitch = false;\n        }).catch(function (res) {\n          _this4.$Message.error(res.msg);\n        });\n      } else {\n        putDelivery(data).then(\n        /*#__PURE__*/\n        function () {\n          var _ref2 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee2(res) {\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _this4.modals = false;\n\n                    _this4.$Message.success(res.msg);\n\n                    _this4.splitSwitch = false;\n\n                    _this4.$emit(\"submitFail\");\n\n                    _this4.reset();\n\n                  case 5:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          return function (_x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }()).catch(function (res) {\n          _this4.$Message.error(res.msg);\n        });\n      }\n    },\n    cancel: function cancel(name) {\n      this.modals = false;\n      this.orderStatus = 0;\n      this.splitSwitch = false;\n      this.selectData = [];\n      this.reset();\n    },\n    // 电子面单列表\n    expressChange: function expressChange(value) {\n      var _this5 = this;\n\n      var expressItem = this.express.find(function (item) {\n        return item.value === value;\n      });\n\n      if (expressItem === undefined) {\n        return;\n      }\n\n      this.formItem.delivery_code = expressItem.code;\n\n      if (this.formItem.express_record_type === \"2\") {\n        this.expressTemp = [];\n        this.formItem.express_temp_id = \"\";\n        orderExpressTemp({\n          com: this.formItem.delivery_code\n        }).then(function (res) {\n          _this5.expressTemp = res.data;\n\n          if (!res.data.length) {\n            _this5.$Message.error(\"请配置你所选快递公司的电子面单\");\n          }\n        }).catch(function (err) {\n          _this5.$Message.error(err.msg);\n        });\n      }\n    },\n    getCartInfo: function getCartInfo() {\n      var _this6 = this;\n\n      // this.$set(this, \"orderStatus\", data);\n      // this.$set(this, \"splitSwitch\", data === 8 ? true : false);\n      // if (data === 8) {\n      splitCartInfo(this.orderId).then(function (res) {\n        var data = res.data;\n        data.forEach(function (item) {\n          item.numShow = item.surplus_num;\n        });\n        _this6.manyFormValidate = data;\n        _this6.productType = data[0].product_type;\n\n        if (_this6.productType == 3) {\n          _this6.formItem.type = '3';\n          _this6.formItem.fictitious_content = \"\";\n        }\n      });\n    },\n    getDeliveryList: function getDeliveryList() {\n      var _this7 = this;\n\n      orderDeliveryList().then(function (res) {\n        _this7.deliveryList = res.data.list;\n      }).catch(function (err) {\n        _this7.$Message.error(err.msg);\n      });\n    },\n    getSheetInfo: function getSheetInfo() {\n      var _this8 = this;\n\n      orderSheetInfo().then(function (res) {\n        var data = res.data;\n\n        for (var key in data) {\n          if (data.hasOwnProperty(key)) {\n            _this8.formItem[key] = data[key];\n          }\n        }\n\n        _this8.export_open = data.export_open === undefined ? true : data.export_open;\n\n        if (!_this8.export_open) {\n          _this8.formItem.express_record_type = \"1\";\n        }\n\n        _this8.formItem.to_addr = data.to_add;\n        _this8.sheetInfo = data;\n      }).catch(function (err) {\n        _this8.$Message.error(err.msg);\n      });\n    },\n    shDeliveryChange: function shDeliveryChange(value) {\n      if (!value) return;\n      var deliveryItem = this.deliveryList.find(function (item) {\n        return item.id === value;\n      });\n      this.formItem.sh_delivery_name = deliveryItem.wx_name;\n      this.formItem.sh_delivery_id = deliveryItem.phone;\n      this.formItem.sh_delivery_uid = deliveryItem.uid;\n    },\n    expressTempChange: function expressTempChange(tempId) {\n      this.temp = this.expressTemp.find(function (item) {\n        return tempId === item.temp_id;\n      });\n\n      if (this.temp === undefined) {\n        this.temp = {};\n      }\n    },\n    preview: function preview() {\n      this.$refs.viewer.$viewer.show();\n    }\n  }\n};",null]}