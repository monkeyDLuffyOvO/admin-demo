{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/kefu/pc/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/kefu/pc/index.vue","mtime":1661152956000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Setting from \"@/setting\";\nimport { HappyScroll } from \"vue-happy-scroll\";\nimport baseHeader from \"./components/baseHeader\";\nimport chatList from \"./components/chatList\";\nimport rightMenu from \"./components/rightMenu\";\nimport emojiList from \"@/utils/emoji\";\nimport { Socket } from \"@/libs/socket\";\nimport util from \"@/libs/util\";\nimport msgWindow from \"./components/msgWindow\";\nimport transfer from \"./components/transfer\";\nimport { serviceList, uploadImg } from \"@/api/kefu\";\nimport goodsDetail from \"./components/goods_detail\";\nimport orderDetail from \"./components/order_detail\";\nimport { mapState } from \"vuex\";\nimport { serviceInfo } from \"@/api/kefu_mobile\";\n\nvar mp3require = require(\"../../../assets/video/notice.wav\");\n\nvar mp3 = new Audio(mp3require);\n\nvar chunk = function chunk(arr, num) {\n  num = num * 1 || 1;\n  var ret = [];\n  arr.forEach(function (item, i) {\n    if (i % num === 0) {\n      ret.push([]);\n    }\n\n    ret[ret.length - 1].push(item);\n  });\n  return ret;\n};\n\nexport default {\n  name: \"index\",\n  components: {\n    baseHeader: baseHeader,\n    chatList: chatList,\n    rightMenu: rightMenu,\n    msgWindow: msgWindow,\n    transfer: transfer,\n    HappyScroll: HappyScroll,\n    goodsDetail: goodsDetail,\n    orderDetail: orderDetail\n  },\n  // 指令粘贴指令定义\n  directives: {\n    paste: {\n      bind: function bind(el, binding, vnode) {\n        el.addEventListener(\"paste\", function (event) {\n          //这里直接监听元素的粘贴事件\n          binding.value(event);\n        });\n      }\n    }\n  },\n  data: function data() {\n    return {\n      isEmoji: false,\n      chatCon: \"\",\n      emojiGroup: chunk(emojiList, 20),\n      // 表情列表\n      emojiList: emojiList,\n      html: \"\",\n      userActive: {},\n      // 左侧用户列表选中信息\n      kefuInfo: {},\n      // 客服信息\n      isMsg: false,\n      isTransfer: false,\n      activeMsg: \"\",\n      // 选中的话术\n      chatList: [],\n      text: \"\",\n      limit: 20,\n      upperId: 0,\n      online: true,\n      // 当前客服在线状态\n      scrollTop: 0,\n      isScroll: true,\n      oldHeight: 0,\n      isLoad: false,\n      isProductBox: false,\n      goodsId: \"\",\n      isOrder: false,\n      orderId: \"\",\n      upload: \"\",\n      header: {},\n      uploadData: {\n        filename: \"file\"\n      },\n      userOnline: {},\n      newRecored: {},\n      // 新对话信息\n      searchData: \"\",\n      // 搜索文字\n      scrollNum: 0,\n      // 滚动次数\n      transferId: \"\",\n      // 转接id\n      bodyClose: false,\n      tourist: 0,\n      touristLen: 0,\n      pageWs: \"\",\n      isShow: false,\n      isReturen: false,\n      toChat: false\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    socketStatus: function socketStatus(state) {\n      return state.admin.kefu.socketStatus;\n    }\n  }), {\n    disabled: function disabled() {\n      if (this.chatCon.length == 0) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    records: function records() {\n      var _this = this;\n\n      return this.chatList.map(function (item, index) {\n        item.time = _this.$moment(item.add_time * 1000).format(\"MMMDo H:mm\");\n\n        if (index) {\n          if (item.add_time - _this.chatList[index - 1].add_time >= 300) {\n            item.show = true;\n          } else {\n            item.show = false;\n          }\n        } else {\n          item.show = true;\n        }\n\n        return item;\n      });\n    }\n  }),\n  watch: {// socketStatus:{\n    //     handler(nVal,Val){\n    //         if(nVal){\n    //             Socket.send({\n    //                 data: util.cookies.kefuGet('token'),\n    //                 type: \"kefu_login\"\n    //             });\n    //         }\n    //     },\n    //     deep:true\n    // }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    this.upload = Setting.apiBaseURL.replace(\"adminapi\", \"kefuapi\") + \"/upload\";\n    serviceInfo().then(function (res) {\n      _this2.kefuInfo = res.data;\n\n      if (_this2.kefuInfo.site_name) {\n        document.title = _this2.kefuInfo.site_name;\n      } else {\n        _this2.kefuInfo.site_name = \"\";\n      }\n    });\n  },\n  mounted: function mounted() {\n    var self = this;\n    window.addEventListener(\"click\", function () {\n      self.isEmoji = false;\n    });\n    this.bus.pageWs = Socket(true, util.cookies.kefuGet(\"token\"));\n    this.wsAgain();\n    this.header[\"Authori-zation\"] = \"Bearer \" + util.cookies.kefuGet(\"token\");\n    this.text = this.replace_em(\"[em-smiling_imp]\");\n  },\n  methods: {\n    wsAgain: function wsAgain() {\n      var _this3 = this;\n\n      var that = this;\n      this.bus.pageWs.then(function (ws) {\n        ws.$on([\"reply\", \"chat\"], function (data) {\n          if (data.msn_type == 1) {\n            data.msn = _this3.replace_em(data.msn);\n          }\n\n          if (data.msn_type == 2) {\n            if (data.msn.indexOf(\"[\") == -1) {\n              data.msn = _this3.replace_em(\"[\".concat(data.msn, \"]\"));\n            }\n          }\n\n          _this3.chatList.push(data);\n\n          _this3.$nextTick(function () {\n            this.scrollTop = document.querySelector(\"#chat_scroll\").offsetHeight;\n          });\n        });\n        ws.$on(\"reply\", function (data) {// mp3.play();\n        });\n        ws.$on(\"socket_error\", function () {\n          _this3.$Message.error(\"连接失败\");\n        });\n        ws.$on(\"err_tip\", function (data) {\n          _this3.$Message.error(data.msg);\n        }); // 用户上线提醒广播\n\n        ws.$on(\"user_online\", function (data) {\n          _this3.userOnline = data;\n        }); // 用户未读消息条数更改\n\n        ws.$on(\"mssage_num\", function (data) {\n          if (data.num > 0) {\n            mp3.play();\n          }\n\n          _this3.chatList.forEach(function (item) {\n            if (item.to_uid == data.uid) {\n              item.mssage_num = data.num;\n            }\n          });\n\n          if (data.recored.id) {\n            _this3.newRecored = data.recored;\n          }\n        });\n        ws.$on(\"timeout\", function (data) {\n          _this3.isShow = false;\n\n          _this3.wsRestart();\n        });\n        ws.$on('close', function () {\n          _this3.toChat = false;\n          _this3.isShow = false;\n        }); // ws登录成功\n\n        ws.$on(\"success\", function (data) {\n          _this3.isShow = true;\n\n          if (!_this3.toChat && _this3.userActive.to_uid) {\n            ws.send({\n              data: {\n                id: _this3.userActive.to_uid\n              },\n              type: \"to_chat\"\n            });\n          }\n        });\n      }).catch(function (error) {\n        _this3.wsRestart();\n      });\n    },\n    //微信截图上传图片时触发\n    handleParse: function handleParse(e) {\n      var file = null;\n\n      if (e.clipboardData && e.clipboardData.items[0] && e.clipboardData.items[0].type && e.clipboardData.items[0].type.indexOf(\"image\") > -1) {\n        //这里就是判断是否有粘贴进来的文件且文件为图片格式\n        file = e.clipboardData.items[0].getAsFile();\n      } else {\n        this.$message({\n          type: \"warning\",\n          message: \"上传的文件必须为图片且无法复制本地图片且无法同时复制多张图片\"\n        });\n        return;\n      }\n\n      this.update(file);\n    },\n    update: function update(e) {\n      var _this4 = this;\n\n      // 上传照片\n      var file = e;\n      var param = new FormData(); // 创建form对象\n\n      param.append(\"filename\", \"file\"); // 通过append向form对象添加数据进去\n\n      param.append(\"file\", file); // 通过append向form对象添加数据进去\n      // 添加请求头\n\n      uploadImg(param).then(function (res) {\n        _this4.sendMsg(res.data.url, 3);\n      });\n    },\n    beforeUpload: function beforeUpload() {},\n    wsRestart: function wsRestart() {\n      if (!this.bus.pageWs) {\n        this.bus.pageWs = Socket(true);\n        this.wsAgain();\n      }\n    },\n    handleFormatError: function handleFormatError(file) {\n      this.$Message.error(\"上传图片只能是 jpg、jpg、jpeg、gif 格式!\");\n    },\n    bindEnter: function bindEnter(e) {\n      if (e.target.value == \"\") {\n        return this.$Message.error(\"请输入消息\");\n      }\n\n      this.sendMsg(e.target.value, 1);\n      this.chatCon = \"\";\n    },\n    // 上传成功\n    handleSuccess: function handleSuccess(res, file, fileList) {\n      if (res.status === 200) {\n        this.$Message.success(res.msg);\n        this.sendMsg(res.data.url, 3);\n      } else {\n        this.$Message.error(res.msg);\n      }\n    },\n    // 订单详情\n    lookOrder: function lookOrder(item) {\n      this.isReturen = item.msn_type == 7;\n      this.orderId = item.orderInfo.id;\n      this.isOrder = true;\n    },\n    setOnline: function setOnline(data) {\n      this.bus.pageWs.then(function (ws) {\n        ws.send({\n          data: {\n            online: data\n          },\n          type: \"online\"\n        });\n      });\n      this.online = data;\n    },\n    // 阻止浏览器默认换行操作\n    listen: function listen(e) {\n      if (e.keyCode == 13) {\n        e.preventDefault();\n        return false;\n      }\n    },\n    // 输入框选择表情\n    select: function select(data) {\n      var val = \"[\".concat(data, \"]\");\n      this.chatCon += val;\n      this.isEmoji = false;\n    },\n    // 聊天表情转换\n    replace_em: function replace_em(str) {\n      str = str.replace(/\\[em-([\\s\\S]*)\\]/g, \"<span class='em em-$1'/></span>\");\n      return str;\n    },\n    changeLen: function changeLen(len) {\n      this.touristLen = len;\n    },\n    // 获取是否游客\n    changeType: function changeType(data) {\n      this.tourist = data;\n    },\n    // 获取列表用户信息\n    setDataId: function setDataId(data) {\n      var _this5 = this;\n\n      this.userActive = data;\n      this.toChat = false;\n      this.chatList = [];\n      this.upperId = 0;\n      this.oldHeight = 0;\n      this.isScroll = true;\n\n      if (data) {\n        window.document.title = data.nickname ? \"\\u6B63\\u5728\\u548C\".concat(data.nickname, \"\\u5BF9\\u8BDD\\u4E2D - \").concat(this.kefuInfo.site_name) : \"正在和游客对话中 - \" + this.kefuInfo.site_name;\n\n        if (this.isShow) {\n          this.bus.pageWs.then(function (ws) {\n            ws.send({\n              data: {\n                id: _this5.userActive.to_uid\n              },\n              type: \"to_chat\"\n            });\n            _this5.toChat = true;\n          });\n        }\n\n        this.getChatList();\n        this.$refs.textBox.focus();\n      } else {\n        window.document.title = this.kefuInfo.site_name;\n      }\n    },\n    msgClose: function msgClose() {\n      this.isTransfer = false;\n    },\n    // 话术选中\n    activeTxt: function activeTxt(data) {\n      this.chatCon = data;\n      this.isMsg = false;\n    },\n    // 文本发送\n    sendText: function sendText() {\n      this.sendMsg(this.chatCon, 1);\n      this.chatCon = \"\";\n    },\n    // 统一发送处理\n    sendMsg: function sendMsg(msn, type) {\n      var obj = {\n        type: \"chat\",\n        data: {\n          msn: msn,\n          type: type,\n          to_uid: this.userActive.to_uid,\n          is_tourist: this.tourist\n        }\n      };\n      this.bus.pageWs.then(function (ws) {\n        ws.send(obj);\n      });\n    },\n    send: function send(type, data) {\n      Socket.send({\n        data: data,\n        type: type\n      });\n    },\n    // 获取聊天列表\n    getChatList: function getChatList() {\n      var _this6 = this;\n\n      serviceList({\n        limit: this.limit,\n        uid: this.userActive.to_uid,\n        upperId: this.upperId,\n        is_tourist: this.tourist\n      }).then(function (res) {\n        res.data.forEach(function (el) {\n          if (el.msn_type == 1) {\n            el.msn = _this6.replace_em(el.msn);\n          } else if (el.msn_type == 2) {\n            el.msn = _this6.replace_em(\"[\".concat(el.msn, \"]\"));\n          }\n        });\n        var selector = \"\";\n\n        if (_this6.upperId == 0) {\n          selector = \"\";\n        } else {\n          selector = \"chat_\".concat(_this6.chatList[0].id);\n        } // this.chatList = res.data.concat(this.chatList)\n\n\n        _this6.chatList = [].concat(_toConsumableArray(res.data), _toConsumableArray(_this6.chatList));\n        _this6.upperId = res.data.length > 0 ? res.data[0].id : 0;\n        _this6.isLoad = false;\n\n        _this6.$nextTick(function () {\n          // this.scrollToTop()\n          _this6.isScroll = res.data.length >= _this6.limit;\n\n          _this6.setPageScrollTo(selector);\n        });\n      });\n    },\n    // 设置页面滚动位置\n    setPageScrollTo: function setPageScrollTo(selector) {\n      var _this7 = this;\n\n      this.$nextTick(function () {\n        if (selector) {\n          setTimeout(function () {\n            var num = parseFloat(document.getElementById(selector).offsetTop) - 60;\n            _this7.scrollTop = num;\n          }, 0);\n        } else {\n          var container = document.querySelector(\"#chat_scroll\");\n          _this7.scrollTop = container.offsetHeight;\n          setTimeout(function (res) {\n            if (_this7.scrollTop != _this7.$refs.scrollBox.offsetHeight) {\n              _this7.scrollTop = document.querySelector(\"#chat_scroll\").offsetHeight;\n            }\n          }, 300);\n        }\n      });\n    },\n    // 滚动到顶部\n    scrollHandler: function scrollHandler() {\n      var self = this;\n\n      if (this.isScroll && this.upperId) {\n        this.isLoad = true;\n        this.getChatList();\n      }\n    },\n    // 滚动条动画\n    scrollToTop: function scrollToTop(duration) {\n      var _this8 = this;\n\n      var container = document.querySelector(\"#chat_scroll\");\n      this.scrollTop = container.offsetHeight - this.oldHeight;\n      setTimeout(function (res) {\n        _this8.scrollTop = _this8.$refs.scrollBox.offsetHeight - _this8.oldHeight;\n      }, 300);\n    },\n    // 商品推送\n    bindPush: function bindPush(data) {\n      this.sendMsg(data, 5);\n    },\n    // 商品详情\n    lookGoods: function lookGoods(item) {\n      this.goodsId = item.msn;\n      this.isProductBox = true;\n    },\n    // 搜索用户\n    bindSearch: function bindSearch(data) {\n      this.searchData = data;\n      this.oldHeight = 0;\n      this.upperId = 0;\n      this.isScroll = false;\n    },\n    // 客服转接\n    transferPeople: function transferPeople(data) {\n      this.transferId = data.id;\n      this.isTransfer = false;\n      this.$Message.success(\"转接成功\");\n      this.bus.pageWs.then(function (ws) {\n        ws.send({\n          type: \"to_chat\",\n          data: {\n            id: data.uid\n          }\n        });\n      });\n    },\n    // 客服转接确定\n    transferOk: function transferOk() {}\n  }\n};",null]}