{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/statistic/product/components/productRanking.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/statistic/product/components/productRanking.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { statisticProductListApi } from '@/api/statistic';\nimport goodsDetail from \"../components/goodsDetail\";\nimport { formatDate } from '@/utils/validate';\nexport default {\n  name: \"productRanking\",\n  components: {\n    goodsDetail: goodsDetail\n  },\n  data: function data() {\n    return {\n      validateFun: this.$validateFun,\n      // options: this.$timeOptions,\n      options: {\n        shortcuts: [{\n          text: \"今天\",\n          value: function value() {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()));\n            return [start, end];\n          }\n        }, {\n          text: \"昨天\",\n          value: function value() {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 1)));\n            end.setTime(end.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 1)));\n            return [start, end];\n          }\n        }, {\n          text: \"最近7天\",\n          value: function value() {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 6)));\n            return [start, end];\n          }\n        }, {\n          text: \"最近30天\",\n          value: function value() {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 29)));\n            return [start, end];\n          }\n        }, {\n          text: \"本月\",\n          value: function value() {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), 1)));\n            return [start, end];\n          }\n        }, {\n          text: \"本年\",\n          value: function value() {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.setTime(new Date(new Date().getFullYear(), 0, 1)));\n            return [start, end];\n          }\n        }]\n      },\n      name: '近30天',\n      timeVal: [],\n      dataTime: '',\n      formValidate: {\n        limit: 10,\n        page: 1,\n        sort: 'visit',\n        data: ''\n      },\n      loading: false,\n      tabList: [],\n      total: 0,\n      columns4: [{\n        title: '商品图片',\n        slot: 'image',\n        minWidth: 80\n      }, {\n        title: '商品名称',\n        width: 180,\n        key: 'store_name'\n      }, {\n        title: '浏览量',\n        key: 'visit',\n        minWidth: 100\n      }, {\n        title: '访客数',\n        key: 'user',\n        minWidth: 100\n      }, {\n        title: '加购件数',\n        key: 'cart',\n        minWidth: 100\n      }, {\n        title: '下单件数',\n        key: 'orders',\n        minWidth: 100\n      }, {\n        title: '支付件数',\n        key: 'pay',\n        minWidth: 100\n      }, {\n        title: '支付金额',\n        key: 'price',\n        minWidth: 100\n      }, {\n        title: '毛利率(%)',\n        slot: 'profit',\n        minWidth: 100\n      }, {\n        title: '收藏数',\n        key: 'collect',\n        minWidth: 100\n      }, {\n        title: '访客-支付转化率(%)',\n        slot: 'changes',\n        minWidth: 120\n      }, {\n        title: '操作',\n        slot: 'action',\n        fixed: 'right',\n        minWidth: 80\n      }],\n      goodsId: \"\",\n      isProductBox: false,\n      list: [{\n        val: \"visit\",\n        name: '浏览量'\n      }, {\n        val: \"user\",\n        name: '访客数'\n      }, {\n        val: \"cart\",\n        name: '加购件数'\n      }, {\n        val: \"orders\",\n        name: '下单件数'\n      }, {\n        val: \"price\",\n        name: '支付金额'\n      }, {\n        val: \"profit\",\n        name: '毛利率'\n      }, {\n        val: \"collect\",\n        name: '收藏数'\n      }, {\n        val: \"changes\",\n        name: '访客-支付转化率'\n      }]\n    };\n  },\n  created: function created() {\n    var end = new Date();\n    var start = new Date();\n    start.setTime(start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 29)));\n    this.timeVal = [start, end];\n    this.formValidate.data = formatDate(start, 'yyyy/MM/dd') + '-' + formatDate(end, 'yyyy/MM/dd');\n  },\n  mounted: function mounted() {\n    this.getList();\n  },\n  methods: {\n    // 具体日期\n    onchangeTime: function onchangeTime(e) {\n      this.timeVal = e;\n      this.formValidate.data = this.timeVal.join('-');\n      this.name = this.formValidate.data;\n    },\n    changeMenu: function changeMenu(name) {\n      this.formValidate.sort = name;\n      this.getList();\n    },\n    // 列表\n    getList: function getList() {\n      var _this = this;\n\n      this.loading = true;\n      statisticProductListApi(this.formValidate).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  data = res.data;\n                  _this.tabList = data;\n                  _this.loading = false;\n\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this.loading = false;\n\n        _this.$Message.error(res.msg);\n      });\n    },\n    look: function look(row) {\n      this.goodsId = row.product_id;\n      this.isProductBox = true;\n    }\n  }\n};",null]}