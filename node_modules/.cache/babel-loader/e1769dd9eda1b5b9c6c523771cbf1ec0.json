{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/supplier/orderList/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/supplier/orderList/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport tabList from '../components/tableList.vue';\nimport expandRow from \"@/pages/order/orderList/components/tableExpand.vue\";\nimport { mapState, mapMutations } from 'vuex';\nimport timeOptions from '@/utils/timeOptions';\nimport { getSupplierList as _getSupplierList, getList as _getList } from '@/api/supplier';\nexport default {\n  name: '',\n  components: {\n    tabList: tabList,\n    expandRow: expandRow\n  },\n  props: {},\n  data: function data() {\n    return {\n      options: timeOptions,\n      ruleValidate: {},\n      formValidate: {\n        status: '',\n        // 订单状态\n        pay_type: '',\n        // 支付方式\n        data: '',\n        // 时间\n        field_key: '',\n        //订单搜索\n        real_name: '',\n        // 订单搜索内容\n        type: '',\n        // 订单类型\n        supplier_id: '' // 供应商id\n\n      },\n      page: {\n        total: 0,\n        // 总条数\n        pageNum: 1,\n        // 当前页\n        pageSize: 10 // 每页显示条数\n\n      },\n      grid: {\n        xl: 7,\n        lg: 12,\n        md: 24,\n        sm: 24,\n        xs: 24\n      },\n      timeVal: [],\n      supplierName: [],\n      typeList: [{\n        label: '全部订单',\n        val: ''\n      }, {\n        label: '普通订单',\n        val: '0'\n      }, {\n        label: '秒杀订单',\n        val: '1'\n      }, {\n        label: '拼团订单',\n        val: '3'\n      }, {\n        label: '砍价订单',\n        val: '2'\n      }, {\n        label: '预售商品',\n        val: '8'\n      }],\n      payList: [{\n        label: '全部',\n        val: ''\n      }, {\n        label: '微信支付',\n        val: '1'\n      }, {\n        label: '支付宝支付',\n        val: '4'\n      }, {\n        label: '余额支付',\n        val: '2'\n      }, {\n        label: '线下支付',\n        val: '3'\n      }],\n      cityList: [{\n        value: 'beijing',\n        label: '北京市'\n      }, {\n        value: 'shanghai',\n        label: '上海市'\n      }, {\n        value: 'shenzhen',\n        label: '深圳市'\n      }, {\n        value: 'hangzhou',\n        label: '杭州市'\n      }],\n      orderList: [],\n      columns: [{\n        type: \"expand\",\n        width: 30,\n        render: function render(h, params) {\n          return h(expandRow, {\n            props: {\n              row: params.row\n            }\n          });\n        }\n      }, // {\n      //   type: 'selection',\n      //   width: 60,\n      //   align: 'center'\n      // },\n      {\n        title: '订单号',\n        align: 'center',\n        slot: 'order_id',\n        minWidth: 180\n      }, {\n        title: '商品信息',\n        slot: 'info',\n        minWidth: 330,\n        align: 'left'\n      }, {\n        title: '供应商名称',\n        key: 'supplier_name',\n        minWidth: 80\n      }, {\n        title: '用户信息',\n        slot: 'nickname',\n        minWidth: 100\n      }, {\n        title: '实际支付',\n        key: 'pay_price',\n        minWidth: 70\n      }, {\n        title: '支付方式',\n        key: 'pay_type_name',\n        minWidth: 110\n      }, {\n        title: '支付时间',\n        key: '_pay_time',\n        minWidth: 150\n      }, {\n        title: '订单类型',\n        key: 'pink_name',\n        minWidth: 120\n      }, {\n        title: '订单状态',\n        slot: 'statusName',\n        minWidth: 120\n      }, {\n        title: '操作',\n        slot: 'action',\n        fixed: 'right',\n        minWidth: 170,\n        align: 'left'\n      }]\n    };\n  },\n  computed: _objectSpread({}, mapState('admin/layout', ['isMobile']), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    }\n  }),\n  watch: {},\n  created: function created() {\n    this.getSupplierList();\n    this.getList();\n  },\n  mounted: function mounted() {},\n  methods: {\n    // 选择时间\n    onchangeTime: function onchangeTime(e) {\n      if (e[1].slice(-8) === '00:00:00') {\n        e[1] = e[1].slice(0, -8) + '23:59:59';\n        this.timeVal = e;\n      } else {\n        this.timeVal = e;\n      }\n\n      this.formValidate.data = this.timeVal[0] ? this.timeVal.join('-') : '';\n    },\n    changeGetTabs: function changeGetTabs() {\n      this.$refs.table.getTabs();\n    },\n    // 获取供应商内容\n    getSupplierList: function getSupplierList() {\n      var _this = this;\n\n      _getSupplierList().then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this.supplierName = res.data;\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this.$Message.error(res.msg);\n      });\n    },\n    // 获取订单列表\n    getList: function getList() {\n      var _this2 = this;\n\n      var data = {\n        status: this.formValidate.status,\n        pay_type: this.formValidate.pay_type,\n        data: this.formValidate.data,\n        field_key: this.formValidate.field_key,\n        real_name: this.formValidate.real_name,\n        supplier_id: this.formValidate.supplier_id,\n        type: this.formValidate.type,\n        page: this.page.pageNum,\n        limit: this.page.pageSize\n      };\n\n      _getList(data).then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(res) {\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _this2.orderList = res.data.data;\n                  _this2.page.total = res.data.count;\n\n                case 2:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this2.$Message.error(res.msg);\n      });\n    },\n    // 重置\n    reset: function reset() {\n      this.formValidate = {};\n      this.formValidate.data = '';\n      this.timeVal = [];\n      this.getList();\n    }\n  }\n};",null]}