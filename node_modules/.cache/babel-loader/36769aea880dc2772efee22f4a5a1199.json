{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/notify/smsConfig/components/forgetPhone.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/notify/smsConfig/components/forgetPhone.vue","mtime":1640264908000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { captchaApi, configApi, serveModifyApi, updateHoneApi, serveInfoApi } from '@/api/setting';\nexport default {\n  name: 'forgetPhone',\n  props: {\n    isIndex: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    var validatePhone = function validatePhone(rule, value, callback) {\n      if (!value) {\n        return callback(new Error('请填写手机号'));\n      } else if (!/^1[3456789]\\d{9}$/.test(value)) {\n        callback(new Error('手机号格式不正确!'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (_this.formInline.checkPass !== '') {\n          _this.$refs.formInline.validateField('checkPass');\n        }\n\n        callback();\n      }\n    };\n\n    return {\n      cutNUm: '获取验证码',\n      canClick: true,\n      current: 0,\n      formInline: {\n        account: '',\n        account_show: '',\n        phone: '',\n        verify_code: '',\n        password: ''\n      },\n      ruleInline: {\n        phone: [{\n          required: true,\n          validator: validatePhone,\n          trigger: 'blur'\n        }],\n        verify_code: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        account: [{\n          required: true,\n          validator: validatePhone,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    // 短信验证码\n    cutDown: function cutDown() {\n      var _this2 = this;\n\n      if (this.formInline.phone) {\n        if (!this.canClick) return;\n        this.canClick = false;\n        this.cutNUm = 60;\n        var data = {\n          phone: this.formInline.phone\n        };\n        captchaApi(data).then(\n        /*#__PURE__*/\n        function () {\n          var _ref = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(res) {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _this2.$Message.success(res.msg);\n\n                  case 1:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }()).catch(function (res) {\n          _this2.$Message.error(res.msg);\n        });\n        var time = setInterval(function () {\n          _this2.cutNUm--;\n\n          if (_this2.cutNUm === 0) {\n            _this2.cutNUm = '获取验证码';\n            _this2.canClick = true;\n            clearInterval(time);\n          }\n        }, 1000);\n      } else {\n        this.$Message.warning('请填写手机号!');\n      }\n    },\n    handleSubmit1: function handleSubmit1(name) {\n      var _this3 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          _this3.handleSubmit(name, 1);\n        } else {\n          return false;\n        }\n      });\n    },\n    handleSubmit2: function handleSubmit2(name) {\n      var _this4 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          updateHoneApi(_this4.formInline).then(\n          /*#__PURE__*/\n          function () {\n            var _ref2 = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee2(res) {\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _this4.$Message.success(res.msg);\n\n                      _this4.current = 2;\n\n                    case 2:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            }));\n\n            return function (_x2) {\n              return _ref2.apply(this, arguments);\n            };\n          }()).catch(function (res) {\n            _this4.$Message.error(res.msg);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    //登录\n    handleSubmit: function handleSubmit(name, num) {\n      var _this5 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          configApi({\n            account: _this5.formInline.account,\n            password: _this5.formInline.password\n          }).then(\n          /*#__PURE__*/\n          function () {\n            var _ref3 = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee3(res) {\n              return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      num === 1 ? _this5.$Message.success(\"原手机号密码正确\") : _this5.$Message.success(\"登录成功\");\n                      num === 1 ? _this5.current = 1 : _this5.$emit('on-Login');\n\n                    case 2:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            }));\n\n            return function (_x3) {\n              return _ref3.apply(this, arguments);\n            };\n          }()).catch(function (res) {\n            _this5.$Message.error(res.msg);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    returns: function returns() {\n      this.current === 0 ? this.$emit('gobackPhone') : this.current = 0;\n    }\n  },\n  mounted: function mounted() {\n    var _this6 = this;\n\n    serveInfoApi().then(function (res) {\n      _this6.formInline.account = res.data.phone;\n      _this6.formInline.account_show = res.data.phone.replace(/(\\d{3})\\d{4}(\\d{4})/, '$1****$2');\n    });\n  }\n};",null]}