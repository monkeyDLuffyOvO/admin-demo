{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/notify/smsConfig/tableList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/notify/smsConfig/tableList.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { smsRecordApi, serveInfoApi, serveSmsOpenApi, serveOpnExpressApi, serveOpnOtherApi, serveRecordListApi, exportTempApi, exportAllApi, serveSign, captchaApi, serveOpen, serveDumpOpen } from \"@/api/setting\";\nexport default {\n  name: \"tableList\",\n  props: {\n    copy: {\n      type: Object,\n      default: null\n    },\n    dump: {\n      type: Object,\n      default: null\n    },\n    query: {\n      type: Object,\n      default: null\n    },\n    sms: {\n      type: Object,\n      default: null\n    },\n    accountInfo: {\n      type: Object,\n      default: null\n    }\n  },\n  data: function data() {\n    var validatePhone = function validatePhone(rule, value, callback) {\n      if (!value) {\n        return callback(new Error(\"请填写手机号\"));\n      } else if (!/^1[3456789]\\d{9}$/.test(value)) {\n        callback(new Error(\"手机号格式不正确!\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      cutNUm: \"获取验证码\",\n      canClick: true,\n      spinShow: true,\n      formInline: {\n        sign: \"\",\n        phone: \"\",\n        code: \"\"\n      },\n      sign: '',\n      ruleInline: {\n        sign: [{\n          required: true,\n          message: \"请输入短信签名\",\n          trigger: \"blur\"\n        }],\n        phone: [{\n          required: true,\n          validator: validatePhone,\n          trigger: \"blur\"\n        }],\n        code: [{\n          required: true,\n          message: \"请输入验证码\",\n          trigger: \"blur\"\n        }]\n      },\n      isChecked: \"4\",\n      columns1: [// {\n      //     title: 'ID',\n      //     key: 'id',\n      //     width: 80\n      // },\n      {\n        title: \"手机号\",\n        key: \"phone\",\n        minWidth: 100\n      }, {\n        title: \"模板内容\",\n        key: \"content\",\n        width: 590\n      }, // {\n      //     title: '模板ID',\n      //     key: 'template',\n      //     minWidth: 100\n      // },\n      {\n        title: \"发送时间\",\n        key: \"add_time\",\n        minWidth: 150\n      }, {\n        title: \"状态码\",\n        key: \"_resultcode\",\n        minWidth: 100\n      }],\n      columns2: [],\n      tableFrom: {\n        page: 1,\n        limit: 20,\n        type: \"\"\n      },\n      total: 0,\n      loading: false,\n      tableList: [],\n      formInlineDump: {\n        temp_id: \"\",\n        com: \"\",\n        to_name: \"\",\n        to_tel: \"\",\n        siid: \"\",\n        to_address: \"\"\n      },\n      ruleInlineDump: {\n        com: [{\n          required: true,\n          message: \"请选择快递公司\",\n          trigger: \"change\"\n        }],\n        temp_id: [{\n          required: true,\n          message: \"请选择打印模板\",\n          trigger: \"change\"\n        }],\n        to_name: [{\n          required: true,\n          message: \"请输寄件人姓名\",\n          trigger: \"blur\"\n        }],\n        to_tel: [{\n          required: true,\n          validator: validatePhone,\n          trigger: \"blur\"\n        }],\n        siid: [{\n          required: true,\n          message: \"请输入云打印机编号\",\n          trigger: \"blur\"\n        }],\n        to_address: [{\n          required: true,\n          message: \"请输寄件人地址\",\n          trigger: \"blur\"\n        }]\n      },\n      tempImg: \"\",\n      // 图片\n      exportTempList: [],\n      // 电子面单模板\n      exportList: [],\n      // 快递公司列表\n      isSms: false,\n      // 是否开通短信\n      isDump: false,\n      // 是否开通电子面单,是否开通物流查询\n      isCopy: false,\n      // 是否开通商品采集\n      modals: false,\n      isDumpOpen: false\n    };\n  },\n  watch: {\n    copy: function copy(n) {\n      if (n.open === 1) this.getRecordList();\n    }\n  },\n  created: function created() {\n    if (this.isChecked === \"4\" && this.copy.open === 1) this.getRecordList();\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    serveDumpOpen().then(function (res) {\n      _this.isDumpOpen = res.data.isOpen;\n    });\n  },\n  methods: {\n    //短信模板页\n    shortMes: function shortMes() {\n      this.$router.push({\n        path: \"/admin/setting/sms/sms_template_apply/index\"\n      });\n    },\n    // 短信验证码\n    cutDown: function cutDown() {\n      var _this2 = this;\n\n      if (this.formInline.phone) {\n        if (!this.canClick) return;\n        this.canClick = false;\n        this.cutNUm = 60;\n        var data = {\n          phone: this.formInline.phone\n        };\n        captchaApi(data).then(\n        /*#__PURE__*/\n        function () {\n          var _ref = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(res) {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _this2.$Message.success(res.msg);\n\n                  case 1:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }()).catch(function (res) {\n          _this2.$Message.error(res.msg);\n        });\n        var time = setInterval(function () {\n          _this2.cutNUm--;\n\n          if (_this2.cutNUm === 0) {\n            _this2.cutNUm = \"获取验证码\";\n            _this2.canClick = true;\n            clearInterval(time);\n          }\n        }, 1000);\n      } else {\n        this.$Message.warning(\"请填写手机号!\");\n      }\n    },\n    editSign: function editSign() {\n      if (this.accountInfo.sms.sign_status === 0) {\n        this.$Message.warning(\"签名待审核中，暂无法修改\");\n        return;\n      }\n\n      this.sign = this.accountInfo.sms.sign;\n      this.formInline.sign = '';\n      this.formInline.phone = this.accountInfo.phone;\n      this.modals = true;\n    },\n    cancel: function cancel(name) {\n      this.modals = false;\n      this.$refs[name].resetFields();\n    },\n    // 提交\n    editSubmit: function editSubmit(name) {\n      var _this3 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          serveSign(_this3.formInline).then(function (res) {\n            _this3.modals = false;\n\n            _this3.$Message.success(res.msg);\n\n            _this3.$refs[name].resetFields();\n          }).catch(function (res) {\n            _this3.$Message.error(res.msg);\n          });\n        }\n      });\n    },\n    onChangeImg: function onChangeImg(item) {\n      var _this4 = this;\n\n      this.exportTempList.map(function (i) {\n        if (i.temp_id === item) _this4.tempImg = i.pic;\n      });\n    },\n    // 物流公司\n    exportTempAllList: function exportTempAllList() {\n      var _this5 = this;\n\n      exportAllApi().then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(res) {\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _this5.exportList = res.data;\n\n                case 1:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this5.$Message.error(res.msg);\n      });\n    },\n    // 快递公司选择\n    onChangeExport: function onChangeExport(val) {\n      this.formInlineDump.temp_id = \"\";\n      this.exportTemp(val);\n    },\n    // 电子面单模板\n    exportTemp: function exportTemp(val) {\n      var _this6 = this;\n\n      exportTempApi({\n        com: val\n      }).then(\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee3(res) {\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _this6.exportTempList = res.data.data;\n\n                case 1:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this6.$Message.error(res.msg);\n      });\n    },\n    onChangeType: function onChangeType() {\n      this.tableFrom.page = 1;\n\n      if (this.isChecked === \"1\" && this.sms.open === 1) {\n        this.tableFrom.type = \"\";\n        this.getList();\n      } else {\n        if (this.isChecked === \"2\" && this.query.open === 0) this.isDump = false;\n        if (this.dump.open === 1 || this.query.open === 1 || this.copy.open === 1) this.getRecordList();\n      }\n\n      if (this.dump.open === 0 && this.isChecked === \"3\") {\n        this.isDumpOpen = false;\n      }\n    },\n    // 其他列表\n    getRecordList: function getRecordList() {\n      var _this7 = this;\n\n      this.loading = true;\n      this.tableFrom.type = this.isChecked;\n      serveRecordListApi(this.tableFrom).then(\n      /*#__PURE__*/\n      function () {\n        var _ref4 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee4(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  data = res.data;\n                  _this7.tableList = data.data;\n                  _this7.total = res.data.count;\n                  _context4.t0 = _this7.isChecked;\n                  _context4.next = _context4.t0 === \"2\" ? 6 : _context4.t0 === \"3\" ? 8 : 10;\n                  break;\n\n                case 6:\n                  _this7.columns2 = [{\n                    title: \"订单号\",\n                    key: \"order_id\",\n                    minWidth: 150\n                  }, {\n                    title: \"发货人\",\n                    key: \"from_name\",\n                    minWidth: 120\n                  }, {\n                    title: \"收货人\",\n                    key: \"to_name\",\n                    minWidth: 120\n                  }, {\n                    title: \"快递单号\",\n                    key: \"num\",\n                    minWidth: 120\n                  }, {\n                    title: \"快递公司编码\",\n                    key: \"code\",\n                    minWidth: 120\n                  }, {\n                    title: \"状态\",\n                    key: \"_resultcode\",\n                    minWidth: 100\n                  }, {\n                    title: \"打印时间\",\n                    key: \"add_time\",\n                    minWidth: 150\n                  }];\n                  return _context4.abrupt(\"break\", 12);\n\n                case 8:\n                  _this7.columns2 = [{\n                    title: \"快递单号\",\n                    slot: \"num\",\n                    minWidth: 120\n                  }, {\n                    title: \"快递公司编码\",\n                    key: \"code\",\n                    minWidth: 120\n                  }, {\n                    title: \"状态\",\n                    key: \"_resultcode\",\n                    minWidth: 120\n                  }, {\n                    title: \"添加时间\",\n                    key: \"add_time\",\n                    minWidth: 150\n                  }];\n                  return _context4.abrupt(\"break\", 12);\n\n                case 10:\n                  _this7.columns2 = [{\n                    title: \"复制URL\",\n                    key: \"url\",\n                    minWidth: 400\n                  }, {\n                    title: \"请求状态\",\n                    key: \"_resultcode\",\n                    minWidth: 120\n                  }, {\n                    title: \"添加时间\",\n                    key: \"add_time\",\n                    minWidth: 150\n                  }];\n                  return _context4.abrupt(\"break\", 12);\n\n                case 12:\n                  _this7.loading = false;\n\n                case 13:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref4.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this7.loading = false;\n\n        _this7.$Message.error(res.msg);\n      });\n    },\n    pageChangeOther: function pageChangeOther(index) {\n      this.tableFrom.page = index;\n      this.getRecordList();\n    },\n    // 开通短信提交\n    handleSubmit: function handleSubmit(name) {\n      var _this8 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          serveSmsOpenApi(_this8.formInline).then(\n          /*#__PURE__*/\n          function () {\n            var _ref5 = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee5(res) {\n              return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _this8.$Message.success(\"开通成功!\");\n\n                      _this8.getList();\n\n                      _this8.$emit(\"openService\", \"sms\");\n\n                    case 3:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, _callee5);\n            }));\n\n            return function (_x5) {\n              return _ref5.apply(this, arguments);\n            };\n          }()).catch(function (res) {\n            _this8.$Message.error(res.msg);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 首页去开通\n    onOpenIndex: function onOpenIndex(val) {\n      switch (val) {\n        case \"sms\":\n          this.isChecked = \"1\";\n          this.isSms = true;\n          break;\n\n        case \"copy\":\n          this.isChecked = \"4\";\n          this.openOther();\n          break;\n\n        case \"query\":\n          this.isChecked = \"3\";\n          this.onDumpOpen();\n          break;\n\n        default:\n          this.isChecked = \"2\";\n          this.openDump();\n          break;\n      }\n    },\n    // 开通按钮\n    onOpen: function onOpen() {\n      if (this.isChecked === \"1\") this.isSms = true;\n      if (this.isChecked === \"2\") this.openDump();\n      if (this.isChecked === \"4\") this.openOther();\n      if (this.isChecked === \"3\") this.onDumpOpen();\n    },\n    // 开通物流\n    onDumpOpen: function onDumpOpen() {\n      var _this9 = this;\n\n      this.$Modal.confirm({\n        title: \"开通物流查询吗\",\n        content: \"<p>确定要开通物流查询吗</p>\",\n        onOk: function onOk() {\n          serveOpen().then(function (res) {\n            _this9.$Message.info(res.msg);\n          });\n        },\n        onCancel: function onCancel() {// this.$Message.info('Clicked cancel');\n        }\n      });\n    },\n    // 开通其他\n    openOther: function openOther() {\n      var _this10 = this;\n\n      this.$Modal.confirm({\n        title: \"开通商品采集吗\",\n        content: \"<p>确定要开通商品采集吗</p>\",\n        loading: true,\n        onOk: function onOk() {\n          _this10.$Modal.remove();\n\n          setTimeout(function () {\n            serveOpnOtherApi({\n              type: 1\n            }).then(\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee6(res) {\n                return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        _this10.getRecordList();\n\n                        _this10.$emit(\"openService\", \"copy\");\n\n                      case 2:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n\n              return function (_x6) {\n                return _ref6.apply(this, arguments);\n              };\n            }()).catch(function (res) {\n              _this10.$Message.error(res.msg);\n            });\n          }, 300);\n        },\n        onCancel: function onCancel() {}\n      });\n    },\n    // 开通电子面单\n    openDump: function openDump() {\n      this.exportTempAllList();\n      this.isDumpOpen = true;\n    },\n    // 选择\n    selectChange: function selectChange(tab) {\n      this.tableFrom.type = tab;\n      this.tableFrom.page = 1;\n      this.getList();\n    },\n    // 列表\n    getList: function getList() {\n      var _this11 = this;\n\n      this.loading = true;\n      smsRecordApi(this.tableFrom).then(\n      /*#__PURE__*/\n      function () {\n        var _ref7 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee7(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  data = res.data;\n                  _this11.tableList = data.data;\n                  _this11.total = res.data.count;\n                  _this11.spinShow = false;\n                  _this11.loading = false;\n\n                case 5:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x7) {\n          return _ref7.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this11.spinShow = false;\n        _this11.loading = false;\n\n        _this11.$Message.error(res.msg);\n      });\n    },\n    pageChange: function pageChange(index) {\n      this.tableFrom.page = index;\n      this.getList();\n    },\n    // 表格搜索\n    userSearchs: function userSearchs() {\n      this.getList();\n    },\n    handleSubmitDump: function handleSubmitDump(name) {\n      var _this12 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          serveOpnExpressApi(_this12.formInlineDump).then(\n          /*#__PURE__*/\n          function () {\n            var _ref8 = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee8(res) {\n              return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                while (1) {\n                  switch (_context8.prev = _context8.next) {\n                    case 0:\n                      _this12.$Message.success(\"开通成功!\");\n\n                      _this12.getRecordList();\n\n                      _this12.$emit(\"openService\", \"dump\");\n\n                    case 3:\n                    case \"end\":\n                      return _context8.stop();\n                  }\n                }\n              }, _callee8);\n            }));\n\n            return function (_x8) {\n              return _ref8.apply(this, arguments);\n            };\n          }()).catch(function (res) {\n            _this12.$Message.error(res.msg);\n          });\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};",null]}