{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/components/mobilePage/banner.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/components/mobilePage/banner.vue","mtime":1644542250000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"banner\",\n  // 组件名称\n  cname: \"轮播图\",\n  // 标题名称\n  icon: \"icontupianguanggao1\",\n  defaultName: \"swiperBg\",\n  // 外面匹配名称\n  configName: \"c_banner\",\n  // 右侧配置名称\n  type: 0,\n  // 0 基础组件 1 营销组件 2工具组件\n  props: {\n    index: {\n      type: null\n    },\n    num: {\n      type: null\n    }\n  },\n  computed: _objectSpread({}, mapState(\"admin/mobildConfig\", [\"defaultArray\"])),\n  watch: {\n    pageData: {\n      handler: function handler(nVal, oVal) {\n        this.setConfig(nVal);\n      },\n      deep: true\n    },\n    num: {\n      handler: function handler(nVal, oVal) {\n        var data = this.$store.state.admin.mobildConfig.defaultArray[nVal];\n        this.setConfig(data);\n      },\n      deep: true\n    },\n    defaultArray: {\n      handler: function handler(nVal, oVal) {\n        var data = this.$store.state.admin.mobildConfig.defaultArray[this.num];\n        this.setConfig(data);\n      },\n      deep: true\n    }\n  },\n  data: function data() {\n    return {\n      // 默认初始化数据禁止修改\n      defaultConfig: {\n        name: \"swiperBg\",\n        timestamp: this.num,\n        setUp: {\n          tabVal: 0\n        },\n        // 模板选择\n        // tabConfig: {\n        //   tabVal: 0,\n        //   type: 1,\n        //   tabList: [\n        //     {\n        //       name: \"单图模板\",\n        //       icon: \"iconbanner_1\",\n        //     },\n        //     {\n        //       name: \"多图模板1\",\n        //       icon: \"iconbanner_2\",\n        //     },\n        //     {\n        //       name: \"多图模板2\",\n        //       icon: \"iconbanner_3\",\n        //     },\n        //   ],\n        // },\n        // 图片列表\n        swiperConfig: {\n          title: \"最多可添加10张图片，建议宽度750px；鼠标拖拽左侧圆点可调整图片 顺序\",\n          maxList: 10,\n          list: [{\n            img: \"\",\n            info: [{\n              title: \"标题\",\n              value: \"今日推荐\",\n              tips: \"选填，不超过4个字\",\n              max: 4\n            }, {\n              title: \"链接\",\n              value: \"\",\n              tips: \"请输入链接\",\n              max: 100\n            }]\n          }]\n        },\n        isShow: {\n          title: '是否显示背景色',\n          val: true\n        },\n        // 背景颜色\n        bgColor: {\n          title: \"背景颜色(渐变)\",\n          default: [{\n            item: \"#F62C2C\"\n          }, {\n            item: \"#F96E29\"\n          }],\n          color: [{\n            item: \"#F62C2C\"\n          }, {\n            item: \"#F96E29\"\n          }]\n        },\n        dotColor: {\n          title: \"指示器颜色\",\n          default: [{\n            item: \"#fff\"\n          }],\n          color: [{\n            item: \"#fff\"\n          }]\n        },\n        // 左右间距\n        lrConfig: {\n          title: \"左右边距\",\n          val: 10,\n          min: 0\n        },\n        // 页面间距\n        mbConfig: {\n          title: \"页面间距\",\n          val: 0,\n          min: 0\n        },\n        // 轮播图点样式\n        docConfig: {\n          cname: \"swiper\",\n          title: \"指示器样式\",\n          type: 0,\n          list: [{\n            val: \"圆形\",\n            icon: \"iconDot\"\n          }, {\n            val: \"直线\",\n            icon: \"iconSquarepoint\"\n          }, {\n            val: \"数字\",\n            icon: \"iconshuzi\"\n          }, {\n            val: \"无指示器\",\n            icon: \"iconjinyong\"\n          }]\n        },\n        txtStyle: {\n          title: '指示器位置',\n          type: 0,\n          list: [{\n            val: '居左',\n            icon: 'icondoc_left'\n          }, {\n            val: '居中',\n            icon: 'icondoc_center'\n          }, {\n            val: '居右',\n            icon: 'icondoc_right'\n          }]\n        },\n        // 图片样式\n        imgConfig: {\n          cname: \"docStyle\",\n          title: \"轮播图样式\",\n          type: 0,\n          list: [{\n            val: \"圆角\",\n            icon: \"iconPic_fillet\"\n          }, {\n            val: \"直角\",\n            icon: \"iconPic_square\"\n          }]\n        }\n      },\n      pageData: {},\n      bgColor: [],\n      mTOP: 0,\n      edge: 0,\n      imgStyle: 0,\n      imgSrc: \"\",\n      docStyle: 0,\n      dotPosition: 0,\n      dotColor: \"\",\n      isShow: true\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.pageData = _this.$store.state.admin.mobildConfig.defaultArray[_this.num];\n\n      _this.setConfig(_this.pageData);\n    });\n  },\n  methods: {\n    setConfig: function setConfig(data) {\n      if (!data) return;\n\n      if (data.mbConfig) {\n        this.isShow = data.isShow.val;\n        this.bgColor = data.bgColor.color;\n        this.mTOP = data.mbConfig.val;\n        this.edge = data.lrConfig.val;\n        this.imgStyle = data.imgConfig.type;\n        this.imgSrc = data.swiperConfig.list.length ? data.swiperConfig.list[0].img : \"\";\n        this.docStyle = data.docConfig.type;\n        this.dotPosition = data.txtStyle.type;\n        this.dotColor = data.dotColor.color[0].item;\n      }\n    }\n  }\n};",null]}