{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/components/mobileConfig/c_home_seckill.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/components/mobileConfig/c_home_seckill.vue","mtime":1662686947000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport toolCom from '@/components/mobileConfigRight/index.js';\nimport { mapState, mapMutations, mapActions } from 'vuex';\nimport rightBtn from '@/components/rightBtn/index.vue';\nexport default {\n  name: 'c_home_seckill',\n  componentsName: 'home_seckill',\n  cname: '秒杀',\n  props: {\n    activeIndex: {\n      type: null\n    },\n    num: {\n      type: null\n    },\n    index: {\n      type: null\n    }\n  },\n  components: _objectSpread({}, toolCom, {\n    rightBtn: rightBtn\n  }),\n  data: function data() {\n    return {\n      configObj: {},\n      rCom: [{\n        components: toolCom.c_set_up,\n        configNme: 'setUp'\n      }]\n    };\n  },\n  watch: {\n    num: function num(nVal) {\n      // debugger;\n      var value = JSON.parse(JSON.stringify(this.$store.state.admin.mobildConfig.defaultArray[nVal]));\n      this.configObj = value;\n    },\n    configObj: {\n      handler: function handler(nVal, oVal) {\n        this.$store.commit('admin/mobildConfig/UPDATEARR', {\n          num: this.num,\n          val: nVal\n        });\n      },\n      deep: true\n    },\n    'configObj.setUp.tabVal': {\n      handler: function handler(nVal, oVal) {\n        var arr = [this.rCom[0]];\n\n        if (nVal == 0) {\n          var tempArr = [{\n            components: toolCom.c_input_number,\n            configNme: 'numberConfig'\n          }, {\n            components: toolCom.c_is_show,\n            configNme: 'priceShow'\n          }, {\n            components: toolCom.c_is_show,\n            configNme: 'discountShow'\n          }, {\n            components: toolCom.c_is_show,\n            configNme: 'titleShow'\n          }, {\n            components: toolCom.c_is_show,\n            configNme: 'seckillShow'\n          }];\n          this.rCom = arr.concat(tempArr);\n        } else {\n          var _tempArr = [{\n            components: toolCom.c_upload_img,\n            configNme: 'imgConfig'\n          }, {\n            components: toolCom.c_bg_color,\n            configNme: 'countDownColor'\n          }, {\n            components: toolCom.c_bg_color,\n            configNme: 'themeColor'\n          }, {\n            components: toolCom.c_bg_color,\n            configNme: 'fontColor'\n          }, {\n            components: toolCom.c_bg_color,\n            configNme: 'bgColor'\n          }, {\n            components: toolCom.c_txt_tab,\n            configNme: 'conStyle'\n          }, {\n            components: toolCom.c_slider,\n            configNme: 'prConfig'\n          }, {\n            components: toolCom.c_slider,\n            configNme: 'lrConfig'\n          }, {\n            components: toolCom.c_slider,\n            configNme: 'mbConfig'\n          }];\n          this.rCom = arr.concat(_tempArr);\n        }\n      },\n      deep: true\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      var value = JSON.parse(JSON.stringify(_this.$store.state.admin.mobildConfig.defaultArray[_this.num]));\n      _this.configObj = value;\n    });\n  },\n  methods: {\n    // 获取组件参数\n    getConfig: function getConfig(data) {}\n  }\n};",null]}