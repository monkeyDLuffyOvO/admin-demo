{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/components/fromBuild/uploadFrameBuild.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/components/fromBuild/uploadFrameBuild.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport build from \"./build\";\nimport lookImage from \"./lookImage\"; //单选和多选iFrame图片组件\n\nexport default {\n  name: \"uploadFrameBuild\",\n  mixins: [build],\n  components: {\n    lookImage: lookImage\n  },\n  props: {\n    //上传配置\n    upload: {\n      type: Object,\n      default: function _default() {\n        return {\n          url: '',\n          width: '800px',\n          height: '900px',\n          field: '',\n          maxNum: 1\n        };\n      }\n    },\n    icon: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      visible: false,\n      multiple: false,\n      imageUrl: '',\n      disabledSeleteImage: true,\n      baseUrl: ''\n    };\n  },\n  watch: {\n    valueModel: {\n      handler: function handler(n) {\n        if (this.multiple) {\n          this.getUploadUrl();\n\n          if (n.length >= this.upload.maxNum) {\n            this.disabledSeleteImage = false;\n          } else {\n            this.disabledSeleteImage = true;\n          }\n        } else {\n          this.disabledSeleteImage = !!!n;\n        }\n\n        this.changeValue();\n      },\n      deep: true\n    }\n  },\n  created: function created() {\n    this.multiple = this.upload.maxNum > 1;\n    this.baseUrl = this.upload.url;\n    this.getUploadUrl();\n\n    if (this.multiple) {\n      if (_typeof(this.valueModel) !== 'object') {\n        this.valueModel = [];\n      }\n    } else {\n      if (typeof this.valueModel !== 'string') {\n        this.valueModel = '';\n      }\n    }\n\n    if (this.multiple) {\n      if (this.valueModel.length >= this.upload.maxNum) {\n        this.disabledSeleteImage = false;\n      } else {\n        this.disabledSeleteImage = true;\n      }\n    } else {\n      this.disabledSeleteImage = !!!this.valueModel;\n    }\n  },\n  methods: {\n    getUploadUrl: function getUploadUrl() {\n      var maxLength = this.multiple ? this.upload.maxNum - this.valueModel.length : 1;\n      this.upload.url = this.baseUrl + (this.baseUrl.indexOf('?') !== -1 ? '&fodder=' + this.field : '?fodder=' + this.field) + '&maxLength=' + maxLength;\n      this.upload.url += this.multiple ? '&type=many' : 'type=0';\n    },\n    handleView: function handleView(url) {\n      this.imageUrl = url;\n      this.$refs.lookImage.open();\n    },\n    handleRemove: function handleRemove(index) {\n      if (this.multiple) {\n        this.valueModel.splice(index, 1);\n      } else {\n        this.valueModel = '';\n      }\n    },\n    changeValue: function changeValue() {\n      this.$emit('changeValue', {\n        field: this.field,\n        value: this.valueModel\n      }); //触发change事件\n\n      this.on['change'] && this.on['change'](this.valueModel);\n    },\n    selectImage: function selectImage() {\n      this.visible = true;\n    },\n    closeUploadFrame: function closeUploadFrame() {\n      this.visible = false;\n    },\n    setValue: function setValue(url) {\n      if (!this.multiple) {\n        this.valueModel = url[this.upload.field] || '';\n      } else {\n        if (_typeof(url) === \"object\") {\n          this.valueModel = url;\n        }\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (window.$fromSubmit === undefined) {\n      window.$fromSubmit = {};\n    }\n\n    window.$fromSubmit[this.field] = {\n      closeUploadFrame: null,\n      setValue: null,\n      getValue: null\n    };\n\n    window.$fromSubmit[this.field].closeUploadFrame = function () {\n      return _this.closeUploadFrame();\n    };\n\n    window.$fromSubmit[this.field].getValue = function () {\n      return _this.valueModel;\n    };\n\n    window.$fromSubmit[this.field].setValue = function (url) {\n      return _this.setValue(url);\n    };\n  }\n};",null]}