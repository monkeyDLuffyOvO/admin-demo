{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/setting/cityDada/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/setting/cityDada/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport { cityListApi, cityAddApi, cityApi, cityCleanCacheApi } from \"@/api/setting\";\nexport default {\n  name: \"setting_dada\",\n  data: function data() {\n    return {\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24\n      },\n      loading: false,\n      columns1: [{\n        title: \"编号\",\n        key: \"id\",\n        width: 80\n      }, {\n        title: \"地区名称\",\n        key: \"label\",\n        minWidth: 300,\n        tree: true\n      }, {\n        title: \"上级名称\",\n        key: \"parent_name\",\n        minWidth: 300\n      }, {\n        title: \"操作\",\n        slot: \"action\",\n        // fixed: \"right\",\n        minWidth: 120\n      }],\n      cityLists: [],\n      cityId: 0 // 城市id\n\n    };\n  },\n  computed: _objectSpread({}, mapState(\"media\", [\"isMobile\"]), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 75;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? \"top\" : \"left\";\n    }\n  }),\n  created: function created() {\n    this.getList(0);\n  },\n  methods: {\n    // 城市列表\n    getList: function getList(parentId) {\n      var that = this;\n      that.loading = true;\n      cityListApi(parentId).then(function (res) {\n        that.cityLists = res.data;\n        that.loading = false;\n      }).catch(function (res) {\n        that.loading = false;\n        that.$Message.error(res.msg);\n      });\n    },\n    // handleLoadData (item, callback) {\n    // \tcityListApi(item.id).then(res=>{\n    // \t\tcallback(res.data);\n    // \t});\n    // },\n    handleLoadData: function handleLoadData(item, callback) {\n      item._loading = true;\n      cityListApi(item.id).then(function (res) {\n        // item.children = res.data;\n        item._loading = false;\n        callback(res.data);\n      });\n    },\n    // 删除\n    del: function del(row, tit, num) {\n      var _this = this;\n\n      var delfromData = {\n        title: tit,\n        num: num,\n        url: \"setting/city/del/\".concat(row.id),\n        method: \"DELETE\",\n        ids: \"\"\n      };\n      this.$modalSure(delfromData).then(function (res) {\n        _this.$Message.success(res.msg);\n\n        _this.cityLists.splice(num, 1);\n\n        _this.getList(0);\n      }).catch(function (res) {\n        _this.$Message.error(res.msg);\n      });\n    },\n    // 修改\n    edit: function edit(id) {\n      var _this2 = this;\n\n      this.$modalForm(cityApi(id)).then(function () {\n        return _this2.getList(0);\n      });\n    },\n    // 添加\n    add: function add(cityId) {\n      var _this3 = this;\n\n      this.$modalForm(cityAddApi(cityId)).then(function () {\n        return _this3.getList(0);\n      });\n    },\n    // 清除缓存；\n    cleanCache: function cleanCache() {\n      var _this4 = this;\n\n      cityCleanCacheApi().then(function (res) {\n        _this4.$Message.success(res.msg);\n      }).catch(function (res) {\n        _this4.$Message.success(res.msg);\n      });\n    }\n  }\n};",null]}