{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/kefu/mobile/orderList/orderDelivery.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/kefu/mobile/orderList/orderDelivery.vue","mtime":1643074684000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { orderSendApi, orderDetailApi } from '@/api/order';\nimport { orderTemp, orderInfo, orderExport, orderDelivery, getSender, orderDeliveryAll } from '@/api/kefu';\nimport { required, num } from \"@/utils/validate\";\nimport { validatorDefaultCatch } from \"@/libs/dialog\";\nimport vuePickers from 'vue-pickers';\nexport default {\n  name: \"GoodsDeliver\",\n  components: {\n    vuePickers: vuePickers\n  },\n  props: {},\n  data: function data() {\n    return {\n      pickerVisible: false,\n      // 快递公司选择\n      types: [{\n        type: 1,\n        title: \"发货\"\n      }, {\n        type: 2,\n        title: \"送货\"\n      }, {\n        type: 3,\n        title: \"无需发货\"\n      }],\n      expressType: [{\n        title: '手动填写',\n        key: 1\n      }, {\n        title: '电子面单打印',\n        key: 2\n      }],\n      active: 0,\n      activeExpTpe: 0,\n      orderId: \"\",\n      delivery: null,\n      pickData: [],\n      type: \"1\",\n      result: {},\n      expFrom: {\n        type: 1,\n        // 发货方式\n        delivery_name: '',\n        //快递公司\n        delivery_id: '',\n        //快递单号\n        delivery_code: '',\n        //快递公司编码\n        express_record_type: 1,\n        // 发货类型\n        express_temp_id: '',\n        // 电子面单模板\n        to_name: '',\n        to_tel: '',\n        to_addr: '',\n        sh_delivery_name: '',\n        sh_delivery_id: '',\n        sh_delivery_uid: '',\n        fictitious_content: ''\n      },\n      expTemp: [],\n      pickerVisibleName: false,\n      // 送货人选择\n      pickerVisibleExpTemp: false,\n      //电子面单选择\n      expTempData: [],\n      // 面单数据\n      tempName: '',\n      // 面单名称\n      tempImg: '',\n      //面单图片\n      deliveryList: [],\n      // 送货人数据\n      productType: 0\n    };\n  },\n  watch: {\n    \"$route.params.orderId\": function $routeParamsOrderId(newVal) {\n      var that = this;\n\n      if (newVal != undefined) {\n        that.orderId = newVal;\n        that.getIndex();\n      }\n    }\n  },\n  created: function created() {// import('@/assets/js/media_750')\n  },\n  mounted: function mounted() {\n    this.orderId = this.$route.params.orderId;\n    this.productType = this.$route.query.productType;\n\n    if (this.productType == 3) {\n      this.types.splice(0, 2);\n      this.active = 2;\n      this.expFrom.type = 3;\n    }\n\n    this.getIndex();\n    this.getLogistics();\n  },\n  methods: {\n    // 显示送货人\n    showName: function showName() {\n      this.pickerVisibleName = true;\n    },\n    // 获取配送人\n    getDelivery: function getDelivery() {\n      var _this = this;\n\n      orderDeliveryAll().then(function (res) {\n        var tdata = [];\n        res.data.map(function (item) {\n          tdata.push({\n            label: item.nickname,\n            value: item.uid,\n            phone: item.phone\n          });\n        });\n        _this.deliveryList = [tdata];\n        _this.expFrom.sh_delivery_name = tdata[0].label;\n        _this.expFrom.sh_delivery_id = tdata[0].phone;\n        _this.expFrom.sh_delivery_uid = tdata[0].value;\n        if (_this.expFrom.express_record_type === 2) _this.getTemp();\n      });\n    },\n    // 选择送货人\n    confirmName: function confirmName(res) {\n      this.expFrom.sh_delivery_name = res[0].label;\n      this.expFrom.sh_delivery_id = res[0].phone;\n      this.expFrom.sh_delivery_uid = res[0].value;\n    },\n    // 获取订单打印默认配置\n    orderDeliveryInfo: function orderDeliveryInfo() {\n      var _this2 = this;\n\n      getSender().then(function (res) {\n        _this2.expFrom.to_name = res.data.to_name;\n        _this2.expFrom.to_tel = res.data.to_tel;\n        _this2.expFrom.to_addr = res.data.to_add;\n      });\n    },\n    cancel: function cancel() {// this.result = 'click cancel result: null'\n    },\n    // 选择发货类型\n    changeExpTpe: function changeExpTpe(item, index) {\n      this.expFrom.express_record_type = item.key;\n      this.activeExpTpe = index;\n\n      if (item.key === 2) {\n        this.orderDeliveryInfo();\n        this.getTemp();\n      } else {\n        this.expTemp = [];\n      }\n\n      if (index == 1) {\n        this.getLogistics(1);\n      } else {\n        this.getLogistics('');\n      }\n    },\n    // 快递模板\n    getTemp: function getTemp() {\n      var _this3 = this;\n\n      orderTemp({\n        com: this.expFrom.delivery_code\n      }).then(function (res) {\n        _this3.expTemp = res.data.data;\n        var tdata = [];\n\n        if (_this3.expTemp.length) {\n          _this3.expTemp.map(function (item) {\n            tdata.push({\n              label: item.title,\n              value: item.temp_id,\n              id: item.id,\n              pic: item.pic,\n              code: item.code\n            });\n          });\n\n          _this3.expTempData = [tdata];\n          _this3.expFrom.express_temp_id = tdata[0].value;\n          _this3.tempName = tdata[0].label;\n          _this3.tempImg = tdata[0].pic;\n        }\n      });\n    },\n    // 选择电子面单模板\n    confirmExpTemp: function confirmExpTemp(res) {\n      this.expFrom.express_temp_id = res[0].value;\n      this.tempName = res[0].label;\n      this.tempImg = res[0].pic;\n    },\n    // 选择快递公司\n    confirm: function confirm(res) {\n      this.expFrom.delivery_name = res[0].label;\n      this.expFrom.delivery_code = res[0].value;\n      if (this.expFrom.express_record_type === 2) this.getTemp();\n    },\n    show: function show() {\n      this.pickerVisible = true;\n    },\n    showExpTemp: function showExpTemp() {\n      this.pickerVisibleExpTemp = true;\n    },\n    // 发货方式\n    changeType: function changeType(item, index) {\n      this.active = index;\n      this.expFrom.type = item.type;\n      if (index === 1) this.getDelivery();\n    },\n    getIndex: function getIndex() {\n      var _this4 = this;\n\n      orderInfo(this.$route.params.id).then(function (res) {\n        _this4.delivery = res.data;\n      }).catch(function (error) {\n        _this4.$dialog.error(error.msg);\n      });\n    },\n    getLogistics: function getLogistics(status) {\n      var _this5 = this;\n\n      orderExport(status ? status : '').then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          var tdata;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  tdata = [];\n                  res.data.map(function (item) {\n                    tdata.push({\n                      label: item.value,\n                      value: item.code,\n                      id: item.id\n                    });\n                  });\n                  _this5.pickData = [tdata];\n                  _this5.expFrom.delivery_name = tdata[0].label;\n                  _this5.expFrom.delivery_code = tdata[0].value;\n                  if (_this5.expFrom.express_record_type === 2) _this5.getTemp();\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    saveInfo: function () {\n      var _saveInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var that, type, save;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                that = this, type = that.type, save = {}; // save.id = that.$route.params.id;\n                // save.type = that.expFrom.type;\n\n                _context2.t0 = type;\n                _context2.next = _context2.t0 === \"1\" ? 4 : _context2.t0 === \"2\" ? 12 : _context2.t0 === \"3\" ? 24 : 26;\n                break;\n\n              case 4:\n                if (!(this.expFrom.type === 1 && !that.expFrom.delivery_name)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", that.$dialog.error('请输入快递公司'));\n\n              case 6:\n                if (!(this.expFrom.type === 1 && this.expFrom.express_record_type === 1 && !that.expFrom.delivery_id)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", that.$dialog.error('请输入快递单号'));\n\n              case 8:\n                if (!(this.expFrom.type === 1 && !that.expFrom.express_temp_id && this.expFrom.express_record_type === 2)) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", that.$dialog.error('请选择电子面单'));\n\n              case 10:\n                that.setInfo(that.expFrom);\n                return _context2.abrupt(\"break\", 26);\n\n              case 12:\n                _context2.prev = 12;\n                _context2.next = 15;\n                return this.$validator({\n                  expressId: [required(required.message(\"发货人姓名\"))],\n                  expressCode: [required(required.message(\"发货人电话\"))]\n                }).validate({\n                  expressId: expressId,\n                  expressCode: expressCode\n                });\n\n              case 15:\n                _context2.next = 20;\n                break;\n\n              case 17:\n                _context2.prev = 17;\n                _context2.t1 = _context2[\"catch\"](12);\n                return _context2.abrupt(\"return\", validatorDefaultCatch(_context2.t1));\n\n              case 20:\n                save.expressId = expressId;\n                save.expressCode = expressCode;\n                that.setInfo(save);\n                return _context2.abrupt(\"break\", 26);\n\n              case 24:\n                that.setInfo(save);\n                return _context2.abrupt(\"break\", 26);\n\n              case 26:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[12, 17]]);\n      }));\n\n      function saveInfo() {\n        return _saveInfo.apply(this, arguments);\n      }\n\n      return saveInfo;\n    }(),\n    setInfo: function setInfo(item) {\n      var that = this;\n      orderDelivery(that.$route.params.id, item).then(function (res) {\n        that.$dialog.success('发送货成功');\n        that.$router.go(-1);\n      }, function (error) {\n        that.$dialog.error(error.msg);\n      });\n    }\n  }\n};",null]}