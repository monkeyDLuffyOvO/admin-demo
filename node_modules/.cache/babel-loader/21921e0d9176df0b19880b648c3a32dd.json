{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/setting/systemRole/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/setting/systemRole/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport { roleListApi, roleSetStatusApi, menusListApi, roleCreatApi, roleInfoApi } from '@/api/setting';\nexport default {\n  name: 'systemrRole',\n  data: function data() {\n    return {\n      spinShow: false,\n      modals: false,\n      total: 0,\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24\n      },\n      loading: false,\n      formValidate: {\n        status: '',\n        role_name: '',\n        page: 1,\n        limit: 20\n      },\n      columns1: [{\n        title: 'ID',\n        key: 'id',\n        width: 80\n      }, {\n        title: '身份昵称',\n        key: 'role_name',\n        minWidth: 120\n      }, {\n        title: '权限',\n        key: 'rules',\n        tooltip: true,\n        width: 1000\n      }, {\n        title: '状态',\n        slot: 'is_shows',\n        minWidth: 120\n      }, {\n        title: '操作',\n        slot: 'action',\n        fixed: 'right',\n        minWidth: 120\n      }],\n      tableList: [],\n      formInline: {\n        role_name: '',\n        status: 0,\n        checked_menus: [],\n        id: 0\n      },\n      menusList: [],\n      modelTit: '',\n      ruleValidate: {\n        role_name: [{\n          required: true,\n          message: '请输入身份昵称',\n          trigger: 'blur'\n        }],\n        status: [{\n          required: true,\n          type: 'number',\n          message: '请选择是否开启',\n          trigger: 'change'\n        }] // checked_menus: [\n        //     { required: true, validator: validateStatus, trigger: 'change' }\n        // ]\n\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState('admin/layout', ['isMobile']), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    },\n    labelPosition2: function labelPosition2() {\n      return this.isMobile ? 'top' : 'right';\n    }\n  }),\n  created: function created() {\n    this.getList();\n  },\n  methods: {\n    // 添加\n    add: function add(name) {\n      this.formInline.id = 0;\n      this.modelTit = name;\n      this.modals = true;\n      this.getmenusList();\n    },\n    // 删除\n    del: function del(row, tit, num) {\n      var _this = this;\n\n      var delfromData = {\n        title: tit,\n        num: num,\n        url: \"setting/role/\".concat(row.id),\n        method: 'DELETE',\n        ids: ''\n      };\n      this.$modalSure(delfromData).then(function (res) {\n        _this.$Message.success(res.msg);\n\n        _this.tableList.splice(num, 1);\n      }).catch(function (res) {\n        _this.$Message.error(res.msg);\n      });\n    },\n    // 修改是否显示\n    onchangeIsShow: function onchangeIsShow(row) {\n      var _this2 = this;\n\n      var data = {\n        id: row.id,\n        status: row.status\n      };\n      roleSetStatusApi(data).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this2.$Message.success(res.msg);\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this2.$Message.error(res.msg);\n      });\n    },\n    // 列表\n    getList: function getList() {\n      var _this3 = this;\n\n      this.loading = true;\n      this.formValidate.status = this.formValidate.status || '';\n      roleListApi(this.formValidate).then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  data = res.data;\n                  _this3.tableList = data.list;\n                  _this3.total = res.data.count;\n                  _this3.loading = false;\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this3.loading = false;\n\n        _this3.$Message.error(res.msg);\n      });\n    },\n    pageChange: function pageChange(index) {\n      this.formValidate.page = index;\n      this.getList();\n    },\n    // 表格搜索\n    userSearchs: function userSearchs() {\n      this.formValidate.page = 1;\n      this.getList();\n    },\n    // 编辑\n    edit: function edit(row, name) {\n      this.modelTit = name;\n      this.formInline.id = row.id;\n      this.modals = true;\n      this.rows = row;\n      this.getIofo(row);\n    },\n    //默认首页被选中并禁止更改\n    checkedFun: function checkedFun(data) {\n      var _this4 = this;\n\n      data.forEach(function (item) {\n        if (item.title == '运营') {\n          item.disabled = true;\n\n          if (item.children.length) {\n            item.children.forEach(function (j) {\n              if (j.title == '首页') {\n                _this4.formInline.checked_menus.push(j.id);\n\n                j.checked = true;\n                j.disabled = true;\n\n                if (j.children.length) {\n                  j.children.forEach(function (v) {\n                    v.checked = true;\n                    v.disabled = true;\n                  });\n                }\n              }\n            });\n          }\n        }\n\n        item.expand = false;\n      });\n    },\n    // 菜单列表\n    getmenusList: function getmenusList() {\n      var _this5 = this;\n\n      this.spinShow = true;\n      menusListApi().then(\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee3(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  data = res.data; // const mList = data.menus[0].children.splice(0,1);\n\n                  _this5.menusList = data.menus;\n\n                  _this5.checkedFun(res.data.menus); // this.menusList.map((item, index) => {\n                  //   if (item.title === '主页') {\n                  //     item.checked = true\n                  //     item.disableCheckbox = true\n                  //     if (item.children.length) {\n                  //       item.children.map((v) => {\n                  //         v.checked = true\n                  //         v.disableCheckbox = true\n                  //       })\n                  //     }\n                  //   }\n                  //   item.expand = false\n                  // })\n\n\n                  _this5.spinShow = false;\n\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this5.spinShow = false;\n\n        _this5.$Message.error(res.msg);\n      });\n    },\n    // 详情\n    getIofo: function getIofo(row) {\n      var _this6 = this;\n\n      this.spinShow = true;\n      roleInfoApi(row.id).then(\n      /*#__PURE__*/\n      function () {\n        var _ref4 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee4(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  data = res.data;\n                  _this6.formInline = data.role || _this6.formInline;\n                  _this6.formInline.checked_menus = _this6.formInline.rules;\n\n                  _this6.tidyRes(data.menus);\n\n                  _this6.spinShow = false;\n\n                case 5:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref4.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this6.spinShow = false;\n\n        _this6.$Message.error(res.msg);\n      });\n    },\n    tidyRes: function tidyRes(menus) {\n      var _this7 = this;\n\n      var data = [];\n      menus.map(function (menu) {\n        data.push(_this7.initMenu(menu));\n      }); // this.checkedFun(data);\n\n      this.$set(this, 'menusList', data); // this.menusList.map((item, index) => {\n      //     if (item.title === '主页') {\n      //         item.checked = true;\n      //         item.disableCheckbox = true;\n      //         if (item.children.length) {\n      //             item.children.map(v => {\n      //                 v.checked = true;\n      //                 v.disableCheckbox = true;\n      //             });\n      //         }\n      //     }\n      // });\n    },\n    initMenu: function initMenu(menu) {\n      var _this8 = this;\n\n      var data = {},\n          checkMenus = ',' + this.formInline.checked_menus + ',';\n      data.title = menu.title;\n      data.id = menu.id;\n\n      if (menu.children && menu.children.length > 0) {\n        data.children = [];\n        menu.children.map(function (child) {\n          data.children.push(_this8.initMenu(child));\n        });\n      } else {\n        data.checked = checkMenus.indexOf(String(',' + data.id + ',')) !== -1;\n        data.expand = !data.checked;\n      }\n\n      return data;\n    },\n    // 递归函数\n    // getNestedChildren(arr, parent) {\n    //   var out = []\n    //   for (var i in arr) {\n    //     if (arr[i].parent == parent) {\n    //       var children = getNestedChildren(arr, arr[i].id)\n    //       if (children.length) {\n    //         arr[i].children = children\n    //       }\n    //       out.push(arr[i])\n    //     }\n    //   }\n    //   return out\n    // },\n    // 提交\n    handleSubmit: function handleSubmit(name) {\n      var _this9 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          _this9.formInline.checked_menus = [];\n\n          _this9.$refs.tree.getCheckedAndIndeterminateNodes().map(function (node) {\n            _this9.formInline.checked_menus.push(node.id);\n          });\n\n          if (_this9.formInline.checked_menus.length === 0) return _this9.$Message.warning('请至少选择一个权限');\n          roleCreatApi(_this9.formInline).then(\n          /*#__PURE__*/\n          function () {\n            var _ref5 = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee5(res) {\n              return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _this9.$Message.success(res.msg);\n\n                      _this9.modals = false;\n\n                      _this9.getList();\n\n                      _this9.$refs[name].resetFields();\n\n                      _this9.formInline.checked_menus = [];\n\n                    case 5:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, _callee5);\n            }));\n\n            return function (_x5) {\n              return _ref5.apply(this, arguments);\n            };\n          }()).catch(function (res) {\n            _this9.$Message.error(res.msg);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    onCancel: function onCancel() {\n      this.$refs['formInline'].resetFields();\n      this.formInline.checked_menus = [];\n    }\n  }\n};",null]}