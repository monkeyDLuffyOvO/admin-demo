{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/product/productAttr/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/product/productAttr/index.vue","mtime":1662605836000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport addAttr from \"./addAttr\";\nimport { ruleListApi } from \"@/api/product\";\nexport default {\n  name: \"productAttr\",\n  components: {\n    addAttr: addAttr\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      loading: false,\n      artFrom: {\n        page: 1,\n        limit: 10,\n        rule_name: \"\"\n      },\n      columns4: [// {\n      //     type: 'selection',\n      //     minWidth: 60\n      // },\n      {\n        width: 60,\n        align: \"center\",\n        renderHeader: function renderHeader(h, params) {\n          return h(\"div\", {\n            class: {\n              \"select-panel\": true\n            },\n            on: {\n              mouseenter: function mouseenter(e) {\n                _this.display = \"block\";\n              },\n              mouseleave: function mouseleave(e) {\n                _this.display = \"none\";\n              }\n            }\n          }, [h(\"Checkbox\", {\n            props: {\n              value: _this.checkBox\n            },\n            on: {\n              \"on-change\": function onChange(e) {\n                _this.checkBox = e;\n\n                _this.$refs.selection.selectAll(_this.checkBox);\n\n                _this.isAll = e ? 0 : -1;\n              }\n            }\n          }), h(\"div\", {\n            style: {\n              position: \"absolute\",\n              top: 0,\n              zIndex: 2,\n              display: _this.display,\n              width: \"80px\",\n              padding: \"5px\",\n              borderRadius: \"4px\",\n              backgroundColor: \"#fff\",\n              boxShadow: \"0 0px 5px rgba(0, 0, 0, 0.2)\",\n              transform: \"translateX(25%)\"\n            }\n          }, [h(\"div\", {\n            class: {\n              \"select-item\": true,\n              on: _this.isAll === 0\n            },\n            style: {\n              padding: \"1px 6px\",\n              cursor: \"pointer\",\n              height: \"50%\"\n            },\n            on: {\n              click: function click(e) {\n                if (_this.isAll === 0) {\n                  _this.isAll = -1;\n                  _this.checkBox = false;\n\n                  _this.$refs.selection.selectAll(_this.checkBox);\n                } else {\n                  _this.isAll = 0;\n\n                  if (!_this.selectionList.length) {\n                    _this.checkBox = true;\n\n                    _this.$refs.selection.selectAll(_this.checkBox);\n                  }\n                }\n\n                _this.display = \"none\";\n              }\n            }\n          } // \"选择当页\"\n          ), h(\"div\", {\n            class: {\n              \"select-item\": true,\n              on: _this.isAll === 1\n            },\n            style: {\n              padding: \"4px\",\n              cursor: \"pointer\"\n            },\n            on: {\n              click: function click(e) {\n                if (_this.isAll === 1) {\n                  _this.isAll = -1;\n                  _this.checkBox = false;\n                } else {\n                  _this.isAll = 1;\n                  _this.checkBox = true;\n                }\n\n                _this.$refs.selection.selectAll(_this.checkBox);\n\n                _this.display = \"none\";\n              }\n            }\n          }, \"选择全部\")])]);\n        },\n        render: function render(h, params) {\n          return h(\"Checkbox\", {\n            props: {\n              value: params.row.checkBox\n            },\n            on: {\n              \"on-change\": function onChange(e) {\n                if (e) {\n                  _this.selectionList.push(params.row);\n                } else {\n                  _this.checkBox = false;\n\n                  _this.selectionList.forEach(function (item, index) {\n                    if (item.id === params.row.id) {\n                      _this.selectionList.splice(index, 1);\n                    }\n                  });\n                }\n\n                _this.isAll = _this.selectionList.length ? 0 : -1; // this.responseData为查询出的结果数据\n                // params.row.checkBox = e;\n\n                params.row.checkBox = e;\n                _this.tableList[params.index].checkBox = e;\n              }\n            },\n            ref: \"checkbox\",\n            refInFor: true\n          });\n        }\n      }, {\n        title: \"ID\",\n        key: \"id\",\n        width: 80\n      }, {\n        title: \"分类\",\n        key: \"rule_name\",\n        minWidth: 150\n      }, {\n        title: \"规格名\",\n        key: \"attr_name\",\n        minWidth: 250\n      }, {\n        title: \"规格值\",\n        slot: \"attr_value\",\n        minWidth: 300\n      }, {\n        title: \"操作\",\n        slot: \"action\",\n        fixed: \"right\",\n        minWidth: 120\n      }],\n      tableList: [],\n      total: 0,\n      ids: \"\",\n      selectionList: [],\n      selectionCopy: [],\n      display: \"none\",\n      isAll: 0,\n      checkBox: false\n    };\n  },\n  watch: {\n    tableList: {\n      deep: true,\n      handler: function handler(value) {\n        var _this2 = this;\n\n        value.forEach(function (item) {\n          _this2.selectionList.forEach(function (itm) {\n            if (itm.id === item.id) {\n              item.checkBox = true;\n            }\n          });\n        });\n        var arr = this.tableList.filter(function (item) {\n          return item.checkBox;\n        });\n\n        if (this.tableList.length) {\n          this.checkBox = this.tableList.length === arr.length;\n        } else {\n          this.checkBox = false;\n        }\n      }\n    },\n    selectionList: {\n      deep: true,\n      handler: function handler(value) {\n        var arr = value.map(function (item) {\n          return item.id;\n        });\n        this.ids = arr.join();\n      }\n    }\n  },\n  computed: _objectSpread({}, mapState(\"admin/layout\", [\"isMobile\"]), {}, mapState(\"admin/order\", [\"orderChartType\"]), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    }\n  }),\n  created: function created() {\n    this.getDataList();\n  },\n  methods: {\n    selectAll: function selectAll(row) {\n      var _this3 = this;\n\n      if (row.length) {\n        this.selectionList = row;\n        this.selectionCopy = row;\n      }\n\n      this.selectionCopy.forEach(function (item, index) {\n        item.checkBox = _this3.checkBox;\n\n        _this3.$set(_this3.tableList, index, item);\n      });\n    },\n    // 全选\n    onSelectTab: function onSelectTab(selection) {\n      this.selectionList = selection;\n      var data = [];\n      this.selectionList.map(function (item) {\n        data.push(item.id);\n      });\n      this.ids = data.join(\",\");\n    },\n    // 删除\n    del: function del(row, tit) {\n      var _this4 = this;\n\n      var data = {};\n\n      if (tit === \"批量删除规格\") {\n        if (this.selectionList.length === 0) return this.$Message.warning(\"请选择要删除的规格！\");\n        data = {\n          all: this.isAll\n        };\n\n        if (this.isAll === 0) {\n          data.ids = this.ids;\n        } else if (this.isAll === 1) {\n          // data.where = this.artFrom;\n          data.where = {\n            rule_name: this.artFrom.rule_name\n          };\n        }\n      } else {\n        data = {\n          ids: row.id.toString()\n        };\n      }\n\n      var delfromData = {\n        title: tit,\n        num: 0,\n        url: \"product/product/rule/delete\",\n        method: \"DELETE\",\n        ids: data\n      };\n      this.$modalSure(delfromData).then(function (res) {\n        var ids = data.ids.split(',');\n\n        if (ids.length === _this4.selectionList.length) {\n          _this4.selectionList = [];\n        }\n\n        _this4.$Message.success(res.msg);\n\n        _this4.artFrom.page = 1;\n\n        _this4.getDataList();\n      }).catch(function (res) {\n        _this4.$Message.error(res.msg);\n      });\n    },\n    addAttr: function addAttr() {\n      this.$refs.addattr.ids = 0;\n      this.$refs.addattr.modal = true;\n    },\n    // 编辑\n    edit: function edit(row) {\n      // this.$refs.addattr.ids = row.id;\n      this.$refs.addattr.modal = true;\n      this.$refs.addattr.getIofo(row);\n    },\n    // 列表；\n    getDataList: function getDataList() {\n      var _this5 = this;\n\n      this.loading = true;\n      ruleListApi(this.artFrom).then(function (res) {\n        var data = res.data;\n        data.list.forEach(function (item) {\n          item.checkBox = false;\n        });\n        _this5.tableList = data.list;\n\n        if (_this5.isAll == 1) {\n          _this5.tableList = data.list.map(function (item) {\n            item.checkBox = true;\n            return item;\n          });\n        }\n\n        _this5.total = res.data.count; // this.isAll = -1;\n\n        _this5.loading = false;\n      }).catch(function (res) {\n        _this5.loading = false;\n\n        _this5.$Message.error(res.msg);\n      });\n    },\n    pageChange: function pageChange(status) {\n      this.artFrom.page = status;\n      this.getDataList();\n    },\n    // 表格搜索\n    userSearchs: function userSearchs() {\n      this.artFrom.page = 1;\n      this.selectionList = [];\n      this.getDataList();\n    }\n  }\n};",null]}