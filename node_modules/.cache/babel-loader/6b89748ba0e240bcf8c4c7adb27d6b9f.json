{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/marketing/live/live_goods.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/marketing/live/live_goods.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport { liveGoods, liveSyncGoods, liveGoodsDetail, liveGoodsShow } from \"@/api/live\";\nimport goodsFrom from \"./components/goods_detail\";\nexport default {\n  name: \"live\",\n  components: {\n    goodsFrom: goodsFrom\n  },\n  data: function data() {\n    return {\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24\n      },\n      formValidate: {\n        status: \"\",\n        kerword: \"\",\n        page: 1,\n        limit: 20\n      },\n      treeData: {\n        withdrawal: [{\n          title: \"全部\",\n          value: \"\"\n        }, {\n          title: \"待审核\",\n          value: 0\n        }, {\n          title: \"已通过\",\n          value: 1\n        }, {\n          title: \"未通过\",\n          value: -1\n        }]\n      },\n      columns1: [{\n        key: \"product_id\",\n        title: \"商品ID\",\n        width: 80\n      }, {\n        slot: \"name\",\n        minWidth: 240,\n        title: \"商品名称\"\n      }, {\n        key: \"price\",\n        minWidth: 90,\n        title: \"直播价\"\n      }, {\n        slot: \"cost_price\",\n        minWidth: 90,\n        title: \"原价\"\n      }, {\n        slot: \"stock\",\n        minWidth: 90,\n        title: \"库存\"\n      }, {\n        slot: \"status\",\n        minWidth: 90,\n        title: \"审核状态\"\n      }, {\n        slot: \"is_mer_show\",\n        title: \"是否显示\",\n        minWidth: 90\n      }, // {\"key\": \"sort\", \"title\": \"排序\", \"minWidth\": 35},\n      {\n        slot: \"action\",\n        title: \"操作\",\n        minWidth: 120\n      }],\n      tabList: [],\n      loading: false,\n      modals: false,\n      total: 0\n    };\n  },\n  computed: _objectSpread({}, mapState(\"admin/layout\", [\"isMobile\"]), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    }\n  }),\n  mounted: function mounted() {\n    this.getList();\n  },\n  methods: {\n    // 分页\n    pageChange: function pageChange(index) {\n      this.formValidate.page = index;\n      this.getList();\n    },\n    // 直播间显示隐藏\n    onchangeIsShow: function onchangeIsShow(_ref) {\n      var _this = this;\n\n      var id = _ref.id,\n          is_show = _ref.is_show;\n      liveGoodsShow(id, is_show).then(function (res) {\n        _this.$Message.success(res.msg);\n      }).catch(function (error) {\n        _this.$Message.error(error.msg);\n      });\n    },\n    // 列表数据\n    getList: function getList() {\n      var _this2 = this;\n\n      this.loading = true;\n      liveGoods(this.formValidate).then(function (res) {\n        _this2.total = res.data.count;\n        _this2.tabList = res.data.list;\n        _this2.loading = false;\n      }).catch(function (error) {\n        _this2.$Message.error(error.msg);\n\n        _this2.loading = false;\n      });\n    },\n    // 选择\n    selChange: function selChange() {\n      this.formValidate.page = 1;\n      this.getList();\n    },\n    // 添加商品\n    menusAdd: function menusAdd() {\n      this.$router.push({\n        path: \"/admin/marketing/live/add_live_goods\"\n      });\n    },\n    // 同步商品\n    syncGoods: function syncGoods() {\n      var _this3 = this;\n\n      liveSyncGoods().then(function (res) {\n        _this3.$Message.success(res.msg);\n\n        _this3.getList();\n      }).catch(function (error) {\n        _this3.$Message.error(res.msg);\n      });\n    },\n    edit: function edit(row) {\n      this.modals = true;\n      this.$refs.goodsDetail.getData(row.id);\n    },\n    // 删除\n    del: function del(row, tit, num) {\n      var _this4 = this;\n\n      var delfromData = {\n        title: tit,\n        num: num,\n        url: \"live/goods/del/\".concat(row.id),\n        method: \"DELETE\",\n        ids: \"\"\n      };\n      this.$modalSure(delfromData).then(function (res) {\n        _this4.$Message.success(res.msg);\n\n        _this4.tabList.splice(num, 1);\n\n        _this4.getList();\n      }).catch(function (res) {\n        _this4.$Message.error(res.msg);\n      });\n    }\n  }\n};",null]}