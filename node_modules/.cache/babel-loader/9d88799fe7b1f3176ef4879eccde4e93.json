{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/kefu/mobile/chat_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/kefu/mobile/chat_list.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport util from '@/libs/util';\nimport { Socket } from '@/libs/socket';\nimport { record } from '@/api/kefu.js';\nimport { serviceInfo } from '@/api/kefu_mobile';\nimport { HappyScroll } from 'vue-happy-scroll';\nimport { mapState, mapActions } from 'vuex';\nimport empty from '../components/empty';\nimport cookies from '../../../libs/util.cookies';\n\nvar mp3 = require('@/assets/video/notice.wav');\n\nvar mp3 = new Audio(mp3);\nexport default {\n  name: 'chat_list.vue',\n  components: {\n    HappyScroll: HappyScroll,\n    empty: empty\n  },\n  data: function data() {\n    return {\n      ops: {\n        vuescroll: {\n          mode: 'native',\n          enable: false,\n          tips: {\n            deactive: 'Push to Load',\n            active: 'Release to Load',\n            start: 'Loading...',\n            beforeDeactive: 'Load Successfully!'\n          },\n          auto: false,\n          autoLoadDistance: 0,\n          pullRefresh: {\n            enable: false\n          },\n          pushLoad: {\n            enable: true,\n            auto: true,\n            autoLoadDistance: 10\n          }\n        },\n        bar: {\n          background: '#393232',\n          opacity: '.5',\n          size: '5px'\n        }\n      },\n      list: [],\n      page: 1,\n      limit: 10,\n      isScroll: true,\n      searchTxt: '',\n      isOpen: true,\n      kefuInfo: {},\n      isOnLine: false,\n      tabCur: 0,\n      tabList: [{\n        key: 0,\n        title: '用户列表'\n      }, {\n        key: 1,\n        title: '游客列表'\n      }],\n      wsLogin: JSON.parse(sessionStorage.getItem('wsLogin')),\n      pageWs: ''\n    };\n  },\n  filters: {\n    toDay: function toDay(value) {\n      if (!value) return '';\n      var date = new Date(); // 时间戳为10位需*1000，时间戳为13位的话不需乘1000\n\n      var Y = date.getFullYear() + '-';\n      var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n      var D = (date.getDate() < 10 ? '0' + date.getDate() : date.getDate()) + ' ';\n      var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n      var m = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n      var s = date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds();\n      value = M + D + h + m;\n      return value;\n    }\n  },\n  created: function created() {\n    Promise.all([this.getKefuInfo(), this.getList()]);\n\n    if (typeof this.bus.pageWs == 'undefined') {\n      this.bus.pageWs = Socket(true);\n      this.wsKefuLogin();\n    } else {\n      this.wsStart();\n    }\n  },\n  mounted: function mounted() {\n    var that = this; // 监听页面刷新\n\n    window.addEventListener('beforeunload', function (e) {\n      sessionStorage.setItem('wsLogin', false);\n    }); // 获取是否登录的key\n\n    this.wsLogin = JSON.parse(sessionStorage.getItem('wsLogin')) || false;\n  },\n  methods: _objectSpread({}, mapActions('admin/account', ['logout', 'logoutKefu']), {\n    wsKefuLogin: function wsKefuLogin() {\n      var _this = this;\n\n      var that = this;\n      var token = util.cookies.kefuGet('token');\n      this.bus.pageWs.then(function (ws) {\n        if (!that.wsLogin && token) {\n          ws.send({\n            type: 'kefu_login',\n            data: token\n          });\n        } // 消息接收\n\n\n        ws.$on('success', function (data) {\n          sessionStorage.setItem('wsLogin', true);\n\n          _this.wsStart();\n        });\n        ws.$on('timeout', function (data) {\n          setTimeout(function () {\n            _this.wsRestart();\n          }, 2000);\n        });\n      }).catch(function (error) {\n        setTimeout(function () {\n          _this.wsRestart();\n        }, 2000);\n      });\n    },\n    wsStart: function wsStart() {\n      var _this2 = this;\n\n      var that = this;\n      var token = util.cookies.kefuGet('token');\n      this.bus.pageWs.then(function (ws) {\n        // 用户未读消息条数更改\n        ws.$on('transfer', function (data) {\n          if (data.recored.id) {\n            var status = false;\n\n            for (var i = 0; i < _this2.list.length; i++) {\n              if (data.recored.id == _this2.list[i].id) {\n                status = true;\n\n                _this2.$set(_this2.list, i, data.recored);\n              }\n            }\n\n            if (!status) {\n              _this2.list.unshift(data.recored);\n            }\n          }\n        });\n        ws.$on('mssage_num', function (data) {\n          if (data.num > 0) {\n            mp3.play();\n          }\n\n          if (data.recored.id) {\n            var status = false;\n            that.list.forEach(function (el, index, arr) {\n              if (data.recored.id == el.id) {\n                status = true;\n\n                if (data.recored.is_tourist == that.tabCur) {\n                  var oldVal = data.recored;\n                  arr.splice(index, 1);\n                  arr.unshift(oldVal);\n                }\n              }\n            });\n\n            if (!status) {\n              if (data.recored.is_tourist == _this2.tabCur) _this2.userList.unshift(data.recored);\n            }\n\n            if (data.recored.is_tourist != _this2.tabCur && data.recored.id) {\n              _this2.$Notice.info({\n                title: _this2.tabCur ? '用户发来消息啦！' : '游客发来消息啦！'\n              });\n            }\n          }\n        });\n        ws.$on('timeout', function (data) {\n          setTimeout(function () {\n            _this2.wsRestart();\n          }, 2000);\n        });\n      }).catch(function (error) {\n        setTimeout(function (res) {\n          _this2.wsRestart();\n        }, 2000);\n      });\n    },\n    wsRestart: function wsRestart() {\n      this.bus.pageWs = Socket(true);\n      this.wsKefuLogin();\n    },\n    // 列表切换\n    changeClass: function changeClass(item) {\n      if (this.tabCur == item.key) return;\n      this.tabCur = item.key;\n      this.page = 1;\n      this.list = [];\n      this.isScroll = true;\n      this.getList();\n    },\n    // 客服上下线\n    changOnline: function changOnline(key) {\n      var _this3 = this;\n\n      this.kefuInfo.online = key;\n      this.isOnLine = false;\n      this.bus.pageWs.then(function (ws) {\n        var that = _this3;\n        ws.send({\n          type: 'online',\n          data: {\n            online: key\n          }\n        });\n      });\n    },\n    // 客服详细信息\n    getKefuInfo: function getKefuInfo() {\n      var _this4 = this;\n\n      serviceInfo().then(function (res) {\n        _this4.kefuInfo = res.data;\n        window.document.title = \"\".concat(res.data.site_name, \" - \\u6D88\\u606F\\u5217\\u8868\");\n      });\n    },\n    getList: function getList() {\n      var _this5 = this;\n\n      if (!this.isScroll) return;\n      record({\n        nickname: this.searchTxt,\n        page: this.page,\n        limit: this.limit,\n        is_tourist: this.tabCur\n      }).then(function (res) {\n        _this5.isScroll = res.data.length >= _this5.limit;\n        _this5.list = _this5.list.concat(res.data);\n        _this5.page++;\n\n        if (res.data.length) {\n          setTimeout(function () {\n            _this5.$refs.vs.refresh();\n          }, 100);\n        }\n      });\n    },\n    // 客服退出\n    outLogin: function outLogin() {\n      var self = this;\n      this.$Modal.confirm({\n        title: '退出登录确认',\n        content: '您确定退出登录当前账户吗？打开的标签页和个人设置将会保存。',\n        onOk: function onOk() {\n          self.logoutKefu({\n            confirm: false,\n            vm: self\n          });\n        },\n        onCancel: function onCancel() {}\n      });\n    },\n    // 搜索\n    bindSearch: function bindSearch(e) {\n      this.page = 1;\n      this.list = [];\n      this.isScroll = true;\n      this.getList();\n    },\n    // 进入对话\n    goPage: function goPage(item) {\n      this.$router.push({\n        path: 'mobile_chat',\n        query: {\n          toUid: item.to_uid,\n          nickname: item.nickname,\n          is_tourist: this.tabCur\n        }\n      });\n    },\n    handleBeforeDeactivate: function handleBeforeDeactivate(vm, refreshDom, done) {\n      this.getList();\n      done();\n    }\n  })\n};",null]}