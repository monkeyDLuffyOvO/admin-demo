{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/app/wechat/newsCategory/save.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/app/wechat/newsCategory/save.vue","mtime":1655777970000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapActions } from 'vuex';\nimport WangEditor from \"@/components/wangEditor/index.vue\";\nimport uploadPictures from '@/components/uploadPictures';\nimport { wechatNewsAddApi, wechatNewsInfotApi } from '@/api/app';\nexport default {\n  name: 'newsCategorySave',\n  components: {\n    uploadPictures: uploadPictures,\n    WangEditor: WangEditor\n  },\n  watch: {\n    $route: function $route(to, from) {\n      if (this.$route.params.id !== '0') {\n        this.info();\n      } else {\n        this.list = [{\n          title: '',\n          author: '',\n          synopsis: '',\n          image_input: '',\n          content: '',\n          id: 0\n        }];\n        this.saveForm = this.list[this.current];\n      }\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    var validateUpload = function validateUpload(rule, value, callback) {\n      if (_this.saveForm.image_input) {\n        callback();\n      } else {\n        callback(new Error('请上传图文封面'));\n      }\n    };\n\n    return {\n      val: '',\n      myConfig: {\n        autoHeightEnabled: false,\n        // 编辑器不自动被内容撑高\n        initialFrameHeight: 500,\n        // 初始容器高度\n        initialFrameWidth: '100%',\n        // 初始容器宽度\n        UEDITOR_HOME_URL: '/admin/UEditor/',\n        serverUrl: ''\n      },\n      ruleValidate: {\n        title: [{\n          required: true,\n          message: '请输入标题',\n          trigger: 'blur'\n        }],\n        author: [{\n          required: true,\n          message: '请输入作者',\n          trigger: 'blur'\n        }],\n        image_input: [{\n          required: true,\n          validator: validateUpload,\n          trigger: 'change'\n        }],\n        content: [{\n          required: true,\n          message: '请输入正文',\n          trigger: 'change'\n        }],\n        synopsis: [{\n          required: true,\n          message: '请输入文章摘要',\n          trigger: 'blur'\n        }]\n      },\n      isChoice: '单选',\n      dragging: null,\n      isDel: false,\n      msg: '',\n      count: [],\n      baseImg: require('../../../../assets/images/bjt.png'),\n      saveForm: {\n        title: '',\n        author: '',\n        synopsis: '',\n        image_input: '',\n        content: '',\n        id: 0\n      },\n      current: 0,\n      list: [{\n        title: '',\n        author: '',\n        synopsis: '',\n        image_input: '',\n        content: '',\n        id: 0\n      }],\n      uploadList: [],\n      modalPic: false,\n      gridPic: {\n        xl: 6,\n        lg: 8,\n        md: 12,\n        sm: 12,\n        xs: 12\n      },\n      gridBtn: {\n        xl: 4,\n        lg: 8,\n        md: 8,\n        sm: 8,\n        xs: 8\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState('admin/layout', ['isMobile']), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 120;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    }\n  }),\n  mounted: function mounted() {\n    if (this.$route.params.id !== '0') {\n      this.info();\n    } else {\n      this.saveForm = this.list[this.current];\n    }\n  },\n  methods: _objectSpread({}, mapActions('admin/page', ['close']), {\n    getEditorContent: function getEditorContent(data) {\n      this.saveForm.content = data;\n    },\n    // 添加自定义弹窗\n    addCustomDialog: function addCustomDialog(editorId) {\n      window.UE.registerUI('test-dialog', function (editor, uiName) {\n        var dialog = new window.UE.ui.Dialog({\n          iframeUrl: '/admin/widget.images/index.html?fodder=dialog',\n          editor: editor,\n          name: uiName,\n          title: '上传图片',\n          cssRules: 'width:1200px;height:500px;padding:20px;'\n        });\n        this.dialog = dialog; // 参考上面的自定义按钮\n\n        var btn = new window.UE.ui.Button({\n          name: 'dialog-button',\n          title: '上传图片',\n          cssRules: \"background-image: url(../../../assets/images/icons.png);background-position: -726px -77px;\",\n          onclick: function onclick() {\n            // 渲染dialog\n            dialog.render();\n            dialog.open();\n          }\n        });\n        return btn;\n      }, 37);\n    },\n    // 点击图文封面\n    modalPicTap: function modalPicTap() {\n      this.modalPic = true;\n    },\n    // 获取图片信息\n    getPic: function getPic(pc) {\n      this.saveForm.image_input = pc.att_dir;\n      this.modalPic = false;\n    },\n    // 添加图文按钮\n    handleAdd: function handleAdd() {\n      if (!this.check()) return false;\n      var obj = {\n        'title': '',\n        'author': '',\n        'synopsis': '',\n        'image_input': '',\n        'content': '',\n        'id': 0\n      };\n      this.list.push(obj);\n    },\n    // 点击模块\n    onSubSave: function onSubSave(i) {\n      var _this2 = this;\n\n      this.current = i;\n      this.list.map(function (item, index) {\n        /* eslint-disable */\n        if (index === _this2.current) return _this2.saveForm = _this2.list[_this2.current];\n      });\n    },\n    // 删除\n    del: function del(i) {\n      if (i === 0) {\n        this.$Message.warning('不能再删除了');\n      } else {\n        this.list.splice(i, 1);\n        this.saveForm = {};\n      }\n    },\n    // 详情\n    info: function info() {\n      var _this3 = this;\n\n      wechatNewsInfotApi(this.$route.params.id).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          var info;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  info = res.data.info;\n                  _this3.list = info.new;\n                  _this3.val = _this3.list[_this3.current].content;\n                  _this3.saveForm = _this3.list[_this3.current];\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this3.$Message.error(res.msg);\n      });\n    },\n    // 提交数据\n    subFrom: function subFrom(name) {\n      var _this4 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          var data = {\n            id: _this4.$route.params.id || 0,\n            list: _this4.list\n          };\n          wechatNewsAddApi(data).then(\n          /*#__PURE__*/\n          function () {\n            var _ref2 = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee2(res) {\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _this4.$Message.success(res.msg);\n\n                      setTimeout(function () {\n                        _this4.$router.push({\n                          path: '/admin/app/wechat/news_category/index'\n                        });\n                      }, 500);\n\n                    case 2:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            }));\n\n            return function (_x2) {\n              return _ref2.apply(this, arguments);\n            };\n          }()).catch(function (res) {\n            _this4.$Message.error(res.msg);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    check: function check() {\n      for (var index in this.list) {\n        if (!this.list[index].title) {\n          this.$Message.warning('请输入文章的标题');\n          return false;\n        } else if (!this.list[index].author) {\n          this.$Message.warning('请输入文章的作者');\n          return false;\n        } else if (!this.list[index].synopsis) {\n          this.$Message.warning('请输入文章的摘要');\n          return false;\n        } else if (!this.list[index].image_input) {\n          this.$Message.warning('请输入文章的图文封面');\n          return false;\n        } else if (!this.list[index].content) {\n          this.$Message.warning('请输入文章的内容');\n          return false;\n        } else {\n          return true;\n        }\n      } // if(!this.saveForm.title){\n      //     this.$Message.warning('请输入文章的标题');\n      //     return false;\n      // }\n      // else if(!this.saveForm.author){\n      //     this.$Message.warning('请输入文章的作者');\n      //     return false;\n      // }\n      // else if(!this.saveForm.synopsis){\n      //     this.$Message.warning('请输入文章的摘要');\n      //     return false;\n      // }\n      // else if(!this.saveForm.image_input){\n      //     this.$Message.warning('请输入文章的图文封面');\n      //     return false;\n      // }\n      // else if(!this.saveForm.content){\n      //     this.$Message.warning('请输入文章的内容');\n      //     return false;\n      // }else{\n      //     return true\n      // }\n\n    }\n  })\n};",null]}