{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/setting/user/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/setting/user/index.vue","mtime":1652232731000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vcode from \"vue-puzzle-vcode\";\nimport { updtaeAdmin, setInfo } from \"@/api/user\";\nimport uploadPictures from \"@/components/uploadPictures\";\nimport { mapState } from \"vuex\";\nimport Setting from \"@/setting\";\nimport axios from \"axios\";\nimport util from \"@/libs/util\";\nexport default {\n  name: \"setting_user\",\n  components: {\n    uploadPictures: uploadPictures,\n    Vcode: Vcode\n  },\n  computed: _objectSpread({}, mapState(\"admin/layout\", [\"isMobile\"]), {}, mapState(\"admin/userLevel\", [\"categoryId\"]), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 75;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? \"top\" : \"left\";\n    }\n  }),\n  data: function data() {\n    return {\n      modalPic: false,\n      isChoice: \"单选\",\n      account: \"\",\n      formValidate: {\n        head_pic: \"\",\n        real_name: \"\",\n        pwd: \"\",\n        new_pwd: \"\",\n        conf_pwd: \"\",\n        phone: \"\"\n      },\n      formPhone: {\n        phone: \"\",\n        code: \"\"\n      },\n      rulesPhone: {\n        phone: [{\n          required: true,\n          message: \"手机号不能为空\",\n          trigger: \"blur\"\n        }],\n        code: [{\n          required: true,\n          message: \"验证码不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      formPwd: {\n        pwd: \"\",\n        new_pwd: \"\",\n        conf_pwd: \"\"\n      },\n      rulesPwd: {\n        pwd: [{\n          required: true,\n          message: \"原密码不能为空\",\n          trigger: \"blur\"\n        }],\n        new_pwd: [{\n          required: true,\n          message: \"新密码不能为空\",\n          trigger: \"blur\"\n        }],\n        conf_pwd: [{\n          required: true,\n          message: \"请确认密码\",\n          trigger: \"blur\"\n        }]\n      },\n      formName: {\n        real_name: \"\"\n      },\n      rulesName: {\n        real_name: [{\n          required: true,\n          message: \"姓名不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      gridPic: {\n        xl: 6,\n        lg: 8,\n        md: 12,\n        sm: 12,\n        xs: 12\n      },\n      gridBtn: {\n        xl: 4,\n        lg: 8,\n        md: 8,\n        sm: 8,\n        xs: 8\n      },\n      updatePhone: false,\n      updatePassword: false,\n      updateName: false,\n      cutNUm: \"获取验证码\",\n      canClick: true,\n      isShow: false // 验证码模态框是否出现\n\n    };\n  },\n  mounted: function mounted() {\n    // const db = await this.$store.dispatch('admin/db/database', {\n    //     user: true\n    // });\n    // this.account = db.get('user_info').value().account;\n    this.getInfo();\n  },\n  methods: {\n    // 选择图片\n    modalPicTap: function modalPicTap() {\n      this.modalPic = true;\n    },\n    // 选中图片\n    getPic: function getPic(pc) {\n      var _this = this;\n\n      this.formValidate.head_pic = pc.att_dir;\n      updtaeAdmin({\n        head_pic: pc.att_dir\n      }).then(function (res) {\n        _this.$Message.success(res.msg);\n\n        _this.modalPic = false;\n      }).catch(function (res) {\n        _this.$Message.error(res.msg);\n      });\n    },\n    getInfo: function getInfo() {\n      var _this2 = this;\n\n      setInfo().then(function (res) {\n        var data = res.data;\n        _this2.account = data.account;\n        _this2.formValidate.head_pic = data.head_pic;\n        _this2.formValidate.real_name = data.real_name;\n        _this2.formValidate.phone = data.phone;\n      }).catch(function (err) {\n        _this2.$Message.error(err.msg);\n      });\n    },\n    handleSubmit: function handleSubmit(name) {\n      var _this3 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          updtaeAdmin(_this3.formValidate).then(function (res) {\n            _this3.$Message.success(res.msg);\n          }).catch(function (res) {\n            _this3.$Message.error(res.msg);\n          });\n        } else {\n          if (_this3.formValidate.new_pwd !== _this3.formValidate.conf_pwd) {\n            _this3.$Message.error(\"您输入的新密码与旧密码不一致\");\n          }\n        }\n      });\n    },\n    showModal: function showModal(name) {\n      this[name] = true;\n    },\n    phoneUpdate: function phoneUpdate() {\n      var _this4 = this;\n\n      this.$refs.formPhone.validate(function (valid) {\n        if (valid) {\n          updtaeAdmin(_this4.formPhone).then(function (res) {\n            _this4.$Message.success(res.msg);\n\n            _this4.$refs.formPhone.resetFields();\n\n            _this4.updatePhone = false;\n\n            _this4.getInfo();\n          }).catch(function (res) {\n            _this4.$Message.error(res.msg);\n          });\n        }\n      });\n    },\n    pwdUpdate: function pwdUpdate() {\n      var _this5 = this;\n\n      if (this.formPwd.new_pwd !== this.formPwd.conf_pwd) return this.$Message.warning(\"新密码与确认密码不一致\");\n      this.$refs.formPwd.validate(function (valid) {\n        if (valid) {\n          updtaeAdmin(_this5.formPwd).then(function (res) {\n            _this5.$Message.success(res.msg);\n\n            _this5.$refs.formPwd.resetFields();\n\n            _this5.updatePassword = false;\n          }).catch(function (res) {\n            _this5.$Message.error(res.msg);\n          });\n        }\n      });\n    },\n    nameUpdate: function nameUpdate() {\n      var _this6 = this;\n\n      this.$refs.formName.validate(function (valid) {\n        if (valid) {\n          updtaeAdmin(_this6.formName).then(function (res) {\n            _this6.$Message.success(res.msg);\n\n            _this6.$refs.formName.resetFields();\n\n            _this6.updateName = false;\n\n            _this6.getInfo();\n          }).catch(function (res) {\n            _this6.$Message.error(res.msg);\n          });\n        }\n      });\n    },\n    handleCancle: function handleCancle(name) {\n      this[name] = false;\n    },\n    // 短信验证码\n    cutDown: function cutDown() {\n      if (this.formPhone.phone) {\n        if (!this.formPhone.phone) return this.$Message.warning(\"请输入手机号码\");\n        if (!/^1(3|4|5|7|8|9|6)\\d{9}$/i.test(this.formPhone.phone)) return this.$Message.warning(\"请输入正确的手机号码\");\n        this.isShow = true;\n      } else {\n        this.$Message.warning(\"请填写手机号!\");\n      }\n    },\n    onSuccess: function onSuccess() {\n      var _this7 = this;\n\n      this.isShow = false; // 通过验证后，需要手动隐藏模态框\n\n      if (!this.canClick) return;\n      this.canClick = false;\n      this.cutNUm = 60;\n      var verification = Setting.apiBaseURL.replace(/adminapi/, \"api\");\n      axios.get(verification + \"/verify_code\").then(function (res) {\n        var codeData = {\n          type: \"login\",\n          phone: _this7.formPhone.phone,\n          key: res.data.data.key,\n          code: \"\"\n        };\n        fetch(verification + \"/register/verify\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(codeData)\n        }).then(function (response) {\n          var time = setInterval(function () {\n            _this7.cutNUm--;\n\n            if (_this7.cutNUm === 0) {\n              _this7.cutNUm = \"获取验证码\";\n              _this7.canClick = true;\n              clearInterval(time);\n            }\n          }, 1000);\n        }).catch(function (err) {\n          _this7.$Message.error(err.msg);\n        });\n      });\n    },\n    // 用户点击遮罩层，应该关闭模态框\n    onClose: function onClose() {\n      this.isShow = false;\n    }\n  }\n};",null]}