{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/components/verifition/Verify/VerifySlide.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/components/verifition/Verify/VerifySlide.vue","mtime":1663402499000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/**\n     * VerifySlide\n     * @description 滑块\n     * */\nimport { aesEncrypt } from './../utils/ase';\nimport { resetSize as _resetSize } from './../utils/util';\nimport { ajCaptcha, ajCaptchaCheck } from \"../../../api/common\"; //  \"captchaType\":\"blockPuzzle\",\n\nexport default {\n  name: 'VerifySlide',\n  props: {\n    captchaType: {\n      type: String\n    },\n    type: {\n      type: String,\n      default: '1'\n    },\n    // 弹出式pop，固定fixed\n    mode: {\n      type: String,\n      default: 'fixed'\n    },\n    vSpace: {\n      type: Number,\n      default: 5\n    },\n    explain: {\n      type: String,\n      default: '向右滑动完成验证'\n    },\n    imgSize: {\n      type: Object,\n      default: function _default() {\n        return {\n          width: '310px',\n          height: '155px'\n        };\n      }\n    },\n    blockSize: {\n      type: Object,\n      default: function _default() {\n        return {\n          width: '50px',\n          height: '50px'\n        };\n      }\n    },\n    barSize: {\n      type: Object,\n      default: function _default() {\n        return {\n          width: '310px',\n          height: '40px'\n        };\n      }\n    },\n    defaultImg: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      secretKey: '',\n      // 后端返回的加密秘钥 字段\n      passFlag: '',\n      // 是否通过的标识\n      backImgBase: '',\n      // 验证码背景图片\n      blockBackImgBase: '',\n      // 验证滑块的背景图片\n      backToken: '',\n      // 后端返回的唯一token值\n      startMoveTime: '',\n      // 移动开始的时间\n      endMovetime: '',\n      // 移动结束的时间\n      tipsBackColor: '',\n      // 提示词的背景颜色\n      tipWords: '',\n      text: '',\n      finishText: '',\n      setSize: {\n        imgHeight: 0,\n        imgWidth: 0,\n        barHeight: 0,\n        barWidth: 0\n      },\n      top: 0,\n      left: 0,\n      moveBlockLeft: undefined,\n      leftBarWidth: undefined,\n      // 移动中样式\n      moveBlockBackgroundColor: undefined,\n      leftBarBorderColor: '#ddd',\n      iconColor: undefined,\n      iconClass: 'icon-right',\n      status: false,\n      // 鼠标状态\n      isEnd: false,\n      // 是够验证完成\n      showRefresh: true,\n      transitionLeft: '',\n      transitionWidth: ''\n    };\n  },\n  computed: {\n    barArea: function barArea() {\n      return this.$el.querySelector('.verify-bar-area');\n    },\n    resetSize: function resetSize() {\n      return _resetSize;\n    }\n  },\n  watch: {\n    // type变化则全面刷新\n    type: {\n      immediate: true,\n      handler: function handler() {\n        this.init();\n      }\n    }\n  },\n  mounted: function mounted() {\n    // 禁止拖拽\n    this.$el.onselectstart = function () {\n      return false;\n    };\n\n    console.log(this.defaultImg);\n  },\n  methods: {\n    init: function init() {\n      var _this2 = this;\n\n      this.text = this.explain;\n      this.getPictrue();\n      this.$nextTick(function () {\n        var setSize = _this2.resetSize(_this2); // 重新设置宽度高度\n\n\n        for (var key in setSize) {\n          _this2.$set(_this2.setSize, key, setSize[key]);\n        }\n\n        _this2.$parent.$emit('ready', _this2);\n      });\n\n      var _this = this;\n\n      window.removeEventListener('touchmove', function (e) {\n        _this.move(e);\n      });\n      window.removeEventListener('mousemove', function (e) {\n        _this.move(e);\n      }); // 鼠标松开\n\n      window.removeEventListener('touchend', function () {\n        _this.end();\n      });\n      window.removeEventListener('mouseup', function () {\n        _this.end();\n      });\n      window.addEventListener('touchmove', function (e) {\n        _this.move(e);\n      });\n      window.addEventListener('mousemove', function (e) {\n        _this.move(e);\n      }); // 鼠标松开\n\n      window.addEventListener('touchend', function () {\n        _this.end();\n      });\n      window.addEventListener('mouseup', function () {\n        _this.end();\n      });\n    },\n    // 鼠标按下\n    start: function start(e) {\n      e = e || window.event;\n\n      if (!e.touches) {\n        // 兼容PC端\n        var x = e.clientX;\n      } else {\n        // 兼容移动端\n        var x = e.touches[0].pageX;\n      }\n\n      this.startLeft = Math.floor(x - this.barArea.getBoundingClientRect().left);\n      this.startMoveTime = +new Date(); // 开始滑动的时间\n\n      if (this.isEnd == false) {\n        this.text = '';\n        this.moveBlockBackgroundColor = '#337ab7';\n        this.leftBarBorderColor = '#337AB7';\n        this.iconColor = '#fff';\n        e.stopPropagation();\n        this.status = true;\n      }\n    },\n    // 鼠标移动\n    move: function move(e) {\n      e = e || window.event;\n\n      if (this.status && this.isEnd == false) {\n        if (!e.touches) {\n          // 兼容PC端\n          var x = e.clientX;\n        } else {\n          // 兼容移动端\n          var x = e.touches[0].pageX;\n        }\n\n        var bar_area_left = this.barArea.getBoundingClientRect().left;\n        var move_block_left = x - bar_area_left; // 小方块相对于父元素的left值\n\n        if (move_block_left >= this.barArea.offsetWidth - parseInt(parseInt(this.blockSize.width) / 2) - 2) {\n          move_block_left = this.barArea.offsetWidth - parseInt(parseInt(this.blockSize.width) / 2) - 2;\n        }\n\n        if (move_block_left <= 0) {\n          move_block_left = parseInt(parseInt(this.blockSize.width) / 2);\n        } // 拖动后小方块的left值\n\n\n        this.moveBlockLeft = move_block_left - this.startLeft + 'px';\n        this.leftBarWidth = move_block_left - this.startLeft + 'px';\n      }\n    },\n    // 鼠标松开\n    end: function end() {\n      var _this3 = this;\n\n      this.endMovetime = +new Date();\n\n      var _this = this; // 判断是否重合\n\n\n      if (this.status && this.isEnd == false) {\n        var moveLeftDistance = parseInt((this.moveBlockLeft || '').replace('px', ''));\n        moveLeftDistance = moveLeftDistance * 310 / parseInt(this.setSize.imgWidth);\n        var data = {\n          captchaType: this.captchaType,\n          'pointJson': this.secretKey ? aesEncrypt(JSON.stringify({\n            x: moveLeftDistance,\n            y: 5.0\n          }), this.secretKey) : JSON.stringify({\n            x: moveLeftDistance,\n            y: 5.0\n          }),\n          'token': this.backToken\n        };\n        ajCaptchaCheck(data).then(function (res) {\n          _this3.moveBlockBackgroundColor = '#5cb85c';\n          _this3.leftBarBorderColor = '#5cb85c';\n          _this3.iconColor = '#fff';\n          _this3.iconClass = 'icon-check';\n          _this3.showRefresh = false;\n          _this3.isEnd = true;\n\n          if (_this3.mode == 'pop') {\n            setTimeout(function () {\n              _this3.$parent.clickShow = false;\n\n              _this3.refresh();\n            }, 1500);\n          }\n\n          _this3.passFlag = true;\n          _this3.tipWords = \"\".concat(((_this3.endMovetime - _this3.startMoveTime) / 1000).toFixed(2), \"s\\u9A8C\\u8BC1\\u6210\\u529F\");\n          var captchaVerification = _this3.secretKey ? aesEncrypt(_this3.backToken + '---' + JSON.stringify({\n            x: moveLeftDistance,\n            y: 5.0\n          }), _this3.secretKey) : _this3.backToken + '---' + JSON.stringify({\n            x: moveLeftDistance,\n            y: 5.0\n          });\n          setTimeout(function () {\n            _this3.tipWords = '';\n\n            _this3.$parent.closeBox();\n\n            _this3.$parent.$emit('success', {\n              captchaVerification: captchaVerification\n            });\n          }, 1000);\n        }).catch(function (res) {\n          _this3.moveBlockBackgroundColor = '#d9534f';\n          _this3.leftBarBorderColor = '#d9534f';\n          _this3.iconColor = '#fff';\n          _this3.iconClass = 'icon-close';\n          _this3.passFlag = false;\n          setTimeout(function () {\n            _this.refresh();\n          }, 1000);\n\n          _this3.$parent.$emit('error', _this3);\n\n          _this3.tipWords = '验证失败';\n          setTimeout(function () {\n            _this3.tipWords = '';\n          }, 1000);\n        });\n        this.status = false;\n      }\n    },\n    refresh: function refresh() {\n      var _this4 = this;\n\n      this.showRefresh = true;\n      this.finishText = '';\n      this.transitionLeft = 'left .3s';\n      this.moveBlockLeft = 0;\n      this.leftBarWidth = undefined;\n      this.transitionWidth = 'width .3s';\n      this.leftBarBorderColor = '#ddd';\n      this.moveBlockBackgroundColor = '#fff';\n      this.iconColor = '#000';\n      this.iconClass = 'icon-right';\n      this.isEnd = false;\n      this.getPictrue();\n      setTimeout(function () {\n        _this4.transitionWidth = '';\n        _this4.transitionLeft = '';\n        _this4.text = _this4.explain;\n      }, 300);\n    },\n    // 请求背景图片和验证图片\n    getPictrue: function getPictrue() {\n      var _this5 = this;\n\n      var data = {\n        captchaType: this.captchaType,\n        clientUid: localStorage.getItem('slider'),\n        ts: Date.now() // 现在的时间戳\n\n      };\n      ajCaptcha(data).then(function (res) {\n        _this5.backImgBase = res.data.originalImageBase64;\n        _this5.blockBackImgBase = res.data.jigsawImageBase64;\n        _this5.backToken = res.data.token;\n        _this5.secretKey = res.data.secretKey;\n      }).catch(function (res) {\n        _this5.tipWords = res.msg;\n        _this5.backImgBase = null;\n        _this5.blockBackImgBase = null;\n      });\n    }\n  }\n};",null]}