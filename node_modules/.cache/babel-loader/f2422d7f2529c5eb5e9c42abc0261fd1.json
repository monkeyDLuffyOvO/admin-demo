{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/product/components/replyList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/product/components/replyList.vue","mtime":1662341777000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport { productReplycomment, productReplySave } from \"@/api/product\";\nimport { videoCommentReply, videoReply } from \"@/api/marketing\";\nexport default {\n  name: 'userList',\n  props: {\n    fromType: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      contents: {\n        content: \"\"\n      },\n      ruleInline: {\n        content: [{\n          required: true,\n          message: \"请输入回复内容\",\n          trigger: \"blur\"\n        }]\n      },\n      replyModals: false,\n      modals: false,\n      total: 0,\n      replyFrom: {\n        page: 1,\n        limit: 15\n      },\n      time: '',\n      loading: false,\n      dataList: [],\n      columns: [{\n        title: \"ID\",\n        key: \"id\",\n        width: 80\n      }, {\n        title: '评论用户',\n        slot: 'info',\n        minWidth: 90\n      }, {\n        title: \"评论内容\",\n        key: \"content\",\n        minWidth: 100\n      }, {\n        title: \"后台回复\",\n        slot: \"merchantReply\",\n        minWidth: 100\n      }, {\n        title: \"操作\",\n        slot: \"action\",\n        minWidth: 50\n      }],\n      rows: {},\n      fromList: {\n        title: \"选择时间\",\n        custom: true,\n        fromTxt: [{\n          text: \"全部\",\n          val: \"\"\n        }, {\n          text: \"今天\",\n          val: \"today\"\n        }, {\n          text: \"昨天\",\n          val: \"yesterday\"\n        }, {\n          text: \"最近7天\",\n          val: \"lately7\"\n        }, {\n          text: \"最近30天\",\n          val: \"lately30\"\n        }, {\n          text: \"本月\",\n          val: \"month\"\n        }, {\n          text: \"本年\",\n          val: \"year\"\n        }]\n      },\n      timeVal: [],\n      replyId: 0\n    };\n  },\n  computed: _objectSpread({}, mapState(\"admin/layout\", [\"isMobile\"]), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 75;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? \"top\" : \"left\";\n    }\n  }),\n  created: function created() {},\n  methods: {\n    oks: function oks() {\n      var _this = this;\n\n      this.$refs[\"contents\"].validate(function (valid) {\n        if (valid) {\n          var apiName = _this.fromType ? videoReply(_this.contents, _this.rows.id) : productReplySave(_this.contents, _this.replyId, _this.rows.id);\n          apiName.then(\n          /*#__PURE__*/\n          function () {\n            var _ref = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee(res) {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _this.$Message.success(res.msg);\n\n                      _this.replyModals = false;\n\n                      _this.$refs[\"contents\"].resetFields();\n\n                      _this.getList(_this.replyId);\n\n                    case 4:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            return function (_x) {\n              return _ref.apply(this, arguments);\n            };\n          }()).catch(function (res) {\n            _this.$Message.error(res.msg);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 具体日期\n    onchangeTime: function onchangeTime(e) {\n      this.timeVal = e;\n      this.time = this.timeVal[0] ? this.timeVal.join(\"-\") : \"\";\n      this.replyFrom.page = 1;\n    },\n    // 选择时间\n    selectChange: function selectChange(tab) {\n      this.time = tab;\n      this.timeVal = [];\n      this.replyFrom.page = 1;\n      this.getList(this.replyId);\n    },\n    cancels: function cancels() {\n      this.replyModals = false;\n      this.$refs[\"contents\"].resetFields();\n    },\n    reply: function reply(row) {\n      this.contents.content = row.children ? row.children.content : '';\n      this.rows = row;\n      this.replyModals = true;\n    },\n    // 删除\n    del: function del(row, tit, num) {\n      var _this2 = this;\n\n      var urls = '';\n      urls = this.fromType ? \"/marketing/video/comment/\".concat(row.id) : \"product/reply/delete_comment/\".concat(row.id);\n      var delfromData = {\n        title: tit,\n        num: num,\n        url: urls,\n        method: 'DELETE',\n        ids: ''\n      };\n      this.$modalSure(delfromData).then(function (res) {\n        _this2.$Message.success(res.msg);\n\n        _this2.getList(_this2.replyId);\n      }).catch(function (err) {\n        _this2.$Message.error(err.msg);\n      });\n    },\n    //评论回复列表\n    getList: function getList(id) {\n      var _this3 = this;\n\n      this.replyId = id;\n      this.loading = true;\n      var apiName = '';\n\n      if (this.fromType) {\n        this.replyFrom.data = this.time;\n        apiName = videoCommentReply;\n      } else {\n        this.replyFrom.time = this.time;\n        apiName = productReplycomment;\n      }\n\n      apiName(this.replyFrom, id).then(function (res) {\n        _this3.loading = false;\n        _this3.total = res.data.count;\n        _this3.dataList = res.data.list;\n      }).catch(function (err) {\n        _this3.loading = false;\n\n        _this3.$Message.error(err.msg);\n      });\n    },\n    pageChange: function pageChange(page) {\n      this.replyFrom.page = page;\n      this.getList(this.replyId);\n    }\n  }\n};",null]}