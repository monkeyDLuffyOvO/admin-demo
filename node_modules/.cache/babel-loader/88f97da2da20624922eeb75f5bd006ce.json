{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/components/mobileConfig/c_search_box.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/components/mobileConfig/c_search_box.vue","mtime":1659407670000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport toolCom from '@/components/mobileConfigRight/index.js';\nimport rightBtn from '@/components/rightBtn/index.vue';\nimport { mapMutations } from 'vuex';\nexport default {\n  name: 'c_search_box',\n  componentsName: 'search_box',\n  cname: '搜索',\n  props: {\n    activeIndex: {\n      type: null\n    },\n    num: {\n      type: null\n    },\n    index: {\n      type: null\n    }\n  },\n  components: _objectSpread({}, toolCom, {\n    rightBtn: rightBtn\n  }),\n  data: function data() {\n    return {\n      hotIndex: 1,\n      configObj: {},\n      // 配置对象\n      rCom: [{\n        components: toolCom.c_set_up,\n        configNme: 'setUp'\n      }],\n      // 当前页面组件\n      textBnt: [{\n        components: toolCom.c_tab,\n        configNme: 'tabConfig'\n      }, {\n        components: toolCom.c_input_item,\n        configNme: 'titleConfig'\n      }, {\n        components: toolCom.c_input_item,\n        configNme: 'linkConfig'\n      }, {\n        components: toolCom.c_hot_word,\n        configNme: 'hotWords'\n      }],\n      mapBnt: [{\n        components: toolCom.c_tab,\n        configNme: 'tabConfig'\n      }, {\n        components: toolCom.c_hot_word,\n        configNme: 'hotWords'\n      }],\n      searchBtn: [{\n        components: toolCom.c_tab,\n        configNme: 'tabConfig'\n      }, {\n        components: toolCom.c_radio,\n        configNme: 'radioConfig'\n      }, {\n        components: toolCom.c_upload_img,\n        configNme: 'logoConfig'\n      }, {\n        components: toolCom.c_hot_word,\n        configNme: 'hotWords'\n      }],\n      mapRadio: [{\n        components: toolCom.c_tab,\n        configNme: 'tabConfig'\n      }, {\n        components: toolCom.c_radio,\n        configNme: 'radioConfig'\n      }, {\n        components: toolCom.c_hot_word,\n        configNme: 'hotWords'\n      }],\n      textRadio: [{\n        components: toolCom.c_tab,\n        configNme: 'tabConfig'\n      }, {\n        components: toolCom.c_radio,\n        configNme: 'radioConfig'\n      }, {\n        components: toolCom.c_input_item,\n        configNme: 'titleConfig'\n      }, {\n        components: toolCom.c_input_item,\n        configNme: 'linkConfig'\n      }, {\n        components: toolCom.c_hot_word,\n        configNme: 'hotWords'\n      }],\n      setUp: 0,\n      type: 0,\n      typeRadio: 0\n    };\n  },\n  watch: {\n    num: function num(nVal) {\n      // debugger;\n      var value = JSON.parse(JSON.stringify(this.$store.state.admin.mobildConfig.defaultArray[nVal]));\n      this.configObj = value;\n    },\n    configObj: {\n      handler: function handler(nVal, oVal) {\n        this.$store.commit('admin/mobildConfig/UPDATEARR', {\n          num: this.num,\n          val: nVal\n        });\n      },\n      deep: true\n    },\n    'configObj.setUp.tabVal': {\n      handler: function handler(nVal, oVal) {\n        this.setUp = nVal;\n        var arr = [this.rCom[0]];\n\n        if (nVal == 0) {\n          if (this.type === 0) {\n            this.rCom = arr.concat(this.textBnt);\n          } else if (this.type === 1) {\n            this.rCom = arr.concat(this.mapBnt);\n          } else {\n            if (this.typeRadio === 0) {\n              this.rCom = arr.concat(this.textRadio);\n            } else if (this.typeRadio === 1) {\n              this.rCom = arr.concat(this.mapRadio);\n            } else {\n              this.rCom = arr.concat(this.searchBtn);\n            }\n          }\n        } else {\n          var tempArr = [{\n            components: toolCom.c_bg_color,\n            configNme: 'bgColor'\n          }, {\n            components: toolCom.c_bg_color,\n            configNme: 'textColor'\n          }, {\n            components: toolCom.c_txt_tab,\n            configNme: 'textStyle'\n          }, {\n            components: toolCom.c_txt_tab,\n            configNme: 'boxStyle'\n          }, {\n            components: toolCom.c_txt_tab,\n            configNme: 'txtStyle'\n          }, {\n            components: toolCom.c_txt_tab,\n            configNme: 'styleList'\n          }, {\n            components: toolCom.c_slider,\n            configNme: 'prConfig'\n          }, {\n            components: toolCom.c_slider,\n            configNme: 'mbConfig'\n          }];\n          this.rCom = arr.concat(tempArr);\n        }\n      },\n      deep: true\n    },\n    'configObj.tabConfig.tabVal': {\n      handler: function handler(nVal, oVal) {\n        this.type = nVal;\n        var arr = [this.rCom[0]];\n\n        if (this.setUp === 0) {\n          if (nVal === 0) {\n            this.rCom = arr.concat(this.textBnt);\n          } else if (nVal === 1) {\n            this.rCom = arr.concat(this.mapBnt);\n          } else {\n            if (this.typeRadio == 0) {\n              this.rCom = arr.concat(this.textRadio);\n            } else if (this.typeRadio == 1) {\n              this.rCom = arr.concat(this.mapRadio);\n            } else {\n              this.rCom = arr.concat(this.searchBtn);\n            }\n          }\n        }\n      },\n      deep: true\n    },\n    'configObj.radioConfig.tabVal': {\n      handler: function handler(nVal, oVal) {\n        this.typeRadio = nVal;\n        var arr = [this.rCom[0]];\n\n        if (this.setUp === 0 && this.type === 2) {\n          if (nVal === 0) {\n            this.rCom = arr.concat(this.textRadio);\n          } else if (nVal === 1) {\n            this.rCom = arr.concat(this.mapRadio);\n          } else {\n            this.rCom = arr.concat(this.searchBtn);\n          }\n        }\n      },\n      deep: true\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      var value = JSON.parse(JSON.stringify(_this.$store.state.admin.mobildConfig.defaultArray[_this.num]));\n      _this.configObj = value;\n    });\n  },\n  methods: {}\n};",null]}