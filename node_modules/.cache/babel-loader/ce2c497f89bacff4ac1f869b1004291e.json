{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/eslint-loader/index.js??ref--13-0!/home/darkcrossunicorn/文档/admin/src/store/modules/admin/modules/mobildConfig.js","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/store/modules/admin/modules/mobildConfig.js","mtime":1664694388613},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// +----------------------------------------------------------------------\n// | HIGOSHOP [ HIGOSHOP助力中小企业数字化转型 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2020~2022 https://www.higoshop.net All rights reserved.\n// +----------------------------------------------------------------------\n// | Licensed HIGOSHOP并不是自由软件，未经许可不能去掉HIGOSHOP相关版权\n// +----------------------------------------------------------------------\n// | Author: HIGOSHOP Team <higoshop@126.com>\n// +----------------------------------------------------------------------\n\n/**\n * diy自定义组件\n * */\nexport default {\n  namespaced: true,\n  state: {\n    configName: '',\n    pageTitle: '',\n    pageName: '',\n    pageShow: 1,\n    pageColor: 0,\n    pagePic: 0,\n    pageColorPicker: '#f5f5f5',\n    pageTabVal: 0,\n    pagePicUrl: '',\n    // 已知组件列表默认数据 数组\n    defaultArray: {},\n    pageFooter: {\n      \"name\": \"pageFoot\",\n      \"setUp\": {\n        \"tabVal\": 0\n      },\n      \"status\": {\n        \"title\": \"是否自定义\",\n        \"name\": \"status\",\n        \"status\": false\n      },\n      \"txtColor\": {\n        \"title\": \"文字颜色\",\n        \"name\": \"txtColor\",\n        \"default\": [{\n          \"item\": \"#282828\"\n        }],\n        \"color\": [{\n          \"item\": \"#282828\"\n        }]\n      },\n      \"activeTxtColor\": {\n        \"title\": \"选中文字颜色\",\n        \"name\": \"txtColor\",\n        \"default\": [{\n          \"item\": \"#F62C2C\"\n        }],\n        \"color\": [{\n          \"item\": \"#F62C2C\"\n        }]\n      },\n      \"bgColor\": {\n        \"title\": \"背景颜色\",\n        \"name\": \"bgColor\",\n        \"default\": [{\n          \"item\": \"#fff\"\n        }],\n        \"color\": [{\n          \"item\": \"#fff\"\n        }]\n      },\n      \"menuList\": [{\n        imgList: [require('@/assets/images/foot-001.png'), require('@/assets/images/foot-002.png')],\n        name: '首页',\n        link: '/pages/index/index'\n      }, {\n        imgList: [require('@/assets/images/foot-003.png'), require('@/assets/images/foot-004.png')],\n        name: '分类',\n        link: '/pages/goods_cate/goods_cate'\n      }, {\n        imgList: [require('@/assets/images/foot-005.png'), require('@/assets/images/foot-006.png')],\n        name: '购物车',\n        link: '/pages/order_addcart/order_addcart'\n      }, {\n        imgList: [require('@/assets/images/foot-007.png'), require('@/assets/images/foot-008.png')],\n        name: '我的',\n        link: '/pages/user/index'\n      }]\n    }\n  },\n  mutations: {\n    FOOTER: function FOOTER(state, data) {\n      state.pageFooter.status.title = data.title;\n      state.pageFooter.menuList[2] = data.name;\n    },\n\n    /**\n     * @description 默认配置push到数组里面\n     * @param {Object} state vuex state\n     * @param {Object} data\n     * 把默认数据添加到默认数组里面，解耦重复组件公用一条配置的问题\n     */\n    ADDARRAY: function ADDARRAY(state, data) {\n      data.val.id = 'id' + data.val.timestamp;\n      state.defaultArray[data.num] = data.val;\n    },\n\n    /**\n     * @description 删除列表第几个默认数据\n     * @param {Object} state vuex state\n     * @param {Object} data 数据\n     */\n    DELETEARRAY: function DELETEARRAY(state, data) {\n      var tempObj = delete state.defaultArray[data.num];\n    },\n\n    /**\n     * @description 删除列表第几个默认数据\n     * @param {Object} state vuex state\n     * @param {Object} data 数据\n     */\n    ARRAYREAST: function ARRAYREAST(state, data) {\n      var tempObj = delete state.defaultArray[data];\n    },\n\n    /**\n     * @description 数组排序\n     * @param {Object} state vuex state\n     * @param {Object} data 位置index记录\n     */\n    defaultArraySort: function defaultArraySort(state, data) {\n      var newArr = objToArr(state.defaultArray);\n      var sortArr = [];\n      var newObj = {};\n\n      function objToArr(data) {\n        var obj = Object.keys(data);\n        var m = obj.map(function (key) {\n          return data[key];\n        });\n        return m;\n      }\n\n      function swapArray(arr, index1, index2) {\n        var oldObj = {};\n        var newObj = {};\n        var active = 0;\n        arr.forEach(function (el, index) {\n          if (!el.id) {\n            el.id = 'id' + el.timestamp;\n          }\n\n          data.list.forEach(function (item, j) {\n            if (el.id == item.id) {\n              el.timestamp = item.num;\n            }\n          });\n        }); // if(index2>index1){\n        //     arr[index2].timestamp = (parseInt(arr[index1].timestamp) -1).toString()\n        // }else{\n        //     arr[index2].timestamp = (parseInt(arr[index1].timestamp) +1).toString()\n        // }\n        // arr[index1] = arr.splice(index2, 1, arr[index1])[0];\n\n        return arr;\n      }\n\n      if (data.oldIndex != undefined) {\n        sortArr = JSON.parse(JSON.stringify(swapArray(newArr, data.newIndex, data.oldIndex)));\n      } else {\n        newArr.splice(data.newIndex, 0, data.element.data().defaultConfig);\n        sortArr = JSON.parse(JSON.stringify(swapArray(newArr, 0, 0)));\n      }\n\n      for (var i = 0; i < sortArr.length; i++) {\n        newObj[sortArr[i].timestamp] = sortArr[i];\n      }\n\n      state.defaultArray = Object.assign({}, newObj);\n    },\n\n    /**\n     * @description 更新数组某一组数据\n     * @param {Object} state vuex state\n     * @param {Object} data\n     */\n    UPDATEARR: function UPDATEARR(state, data) {\n      for (var k in state.defaultArray) {\n        if (state.defaultArray[k].id == data.val.id) {\n          state.defaultArray[k] = data.val;\n        }\n      }\n\n      var value = Object.assign({}, state.defaultArray);\n      state.defaultArray = value;\n    },\n\n    /**\n     * @description 保存组件名称\n     * @param {Object} state vuex state\n     * @param {string} data\n     */\n    SETCONFIGNAME: function SETCONFIGNAME(state, name) {\n      state.configName = name;\n    },\n\n    /**\n     * @description 默认组件清空\n     * @param {Object} state vuex state\n     * @param {string} data\n     */\n    SETEMPTY: function SETEMPTY(state, name) {\n      state.defaultArray = {};\n    },\n    UPTITLE: function UPTITLE(state, val) {\n      state.pageTitle = val;\n    },\n    UPNAME: function UPNAME(state, val) {\n      state.pageName = val;\n    },\n    UPSHOW: function UPSHOW(state, val) {\n      state.pageShow = val;\n    },\n    UPCOLOR: function UPCOLOR(state, val) {\n      state.pageColor = val;\n    },\n    UPPIC: function UPPIC(state, val) {\n      state.pagePic = val;\n    },\n    UPPICKER: function UPPICKER(state, val) {\n      state.pageColorPicker = val;\n    },\n    UPRADIO: function UPRADIO(state, val) {\n      state.pageTabVal = val;\n    },\n    UPPICURL: function UPPICURL(state, val) {\n      state.pagePicUrl = val;\n    },\n\n    /**\n     * @description 更新foot菜单配置\n     * @param {Object} state vuex state\n     * @param {string} data\n     */\n    footUpdata: function footUpdata(state, data) {\n      state.pageFooter.menuList = [];\n      state.pageFooter.menuList = data;\n    },\n\n    /**\n     * @description 更新foot自定义开关\n     * @param {Object} state vuex state\n     * @param {string} data\n     */\n    footStatus: function footStatus(state, data) {\n      state.pageFooter.status.status = data;\n    },\n\n    /**\n     * @description 更新foot配置\n     * @param {Object} state vuex state\n     * @param {string} data\n     */\n    footPageUpdata: function footPageUpdata(state, data) {\n      state.pageFooter = data;\n    },\n\n    /**\n     * @description 更新title配置\n     * @param {Object} state vuex state\n     * @param {string} data\n     */\n    titleUpdata: function titleUpdata(state, data) {\n      state.pageTitle = data;\n    },\n\n    /**\n     * @description 更新name配置\n     * @param {Object} state vuex state\n     * @param {string} data\n     */\n    nameUpdata: function nameUpdata(state, data) {\n      state.pageName = data;\n    },\n    //\n    showUpdata: function showUpdata(state, data) {\n      state.pageShow = data;\n    },\n    colorUpdata: function colorUpdata(state, data) {\n      state.pageColor = data;\n    },\n    picUpdata: function picUpdata(state, data) {\n      state.pagePic = data;\n    },\n    pickerUpdata: function pickerUpdata(state, data) {\n      state.pageColorPicker = data;\n    },\n    radioUpdata: function radioUpdata(state, data) {\n      state.pageTabVal = data;\n    },\n    picurlUpdata: function picurlUpdata(state, data) {\n      state.pagePicUrl = data;\n    }\n  },\n  actions: {\n    getData: function getData(_ref, data) {\n      var commit = _ref.commit;\n    }\n  }\n};",null]}