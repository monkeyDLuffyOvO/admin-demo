{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/echarts/trade/order.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/echarts/trade/order.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport searchFrom from '../../../components/searchFrom/searchFrom';\nimport cardsData from '../../../components/cards/cards';\nimport { getOrdes } from '@/api/order';\nimport { mapState } from 'vuex';\nimport echarts from 'echarts';\n\nfunction getDate(d) {\n  var date = new Date(d);\n  var hour = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\n  var mins = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n  return \"\".concat(hour, \":\").concat(mins);\n}\n\nexport default {\n  name: 'order',\n  data: function data() {\n    return {\n      typeStatus: 0,\n      typeName: [],\n      visitDate: '',\n      xData: [],\n      y1Data: [],\n      y2Data: [],\n      tablists: null,\n      cardLists: [{\n        className: 'layui-bg-blue',\n        col: 4,\n        count: 3,\n        field: '件',\n        name: '订单数量'\n      }, {\n        className: 'layui-bg-blue',\n        col: 4,\n        count: 3,\n        field: '件',\n        name: '订单数量'\n      }],\n      // 请求接口数据\n      columns1: [{\n        title: 'Name',\n        key: 'name'\n      }, {\n        title: 'Age',\n        key: 'age'\n      }, {\n        title: 'Address',\n        key: 'address'\n      }],\n      data2: [{\n        name: 'John Brown',\n        age: 18,\n        address: 'New York No. 1 Lake Park',\n        date: '2016-10-03'\n      }, {\n        name: 'Jim Green',\n        age: 24,\n        address: 'London No. 1 Lake Park',\n        date: '2016-10-01'\n      }, {\n        name: 'Joe Black',\n        age: 30,\n        address: 'Sydney No. 1 Lake Park',\n        date: '2016-10-02'\n      }, {\n        name: 'Jon Snow',\n        age: 26,\n        address: 'Ottawa No. 2 Lake Park',\n        date: '2016-10-04'\n      }, {\n        name: 'John Brown',\n        age: 18,\n        address: 'New York No. 1 Lake Park',\n        date: '2016-10-03'\n      }, {\n        name: 'Jim Green',\n        age: 24,\n        address: 'London No. 1 Lake Park',\n        date: '2016-10-01'\n      }, {\n        name: 'Joe Black',\n        age: 30,\n        address: 'Sydney No. 1 Lake Park',\n        date: '2016-10-02'\n      }, {\n        name: 'Jon Snow',\n        age: 26,\n        address: 'Ottawa No. 2 Lake Park',\n        date: '2016-10-04'\n      }]\n    };\n  },\n  components: {\n    searchFrom: searchFrom,\n    cardsData: cardsData\n  },\n  computed: _objectSpread({}, mapState('admin/order', ['orderStatus', 'orderTime'])),\n  mounted: function mounted() {\n    this.getTabs();\n    this.handleGetData();\n    this.handleSetVisitChart();\n  },\n  methods: {\n    // 订单类型  @on-changeTabs=\"getChangeTabs\"\n    getTabs: function getTabs() {\n      var _this = this;\n\n      getOrdes({}).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (res.status === 200) {\n                    _this.tablists = res.data;\n                    _this.typeName = [{\n                      'name': '全部',\n                      'num': _this.tablists.all,\n                      'label': ''\n                    }, {\n                      'name': '未支付',\n                      'num': _this.tablists.unpaid,\n                      'label': 0\n                    }, {\n                      'name': '未发货',\n                      'num': _this.tablists.unshipped,\n                      'label': 1\n                    }, {\n                      'name': '待收货',\n                      'num': _this.tablists.untake,\n                      'label': 2\n                    }, {\n                      'name': '待评价',\n                      'num': _this.tablists.unevaluate,\n                      'label': 3\n                    }, {\n                      'name': '交易完成',\n                      'num': _this.tablists.complete,\n                      'label': 4\n                    }, {\n                      'name': '退款中',\n                      'num': _this.tablists.refunding,\n                      'label': -1\n                    }, {\n                      'name': '已退款',\n                      'num': _this.tablists.refund,\n                      'label': -2\n                    }];\n                  } else {\n                    _this.$Message.error(res.msg);\n                  }\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this.$Message.error(res.msg);\n      });\n    },\n    // 点击订单类型\n    onChangeType: function onChangeType(type) {},\n    // 点击时间\n    getSeachTime: function getSeachTime(tme) {},\n    // 点击订单状态\n    getTypeNum: function getTypeNum(status) {\n      this.typeStatus = status;\n    },\n    // 点击订单状态\n    getData: function getData() {// 调图标数据函数\n    },\n    // 图表\n    handleGetData: function handleGetData() {\n      var date = new Date().getTime();\n      this.xData = [getDate(date), getDate(date - 60000 * 5), getDate(date - 60000 * 10), getDate(date - 60000 * 15), getDate(date - 60000 * 20), getDate(date - 60000 * 25), getDate(date - 60000 * 30), getDate(date - 60000 * 35), getDate(date - 60000 * 40), getDate(date - 60000 * 45), getDate(date - 60000 * 50)].reverse();\n      this.y1Data = [45, 169, 400, 285, 316, 148, 150, 234, 158, 100, 266];\n      this.y2Data = [15, 39, 152, 94, 102, 86, 39, 38, 95, 30, 86];\n    },\n    handleSetVisitChart: function handleSetVisitChart() {\n      this.visitChart = echarts.init(this.$refs.visitChart);\n      this.visitChart.setOption({\n        xAxis: {\n          type: 'category',\n          axisLine: {\n            lineStyle: {\n              color: '#D7DDE4'\n            }\n          },\n          axisTick: {\n            alignWithLabel: true,\n            lineStyle: {\n              color: '#D7DDE4'\n            }\n          },\n          axisLabel: {\n            textStyle: {\n              color: '#7F8B9C'\n            }\n          },\n          splitLine: {\n            show: false,\n            lineStyle: {\n              color: '#F5F7F9'\n            }\n          },\n          data: this.xData,\n          boundaryGap: false\n        },\n        yAxis: {\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            textStyle: {\n              color: '#7F8B9C'\n            }\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: '#F5F7F9'\n            }\n          },\n          type: 'value'\n        },\n        legend: {\n          data: ['浏览量（PV）', '访客数（UV）'],\n          x: 'right'\n        },\n        series: [{\n          data: this.y1Data,\n          name: '浏览量（PV）',\n          type: 'line',\n          tooltip: true,\n          smooth: true,\n          symbol: 'none',\n          areaStyle: {\n            normal: {\n              opacity: 0.2\n            }\n          }\n        }, {\n          data: this.y2Data,\n          name: '访客数（UV）',\n          type: 'line',\n          tooltip: true,\n          smooth: true,\n          symbol: 'none',\n          areaStyle: {\n            normal: {\n              opacity: 0.2\n            }\n          }\n        }],\n        color: ['#1495EB', '#00CC66', '#F9D249', '#ff9900', '#9860DF'],\n        grid: {\n          left: 20,\n          right: 20,\n          bottom: 20,\n          top: 40,\n          containLabel: true\n        },\n        tooltip: {\n          trigger: 'axis'\n        }\n      });\n    },\n    handleResize: function handleResize() {\n      this.visitChart.resize();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.visitChart) {\n      this.visitChart.dispose();\n      this.visitChart = null;\n    }\n  }\n};",null]}