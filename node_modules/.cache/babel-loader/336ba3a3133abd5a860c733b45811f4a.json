{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/product/productReply/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/product/productReply/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport { replyListApi, setReplyApi, fictitiousReply } from \"@/api/product\";\nimport replyList from '../components/replyList.vue';\nimport timeOptions from \"@/utils/timeOptions\";\nexport default {\n  name: \"product_productEvaluate\",\n  components: {\n    replyList: replyList\n  },\n  data: function data() {\n    return {\n      modals: false,\n      grid: {\n        xl: 7,\n        lg: 10,\n        md: 12,\n        sm: 12,\n        xs: 24\n      },\n      formValidate: {\n        is_reply: \"\",\n        data: \"\",\n        store_name: \"\",\n        account: \"\",\n        product_id: this.$route.params.id === undefined ? 0 : this.$route.params.id,\n        page: 1,\n        limit: 15\n      },\n      options: timeOptions,\n      value: \"45\",\n      tableList: [],\n      total: 0,\n      loading: false,\n      columns: [{\n        title: \"评论ID\",\n        key: \"id\",\n        width: 80\n      }, {\n        title: \"商品信息\",\n        slot: \"info\",\n        minWidth: 250\n      }, {\n        title: \"用户名称\",\n        key: \"nickname\",\n        minWidth: 150\n      }, {\n        title: \"评分\",\n        key: \"score\",\n        sortable: true,\n        minWidth: 90\n      }, {\n        title: \"评价内容\",\n        slot: \"content\",\n        minWidth: 210\n      }, {\n        title: \"回复内容\",\n        slot: \"reply\",\n        minWidth: 250\n      }, {\n        title: \"评价时间\",\n        key: \"add_time\",\n        sortable: true,\n        minWidth: 150\n      }, {\n        title: \"操作\",\n        slot: \"action\",\n        fixed: \"right\",\n        minWidth: 150\n      }],\n      timeVal: [],\n      contents: {\n        content: \"\"\n      },\n      ruleInline: {\n        content: [{\n          required: true,\n          message: \"请输入回复内容\",\n          trigger: \"blur\"\n        }]\n      },\n      rows: {}\n    };\n  },\n  computed: _objectSpread({}, mapState(\"admin/layout\", [\"isMobile\"]), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    }\n  }),\n  created: function created() {\n    if (this.$route.query.is_reply == 0) {\n      this.formValidate.is_reply = this.$route.query.is_reply;\n    }\n\n    this.getList();\n  },\n  watch: {\n    \"$route.params.id\": function $routeParamsId(to, from) {\n      this.formValidate.product_id = 0;\n      this.getList();\n    }\n  },\n  methods: {\n    // 查看评论列表\n    seeReply: function seeReply(row) {\n      this.$refs.reply.modals = true;\n      this.$refs.reply.getList(row.id);\n    },\n    // 添加虚拟评论；\n    add: function add() {\n      var _this = this;\n\n      this.$modalForm(fictitiousReply(this.formValidate.product_id)).then(function () {\n        return _this.getList();\n      });\n    },\n    oks: function oks() {\n      var _this2 = this;\n\n      this.modals = true;\n      this.$refs[\"contents\"].validate(function (valid) {\n        if (valid) {\n          setReplyApi(_this2.contents, _this2.rows.id).then(\n          /*#__PURE__*/\n          function () {\n            var _ref = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee(res) {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _this2.$Message.success(res.msg);\n\n                      _this2.modals = false;\n\n                      _this2.$refs[\"contents\"].resetFields();\n\n                      _this2.getList();\n\n                    case 4:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            return function (_x) {\n              return _ref.apply(this, arguments);\n            };\n          }()).catch(function (res) {\n            _this2.$Message.error(res.msg);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    cancels: function cancels() {\n      this.modals = false;\n      this.$refs[\"contents\"].resetFields();\n    },\n    // 删除\n    del: function del(row, tit, num) {\n      var _this3 = this;\n\n      var delfromData = {\n        title: tit,\n        num: num,\n        url: \"product/reply/\".concat(row.id),\n        method: \"DELETE\",\n        ids: \"\"\n      };\n      this.$modalSure(delfromData).then(function (res) {\n        _this3.$Message.success(res.msg);\n\n        _this3.tableList.splice(num, 1);\n      }).catch(function (res) {\n        _this3.$Message.error(res.msg);\n      });\n    },\n    // 回复\n    reply: function reply(row) {\n      this.modals = true;\n      this.rows = row;\n      this.contents.content = row.replyComment ? row.replyComment.content : '';\n    },\n    // 具体日期\n    onchangeTime: function onchangeTime(e) {\n      this.timeVal = e; // this.formValidate.data = this.timeVal.join('-');\n\n      this.formValidate.data = this.timeVal[0] ? this.timeVal.join(\"-\") : \"\";\n      this.formValidate.page = 1;\n      this.getList();\n    },\n    // 选择时间\n    selectChange: function selectChange(tab) {\n      this.formValidate.data = tab;\n      this.timeVal = [];\n      this.formValidate.page = 1;\n      this.getList();\n    },\n    // 列表\n    getList: function getList() {\n      var _this4 = this;\n\n      this.loading = true;\n      this.formValidate.is_reply = this.formValidate.is_reply || \"\";\n      this.formValidate.store_name = this.formValidate.store_name || \"\";\n      replyListApi(this.formValidate).then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  data = res.data;\n                  _this4.tableList = data.list;\n                  _this4.total = res.data.count;\n                  _this4.loading = false;\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this4.loading = false;\n\n        _this4.$Message.error(res.msg);\n      });\n    },\n    pageChange: function pageChange(index) {\n      this.formValidate.page = index;\n      this.getList();\n    },\n    // 表格搜索\n    userSearchs: function userSearchs() {\n      this.formValidate.page = 1;\n      this.getList();\n    },\n    search: function search() {}\n  }\n};",null]}