{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/system/configTab/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/system/configTab/list.vue","mtime":1649411723000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { configTabListApi, configTabAddApi, configTabEditApi, configSetStatusApi } from '@/api/system';\nimport formCreate from '@form-create/iview';\nimport editFrom from '@/components/from/from';\nimport request from '@/plugins/request';\nexport default {\n  name: 'list',\n  components: {\n    formCreate: formCreate.$form(),\n    editFrom: editFrom\n  },\n  data: function data() {\n    return {\n      modals2: false,\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24\n      },\n      loading: false,\n      formValidate: {\n        tab_id: 0,\n        page: 1,\n        limit: 20\n      },\n      total: 0,\n      columns1: [{\n        title: 'ID',\n        key: 'id',\n        width: 80\n      }, {\n        title: '配置名称',\n        key: 'info',\n        minWidth: 130\n      }, {\n        title: '字段变量',\n        key: 'menu_name',\n        minWidth: 140\n      }, {\n        title: '字段类型',\n        key: 'type',\n        minWidth: 90\n      }, {\n        title: '值',\n        slot: 'values',\n        minWidth: 230\n      }, {\n        title: '是否显示',\n        slot: 'statuss',\n        minWidth: 90\n      }, {\n        title: '操作',\n        slot: 'action',\n        fixed: 'right',\n        minWidth: 120\n      }],\n      FromData: null,\n      FromRequestData: {},\n      modalTitleSs: '',\n      classList: [],\n      num: 0,\n      typeFrom: {\n        type: 0,\n        tab_id: this.$route.params.id\n      },\n      rules: []\n    };\n  },\n  watch: {\n    $route: {\n      handler: function handler(val, oldVal) {\n        this.getList();\n      },\n      // 深度观察监听\n      deep: true\n    }\n  },\n  mounted: function mounted() {\n    this.getList();\n  },\n  methods: {\n    // 点击tab\n    onhangeTab: function onhangeTab(name) {\n      this.typeFrom.type = name;\n      this.classAdd();\n    },\n    // 新增表单\n    classAdd: function classAdd() {\n      var _this = this;\n\n      configTabAddApi(this.typeFrom).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!(res.data.status === false)) {\n                    _context.next = 2;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", _this.$authLapse(res.data));\n\n                case 2:\n                  data = res.data || {};\n                  _this.FromRequestData = {\n                    action: data.action,\n                    method: data.method\n                  };\n                  _this.rules = data.rules;\n                  _this.modals2 = true;\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this.$Message.error(res.msg);\n      });\n    },\n    // 编辑表单\n    edit: function edit(row) {\n      var _this2 = this;\n\n      configTabEditApi(row.id).then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!(res.data.status === false)) {\n                    _context2.next = 2;\n                    break;\n                  }\n\n                  return _context2.abrupt(\"return\", _this2.$authLapse(res.data));\n\n                case 2:\n                  data = res.data || {};\n                  _this2.FromRequestData = {\n                    action: data.action,\n                    method: data.method\n                  };\n                  _this2.rules = data.rules;\n                  _this2.$refs.edits.modals = true;\n                  _this2.modals2 = true;\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this2.$Message.error(res.msg);\n      });\n    },\n    // 提交表单\n    onSubmit: function onSubmit(formData) {\n      var _this3 = this;\n\n      request({\n        url: this.FromRequestData.action,\n        method: this.FromRequestData.method,\n        data: formData\n      }).then(function (res) {\n        _this3.$Message.success(res.msg);\n\n        setTimeout(function () {\n          _this3.modals2 = false;\n        }, 1000);\n        setTimeout(function () {\n          _this3.getList();\n        }, 1500);\n      }).catch(function (res) {\n        _this3.$Message.error(res.msg);\n      });\n    },\n    // 修改成功\n    submitFail: function submitFail() {\n      this.getList();\n    },\n    // 添加配置\n    configureAdd: function configureAdd() {\n      // this.modals2 = true;\n      this.classAdd();\n    },\n    // 列表\n    getList: function getList() {\n      var _this4 = this;\n\n      this.loading = true;\n      this.formValidate.tab_id = this.$route.params.id;\n      configTabListApi(this.formValidate).then(\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee3(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  data = res.data;\n                  _this4.classList = data.list;\n                  _this4.total = data.count;\n                  _this4.loading = false;\n\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this4.loading = false;\n\n        _this4.$Message.error(res.msg);\n      });\n    },\n    pageChange: function pageChange(index) {\n      this.formValidate.page = index;\n      this.getList();\n    },\n    // 删除\n    del: function del(row, tit, num) {\n      var _this5 = this;\n\n      var delfromData = {\n        title: tit,\n        num: num,\n        url: \"/setting/config/\".concat(row.id),\n        method: 'DELETE',\n        ids: ''\n      };\n      this.$modalSure(delfromData).then(function (res) {\n        _this5.$Message.success(res.msg);\n\n        _this5.classList.splice(num, 1);\n      }).catch(function (res) {\n        _this5.$Message.error(res.msg);\n      });\n    },\n    // 修改是否显示\n    onchangeIsShow: function onchangeIsShow(row) {\n      var _this6 = this;\n\n      configSetStatusApi(row.id, row.status).then(\n      /*#__PURE__*/\n      function () {\n        var _ref4 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee4(res) {\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _this6.$Message.success(res.msg);\n\n                case 1:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref4.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this6.$Message.error(res.msg);\n      });\n    }\n  }\n};",null]}