{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/index/components/visitChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/index/components/visitChart.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { orderApi } from '@/api/index';\nimport echartsFrom from '@/components/echarts/index';\nexport default {\n  components: {\n    echartsFrom: echartsFrom\n  },\n  data: function data() {\n    return {\n      infoList: null,\n      visitDate: 'thirtyday',\n      series: [],\n      yAxisData: []\n    };\n  },\n  methods: {\n    // 统计\n    getStatistics: function getStatistics() {\n      var _this = this;\n\n      var data = {\n        cycle: this.visitDate\n      };\n      orderApi(data).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this.infoList = res.data || {};\n                  _this.series = _this.infoList.series || [], _this.yAxisData = [{\n                    type: 'value',\n                    name: '金额',\n                    axisLine: {\n                      show: false\n                    },\n                    axisTick: {\n                      show: false\n                    },\n                    axisLabel: {\n                      textStyle: {\n                        color: '#7F8B9C'\n                      }\n                    },\n                    splitLine: {\n                      show: true,\n                      lineStyle: {\n                        color: '#F5F7F9'\n                      }\n                    }\n                  }, {\n                    type: 'value',\n                    name: '数量',\n                    axisLine: {\n                      show: false\n                    },\n                    axisTick: {\n                      show: false\n                    },\n                    axisLabel: {\n                      textStyle: {\n                        color: '#7F8B9C'\n                      }\n                    },\n                    splitLine: {\n                      show: true,\n                      lineStyle: {\n                        color: '#F5F7F9'\n                      }\n                    } // axisLabel: {\n                    //     formatter: '{value} °C'\n                    // }\n\n                  }];\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this.$Message.error(res.msg);\n      });\n    },\n    // 时间改变\n    handleChangeVisitType: function handleChangeVisitType() {\n      this.getStatistics();\n    },\n    // 监听页面宽度变化，刷新表格\n    handleResize: function handleResize() {\n      if (this.infoList) this.$refs.visitChart.handleResize();\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      _this2.getStatistics();\n    });\n  }\n};",null]}