{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/app/wechat/reply/follow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/app/wechat/reply/follow.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Setting from \"@/setting\";\nimport { replyApi, keywordsinfoApi } from \"@/api/app\";\nimport { mapActions } from \"vuex\";\nimport newsCategory from \"@/components/newsCategory/index\";\nimport util from \"@/libs/util\";\nexport default {\n  name: \"follow\",\n  components: {\n    newsCategory: newsCategory\n  },\n  props: {\n    activeName: {\n      type: String,\n      default: ''\n    },\n    keywordSave: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    var validateContent = function validateContent(rule, value, callback) {\n      if (_this.formValidate.type === \"text\") {\n        if (_this.formValidate.data.content === \"\") {\n          callback(new Error(\"请填写消息内容\"));\n        } else {\n          callback();\n        }\n      }\n    };\n\n    var validateSrc = function validateSrc(rule, value, callback) {\n      if (_this.formValidate.type === \"image\" && _this.formValidate.data.src === \"\") {\n        callback(new Error(\"请上传\"));\n      } else {\n        callback();\n      }\n    };\n\n    var validateVal = function validateVal(rule, value, callback) {\n      if (_this.labelarr.length === 0) {\n        callback(new Error(\"请输入后回车\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      delfromData: {},\n      isShow: false,\n      maxCols: 4,\n      scrollerHeight: \"600\",\n      contentTop: \"130\",\n      contentWidth: \"98%\",\n      modals: false,\n      val: \"\",\n      formatImg: [\"jpg\", \"jpeg\", \"png\", \"bmp\", \"gif\"],\n      formatVoice: [\"mp3\", \"wma\", \"wav\", \"amr\"],\n      header: {},\n      formValidate: {\n        status: 1,\n        type: \"\",\n        // key: this.$route.params.key || \"\",\n        key: \"\",\n        data: {\n          content: \"\",\n          src: \"\",\n          list: []\n        },\n        id: 0\n      },\n      fileUrl: Setting.apiBaseURL + \"/file/upload/1\",\n      ruleValidate: {\n        val: [{\n          required: true,\n          validator: validateVal,\n          trigger: \"change\"\n        }],\n        type: [{\n          required: true,\n          message: \"请选择消息类型\",\n          trigger: \"change\"\n        }],\n        content: [{\n          required: true,\n          validator: validateContent,\n          trigger: \"blur\"\n        }],\n        src: [{\n          required: true,\n          validator: validateSrc,\n          trigger: \"change\"\n        }]\n      },\n      labelarr: []\n    };\n  },\n  watch: {\n    $route: function $route(to, from) {\n      if (this.$route.params.key || this.$route.params.id !== \"0\") {\n        this.formValidate.key = this.$route.params.key;\n        this.details();\n      } else {\n        this.labelarr = [];\n        this.$refs[\"formValidate\"].resetFields();\n      }\n    },\n    activeName: {\n      handler: function handler(value) {\n        var _this2 = this;\n\n        switch (value) {\n          case '1':\n            this.formValidate.key = 'subscribe';\n            this.details();\n            break;\n\n          case '3':\n            this.formValidate.key = 'default';\n            this.details();\n            break;\n\n          default:\n            if (this.keywordSave === '0') {\n              this.labelarr = [];\n              this.$nextTick(function () {\n                _this2.$refs[\"formValidate\"].resetFields();\n              });\n            } else {\n              this.formValidate.key = this.keywordSave;\n              this.details();\n            }\n\n            break;\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    imgUrl: function imgUrl() {\n      var search = \"/adminapi/\";\n      var start = Setting.apiBaseURL.indexOf(search);\n      return Setting.apiBaseURL.substring(0, start); // 截取字符串\n    }\n  },\n  mounted: function mounted() {\n    this.getToken(); // if (\n    //   this.$route.params.key ||\n    //   (this.$route.params.id && this.$route.params.id !== \"0\")\n    // ) {\n    //   this.details();\n    // }\n  },\n  methods: _objectSpread({}, mapActions(\"admin/page\", [\"close\"]), {\n    // 返回\n    goBack: function goBack() {\n      this.$emit('follow-action');\n    },\n    getCentList: function getCentList(val) {\n      this.formValidate.data.list = val.new;\n      this.modals = false;\n    },\n    addlabel: function addlabel() {\n      if (!this.val) {\n        return;\n      }\n\n      var count = this.labelarr.indexOf(this.val);\n\n      if (count === -1) {\n        this.labelarr.push(this.val);\n      }\n\n      this.val = \"\";\n    },\n    handleClose: function handleClose(event, name) {\n      var index = this.labelarr.indexOf(name);\n      this.labelarr.splice(index, 1);\n    },\n    // 详情\n    details: function details() {\n      var _this3 = this;\n\n      var url = \"\";\n      var data = {}; //   if (this.$route.params.id) {\n      //     url = \"app/wechat/keyword/\" + this.$route.params.id;\n      //     data = {};\n      //   } else {\n      //     url = \"app/wechat/reply\";\n      //     data = {\n      //       key: {\n      //         key: this.formValidate.key,\n      //       },\n      //     };\n      //   }\n\n      if (this.keywordSave) {\n        url = \"app/wechat/keyword/\" + this.keywordSave;\n        data = {};\n      } else {\n        url = \"app/wechat/reply\";\n        data = {\n          key: {\n            key: this.formValidate.key\n          }\n        };\n      }\n\n      keywordsinfoApi(url, data).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          var info, data;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  info = res.data.info || {}, data = info.data || {};\n                  _this3.formValidate = {\n                    status: info.status,\n                    type: info.type,\n                    key: info.key,\n                    data: {\n                      content: data.content,\n                      src: data.src,\n                      list: data.list\n                    },\n                    id: info.id\n                  }; //   if (this.$route.params.id) {\n                  //     this.labelarr = this.formValidate.key.split(\",\") || [];\n                  //   }\n\n                  if (_this3.keywordSave) {\n                    _this3.labelarr = _this3.formValidate.key.split(\",\") || [];\n                  }\n\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this3.$Message.error(res.msg);\n      });\n    },\n    // 选择图文\n    changePic: function changePic() {\n      this.modals = true;\n    },\n    // 下拉选择\n    RuleFactor: function RuleFactor(type) {\n      switch (type) {\n        case \"text\":\n          this.formValidate.data.src = \"\";\n          this.formValidate.data.list = [];\n          break;\n\n        case \"news\":\n          this.formValidate.data.src = \"\";\n          this.formValidate.data.content = \"\";\n          break;\n\n        default:\n          this.formValidate.data.list = [];\n          this.formValidate.data.content = \"\";\n          this.formValidate.data.src = \"\";\n      } // this.$refs['formValidate'].resetFields();\n\n    },\n    // 上传头部token\n    getToken: function getToken() {\n      this.header[\"Authori-zation\"] = \"Bearer \" + util.cookies.get(\"token\");\n    },\n    // 上传成功\n    handleSuccess: function handleSuccess(res, file) {\n      if (res.status === 200) {\n        this.formValidate.data.src = res.data.src;\n        this.$Message.success(res.msg);\n      } else {\n        this.$Message.error(res.msg);\n      }\n    },\n    handleFormatError: function handleFormatError(file) {\n      if (this.formValidate.type === \"image\") {\n        this.$Message.warning(\"请上传bmp/png/jpeg/jpg/gif格式的图片\");\n      } else {\n        this.$Message.warning(\"请上传mp3/wma/wav/amr格式的语音\");\n      }\n    },\n    handleMaxSize: function handleMaxSize(file) {\n      this.$Message.warning(\"请上传文件2M以内的文件\");\n    },\n    // 保存\n    submenus: function submenus(name) {\n      var _this4 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          var data = {}; //   if (this.$route.params.id) {\n          //     this.formValidate.key = this.labelarr.join(\",\");\n          //     data = {\n          //       url: \"app/wechat/keyword/\" + this.$route.params.id,\n          //       key: this.formValidate,\n          //     };\n          //   } else {\n          //     data = {\n          //       url: \"app/wechat/keyword/\" + this.formValidate.id,\n          //       key: this.formValidate,\n          //     };\n          //   }\n\n          if (_this4.keywordSave) {\n            _this4.formValidate.key = _this4.labelarr.join(\",\");\n            data = {\n              url: \"app/wechat/keyword/\" + _this4.keywordSave,\n              key: _this4.formValidate\n            };\n          } else {\n            data = {\n              url: \"app/wechat/keyword/\" + _this4.formValidate.id,\n              key: _this4.formValidate\n            };\n          }\n\n          replyApi(data).then(\n          /*#__PURE__*/\n          function () {\n            var _ref2 = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee2(res) {\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _this4.operation();\n\n                      _this4.$Message.success(res.msg);\n\n                    case 2:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            }));\n\n            return function (_x2) {\n              return _ref2.apply(this, arguments);\n            };\n          }()).catch(function (res) {\n            _this4.$Message.error(res.msg);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 保存成功操作\n    operation: function operation() {\n      var _this5 = this;\n\n      //   if (this.$route.params.id && this.$route.params.id === \"0\") {\n      //     this.$Modal.confirm({\n      //       title: \"提示\",\n      //       content: \"<p>是否继续添加？</p>\",\n      //       okText: \"是\",\n      //       cancelText: \"否\",\n      //       loading: true,\n      //       onOk: () => {\n      //         setTimeout(() => {\n      //           this.$Modal.remove();\n      //           this.labelarr = [];\n      //           this.val = \"\";\n      //           this.$refs[\"formValidate\"].resetFields();\n      //         }, 1000);\n      //       },\n      //       onCancel: () => {\n      //         setTimeout(() => {\n      //           this.$Modal.remove();\n      //           this.$router.push({ path: \"/admin/app/wechat/reply/keyword\" });\n      //         }, 500);\n      //       },\n      //     });\n      //   } else if (this.$route.params.id && this.$route.params.id !== \"0\") {\n      //     this.$Modal.remove();\n      //     this.$router.push({ path: \"/admin/app/wechat/reply/keyword\" });\n      //   }\n      if (this.keywordSave && this.keywordSave === '0') {\n        this.$Modal.confirm({\n          title: \"提示\",\n          content: \"<p>是否继续添加？</p>\",\n          okText: \"是\",\n          cancelText: \"否\",\n          loading: true,\n          onOk: function onOk() {\n            setTimeout(function () {\n              _this5.$Modal.remove();\n\n              _this5.labelarr = [];\n              _this5.val = \"\";\n\n              _this5.$refs[\"formValidate\"].resetFields();\n            }, 1000);\n          },\n          onCancel: function onCancel() {\n            setTimeout(function () {\n              _this5.$Modal.remove();\n\n              _this5.goBack();\n            }, 500);\n          }\n        });\n      } else if (this.keywordSave && this.keywordSave !== '0') {\n        this.$Modal.remove();\n        this.goBack();\n      }\n    }\n  })\n};",null]}