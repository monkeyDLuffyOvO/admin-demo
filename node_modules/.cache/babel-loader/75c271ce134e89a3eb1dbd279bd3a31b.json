{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/eslint-loader/index.js??ref--13-0!/home/darkcrossunicorn/文档/admin/src/store/modules/admin/modules/menu.js","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/store/modules/admin/modules/menu.js","mtime":1664694382327},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// +----------------------------------------------------------------------\n// | HIGOSHOP [ HIGOSHOP助力中小企业数字化转型 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2020~2022 https://www.higoshop.net All rights reserved.\n// +----------------------------------------------------------------------\n// | Licensed HIGOSHOP并不是自由软件，未经许可不能去掉HIGOSHOP相关版权\n// +----------------------------------------------------------------------\n// | Author: HIGOSHOP Team <higoshop@126.com>\n// +----------------------------------------------------------------------\n\n/**\n * 菜单\n * */\nimport { cloneDeep } from 'lodash';\nimport { includeArray } from '@/libs/system'; // 根据 menu 配置的权限，过滤菜单\n\nfunction filterMenu(menuList, access, lastList) {\n  menuList.forEach(function (menu) {\n    var menuAccess = menu.auth;\n\n    if (!menuAccess || includeArray(menuAccess, access)) {\n      var newMenu = {};\n\n      for (var i in menu) {\n        if (i !== 'children') newMenu[i] = cloneDeep(menu[i]);\n      }\n\n      if (menu.children && menu.children.length) newMenu.children = [];\n      lastList.push(newMenu);\n      menu.children && filterMenu(menu.children, access, newMenu.children);\n    }\n  });\n  return lastList;\n} // 递归处理顶部菜单问题\n\n\nfunction getChilden(data) {\n  if (data.children) {\n    return getChilden(data.children[0]);\n  }\n\n  return data.path;\n}\n\nexport default {\n  namespaced: true,\n  state: {\n    // 顶部菜单\n    header: [],\n    // 侧栏菜单\n    sider: [],\n    // 当前顶栏菜单的 name\n    headerName: '',\n    // 当前所在菜单的 path\n    activePath: '',\n    // 展开的子菜单 name 集合\n    openNames: []\n  },\n  getters: {\n    /**\n     * @description 根据 user 里登录用户权限，对侧边菜单进行鉴权过滤\n     * */\n    filterSider: function filterSider(state, getters, rootState) {\n      var userInfo = rootState.admin.user.info; // @权限\n\n      var access = userInfo.access;\n\n      if (access && access.length) {\n        return filterMenu(state.sider, access, []);\n      } else {\n        return filterMenu(state.sider, [], []);\n      }\n    },\n    // 处理顶部路由递归\n\n    /**\n     * @description 根据 user 里登录用户权限，对顶栏菜单进行鉴权过滤\n     * */\n    filterHeader: function filterHeader(state, getters, rootState) {\n      //  调用递归函数\n      state.header.forEach(function (item) {\n        item.path = getChilden(item);\n      }); // @权限\n\n      var userInfo = rootState.admin.user.info;\n      var access = userInfo.access;\n\n      if (access && access.length) {\n        return state.header.filter(function (item) {\n          var state = true;\n          if (item.auth && !includeArray(item.auth, access)) state = false;\n          return state;\n        });\n      } else {\n        return state.header.filter(function (item) {\n          var state = true;\n          if (item.auth && item.auth.length) state = false;\n          return state;\n        });\n      }\n    },\n\n    /**\n     * @description 当前 header 的全部信息\n     * */\n    currentHeader: function currentHeader(state) {\n      return state.header.find(function (item) {\n        return item.name === state.headerName;\n      });\n    },\n\n    /**\n     * @description 在当前 header 下，是否隐藏 sider（及折叠按钮）\n     * */\n    hideSider: function hideSider(state, getters) {\n      var visible = false;\n      if (getters.currentHeader && 'hideSider' in getters.currentHeader) visible = getters.currentHeader.hideSider;\n      return visible;\n    }\n  },\n  mutations: {\n    /**\n     * @description 设置侧边栏菜单\n     * @param {Object} state vuex state\n     * @param {Array} menu menu\n     */\n    setSider: function setSider(state, menu) {\n      state.sider = menu;\n    },\n\n    /**\n     * @description 设置顶栏菜单\n     * @param {Object} state vuex state\n     * @param {Array} menu menu\n     */\n    setHeader: function setHeader(state, menu) {\n      state.header = menu;\n    },\n\n    /**\n     * @description 设置当前顶栏菜单 name\n     * @param {Object} state vuex state\n     * @param {Array} name headerName\n     */\n    setHeaderName: function setHeaderName(state, name) {\n      state.headerName = name;\n    },\n\n    /**\n     * @description 设置当前所在菜单的 path，用于侧栏菜单高亮当前项\n     * @param {Object} state vuex state\n     * @param {Array} path fullPath\n     */\n    setActivePath: function setActivePath(state, path) {\n      state.activePath = path;\n    },\n\n    /**\n     * @description 设置当前所在菜单的全部展开父菜单的 names 集合\n     * @param {Object} state vuex state\n     * @param {Array} names openNames\n     */\n    setOpenNames: function setOpenNames(state, names) {\n      state.openNames = names;\n    }\n  }\n};",null]}