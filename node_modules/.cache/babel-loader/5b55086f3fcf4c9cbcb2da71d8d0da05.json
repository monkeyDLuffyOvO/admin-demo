{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/app/wechat/menus/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/app/wechat/menus/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { wechatMenuApi, MenuApi } from '@/api/app';\nexport default {\n  name: 'wechatMenus',\n  data: function data() {\n    return {\n      modal2: false,\n      formValidate: {\n        name: '',\n        type: 'click',\n        appid: '',\n        url: '',\n        key: '',\n        pagepath: '',\n        id: 0\n      },\n      ruleValidate: {\n        name: [{\n          required: true,\n          message: '请填写菜单名称',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 8,\n          message: '长度在 1 到 8 个字符',\n          trigger: 'blur'\n        }],\n        key: [{\n          required: true,\n          message: '请填写关键字',\n          trigger: 'blur'\n        }],\n        appid: [{\n          required: true,\n          message: '请填写appid',\n          trigger: 'blur'\n        }],\n        pagepath: [{\n          required: true,\n          message: '请填写小程序跳转路径',\n          trigger: 'blur'\n        }],\n        url: [{\n          required: true,\n          message: '请填写小程序跳转路径',\n          trigger: 'blur'\n        }],\n        type: [{\n          required: true,\n          message: '请选择规则状态',\n          trigger: 'change'\n        }]\n      },\n      parentMenuId: null,\n      list: [],\n      checkedMenuId: null,\n      isTrue: false\n    };\n  },\n  mounted: function mounted() {\n    this.getMenus();\n\n    if (this.list.length) {\n      this.formValidate = this.list[this.activeClass];\n    } else {\n      return this.formValidate;\n    }\n  },\n  methods: {\n    // 添加一级字段函数\n    defaultMenusData: function defaultMenusData() {\n      return {\n        type: 'click',\n        name: '',\n        sub_button: []\n      };\n    },\n    // 添加二级字段函数\n    defaultChildData: function defaultChildData() {\n      return {\n        type: 'click',\n        name: ''\n      };\n    },\n    // 获取 菜单\n    getMenus: function getMenus() {\n      var _this = this;\n\n      wechatMenuApi().then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  data = res.data;\n                  _this.list = data.menus;\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this.$Message.error(res.msg);\n      });\n    },\n    // 点击保存提交\n    submenus: function submenus(name) {\n      var _this2 = this;\n\n      if (this.isTrue && !this.checkedMenuId && this.checkedMenuId !== 0) {\n        this.putData();\n      } else {\n        this.$refs[name].validate(function (valid) {\n          if (valid) {\n            _this2.putData();\n          } else {\n            if (!_this2.check()) return false;\n          }\n        });\n      }\n    },\n    // 新增data\n    putData: function putData() {\n      var _this3 = this;\n\n      var data = {\n        button: this.list\n      };\n      MenuApi(data).then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(res) {\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _this3.$Message.success(res.msg);\n\n                  _this3.checkedMenuId = null;\n                  _this3.formValidate = {};\n                  _this3.isTrue = false;\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this3.$Message.error(res.msg);\n      });\n    },\n    // 点击元素\n    gettem: function gettem(item, index, pid) {\n      this.checkedMenuId = index;\n      this.formValidate = item;\n      this.parentMenuId = pid;\n      this.isTrue = true;\n    },\n    // 增加二级\n    add: function add(item, index) {\n      if (!this.check()) return false;\n\n      if (item.sub_button.length < 5) {\n        var data = this.defaultChildData();\n        var id = item.sub_button.length;\n        item.sub_button.push(data);\n        this.formValidate = data;\n        this.checkedMenuId = id;\n        this.parentMenuId = index;\n        this.isTrue = true;\n      }\n    },\n    // 增加一级\n    addtext: function addtext() {\n      if (!this.check()) return false;\n      var data = this.defaultMenusData();\n      var id = this.list.length;\n      this.list.push(data);\n      this.formValidate = data;\n      this.checkedMenuId = id;\n      this.parentMenuId = null;\n      this.isTrue = true;\n    },\n    // 判断函数\n    check: function check() {\n      var reg = /[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+\\.?/;\n      if (this.checkedMenuId === null) return true;\n      if (!this.isTrue) return true;\n\n      if (!this.formValidate.name) {\n        this.$Message.warning('请输入按钮名称!');\n        return false;\n      }\n\n      if (this.formValidate.type === 'click' && !this.formValidate.key) {\n        this.$Message.warning('请输入关键字!');\n        return false;\n      }\n\n      if (this.formValidate.type === 'view' && !reg.test(this.formValidate.url)) {\n        this.$Message.warning('请输入正确的跳转地址!');\n        return false;\n      }\n\n      if (this.formValidate.type === 'miniprogram' && (!this.formValidate.appid || !this.formValidate.pagepath || !this.formValidate.url)) {\n        this.$Message.warning('请填写完整小程序配置!');\n        return false;\n      }\n\n      return true;\n    },\n    // 删除\n    deltMenus: function deltMenus() {\n      if (this.isTrue) {\n        this.modal2 = true;\n      } else {\n        this.$Message.warning('请选择菜单!');\n      }\n    },\n    // 确认删除\n    del: function del() {\n      this.parentMenuId === null ? this.list.splice(this.checkedMenuId, 1) : this.list[this.parentMenuId].sub_button.splice(this.checkedMenuId, 1);\n      this.parentMenuId = null;\n      this.formValidate = {\n        name: '',\n        type: 'click',\n        appid: '',\n        url: '',\n        key: '',\n        pagepath: '',\n        id: 0\n      };\n      this.isTrue = true;\n      this.modal2 = false;\n      this.checkedMenuId = null;\n      this.$refs['formValidate'].resetFields();\n    }\n  }\n};",null]}