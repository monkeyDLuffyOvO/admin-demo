{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/components/fromBuild/uploadImageBuild.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/components/fromBuild/uploadImageBuild.vue","mtime":1652232731000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport build from \"./build\";\nimport Setting from '@/setting';\nimport lookImage from \"./lookImage\";\nexport default {\n  name: \"uploadImageBuild\",\n  mixins: [build],\n  components: {\n    lookImage: lookImage\n  },\n  props: {\n    //上传配置\n    upload: {\n      type: Object,\n      default: function _default() {\n        return {\n          url: '',\n          size: 2048,\n          format: ['jpg', 'jpeg', 'png', 'gif'],\n          headers: {},\n          maxNum: 1\n        };\n      }\n    },\n    icon: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      uploadList: [],\n      valueModel: this.value,\n      disabledSeleteImage: false,\n      errorMessage: '',\n      imageUrl: '',\n      multiple: false\n    };\n  },\n  watch: {\n    valueModel: {\n      handler: function handler(n) {\n        if (this.multiple) {\n          if (n.length >= this.upload.maxNum) {\n            this.disabledSeleteImage = false;\n          } else {\n            this.disabledSeleteImage = true;\n          }\n        } else {\n          this.disabledSeleteImage = !!!n;\n        }\n\n        this.changeValue();\n      },\n      deep: true\n    }\n  },\n  created: function created() {\n    this.multiple = this.upload.maxNum > 1;\n\n    if (this.multiple) {\n      if (_typeof(this.valueModel) !== 'object') {\n        this.valueModel = [];\n      }\n    } else {\n      if (typeof this.valueModel !== 'string') {\n        this.valueModel = '';\n      }\n    }\n\n    if (this.upload.url.indexOf('http') === -1 || this.upload.url.indexOf('https') === -1) {\n      this.upload.url = Setting.apiBaseURL + this.upload.url;\n    }\n\n    if (['image', 'file'].indexOf(this.type) === -1) {\n      this.type = 'image';\n    }\n\n    if (_typeof(this.valueModel) === 'object' && !this.valueModel.length) {\n      this.disabledSeleteImage = true;\n    }\n\n    if (typeof this.valueModel === 'string' && !this.valueModel) {\n      this.disabledSeleteImage = true;\n    }\n  },\n  mounted: function mounted() {},\n  methods: {\n    changeValue: function changeValue() {\n      this.$emit('changeValue', {\n        field: this.field,\n        value: this.valueModel\n      }); //触发change事件\n\n      this.on['change'] && this.on['change'](this.valueModel);\n    },\n    handleSuccess: function handleSuccess(response, file, fileList) {\n      var _this = this;\n\n      if (this.on['success']) {\n        this.on['success'](response, function (res) {\n          return _this.valueModel = res;\n        });\n        return;\n      }\n\n      if (response.status !== 200) {\n        this.$Message.error(response.msg);\n      } else {\n        this.valueModel = response.data.src;\n        this.$Message.success(response.msg);\n      }\n    },\n    handleFormatError: function handleFormatError() {},\n    //上传进度\n    handProgress: function handProgress(event, file, fileList) {},\n    handleMaxSize: function handleMaxSize() {},\n    handleBeforeUpload: function handleBeforeUpload() {},\n    handleView: function handleView(url) {\n      this.imageUrl = url;\n      this.$refs.lookImage.open();\n    },\n    handleRemove: function handleRemove(item, index) {\n      if (!this.multiple) {\n        this.valueModel = '';\n      } else {\n        this.valueModel.splice(index, 1);\n      }\n    }\n  }\n};",null]}