{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/notify/smsConfig/components/register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/notify/smsConfig/components/register.vue","mtime":1648430075000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vcode from \"vue-puzzle-vcode\";\nimport { captchaApi, registerApi } from '@/api/setting';\nexport default {\n  name: 'register',\n  data: function data() {\n    var validatePhone = function validatePhone(rule, value, callback) {\n      if (!value) {\n        return callback(new Error('请填写手机号'));\n      } else if (!/^1[3456789]\\d{9}$/.test(value)) {\n        callback(new Error('手机号格式不正确!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      cutNUm: '获取验证码',\n      canClick: true,\n      formInline: {\n        url: '',\n        password: '',\n        verify_code: '',\n        phone: ''\n      },\n      ruleInline: {\n        account: [{\n          required: true,\n          message: '请输入短信平台账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入短信平台密码/token',\n          trigger: 'blur'\n        }],\n        url: [{\n          required: true,\n          message: '请输入网址域名',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          validator: validatePhone,\n          trigger: 'blur'\n        }],\n        sign: [{\n          required: true,\n          message: '请输入短信签名',\n          trigger: 'blur'\n        }],\n        verify_code: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }]\n      },\n      isShow: false // 验证码模态框是否出现\n\n    };\n  },\n  components: {\n    Vcode: Vcode\n  },\n  methods: {\n    // 短信验证码\n    cutDown: function cutDown() {\n      if (this.formInline.phone) {\n        this.isShow = true;\n      } else {\n        this.$Message.warning('请填写手机号!');\n      }\n    },\n    // 注册\n    handleSubmit: function handleSubmit(name) {\n      var _this = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          registerApi(_this.formInline).then(\n          /*#__PURE__*/\n          function () {\n            var _ref = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee(res) {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _this.$Message.success(res.msg);\n\n                      setTimeout(function () {\n                        _this.changelogo();\n                      }, 1000);\n\n                    case 2:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            return function (_x) {\n              return _ref.apply(this, arguments);\n            };\n          }()).catch(function (res) {\n            _this.$Message.error(res.msg);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 立即登录\n    changelogo: function changelogo() {\n      this.$emit('on-change');\n    },\n    onSuccess: function onSuccess() {\n      var _this2 = this;\n\n      this.isShow = false; // 通过验证后，需要手动隐藏模态框\n\n      if (!this.canClick) return;\n      this.canClick = false;\n      this.cutNUm = 60;\n      var data = {\n        phone: this.formInline.phone\n      };\n      captchaApi(data).then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(res) {\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _this2.$Message.success(res.msg);\n\n                case 1:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this2.$Message.error(res.msg);\n      });\n      var time = setInterval(function () {\n        _this2.cutNUm--;\n\n        if (_this2.cutNUm === 0) {\n          _this2.cutNUm = '获取验证码';\n          _this2.canClick = true;\n          clearInterval(time);\n        }\n      }, 1000);\n    },\n    // 用户点击遮罩层，应该关闭模态框\n    onClose: function onClose() {\n      this.isShow = false;\n    }\n  }\n};",null]}