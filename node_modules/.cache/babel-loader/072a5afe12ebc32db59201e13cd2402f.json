{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/marketing/lottery/create.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/marketing/lottery/create.vue","mtime":1658975056000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapMutations, mapState } from \"vuex\";\nimport goodsList from \"@/components/goodsList/index\";\nimport uploadPictures from \"@/components/uploadPictures\";\nimport userLabel from \"@/components/labelList\";\nimport addGoods from \"./addGoods\";\nimport { lotteryDetailApi, lotteryCreateApi, lotteryEditApi, lotteryFactorInfo } from \"@/api/lottery\"; //详情 创建 编辑\n\nimport { lotteryFrom } from \"./formRule/lotteryFrom\";\nimport { labelListApi as _labelListApi } from \"@/api/product\";\nimport { levelListApi as _levelListApi } from \"@/api/user\";\nimport WangEditor from \"@/components/wangEditor/index.vue\";\nimport { formatDate as _formatDate } from \"@/utils/validate\";\nimport { formatRichText } from \"@/utils/editorImg\";\nexport default {\n  name: \"lotteryCreate\",\n  components: {\n    goodsList: goodsList,\n    uploadPictures: uploadPictures,\n    WangEditor: WangEditor,\n    addGoods: addGoods,\n    userLabel: userLabel\n  },\n  data: function data() {\n    return {\n      dataLabel: [],\n      labelShow: false,\n      headTab: [{\n        name: \"积分抽取\",\n        type: \"1\"\n      }, {\n        name: \"订单支付\",\n        type: \"3\"\n      }, {\n        name: \"订单评价\",\n        type: \"4\"\n      }, {\n        name: \"关注公众号\",\n        type: \"5\"\n      }],\n      title: \"添加商品\",\n      loading: false,\n      userLabelList: [],\n      //用户标签列表\n      userLevelListApi: [],\n      //用户等级列表\n      submitOpen: false,\n      spinShow: false,\n      addGoodsModel: false,\n      editData: {},\n      myConfig: {\n        autoHeightEnabled: false,\n        // 编辑器不自动被内容撑高\n        initialFrameHeight: 500,\n        // 初始容器高度\n        initialFrameWidth: \"100%\",\n        // 初始容器宽度\n        UEDITOR_HOME_URL: \"/admin/UEditor/\",\n        serverUrl: \"\"\n      },\n      isChoice: \"单选\",\n      modalPic: false,\n      modal_loading: false,\n      images: [],\n      templateList: [{\n        id: 0,\n        name: \"非付费会员\"\n      }, {\n        id: 1,\n        name: \"付费会员\"\n      }],\n      columns: [{\n        title: \"序号\",\n        type: \"index\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"图片\",\n        slot: \"image\",\n        align: \"center\",\n        minWidth: 120\n      }, {\n        title: \"名称\",\n        align: \"center\",\n        minWidth: 80,\n        key: \"name\"\n      }, {\n        title: \"奖品\",\n        slot: \"type\",\n        align: \"center\",\n        minWidth: 80\n      }, {\n        title: \"提示语\",\n        key: \"prompt\",\n        align: \"center\",\n        minWidth: 80\n      }, {\n        title: \"数量\",\n        slot: \"total\",\n        align: \"center\",\n        minWidth: 80\n      }, {\n        title: \"奖品权重\",\n        slot: \"chance\",\n        align: \"center\",\n        minWidth: 80\n      }, {\n        title: \"奖品概率\",\n        key: \"probability\",\n        align: \"center\",\n        minWidth: 80\n      }, {\n        title: \"操作\",\n        slot: \"setting\",\n        align: \"center\",\n        minWidth: 80\n      }],\n      specsData: [],\n      formValidate: {\n        images: [],\n        name: \"\",\n        //活动名称\n        desc: \"\",\n        //活动描述\n        image: \"\",\n        //活动背景图\n        factor: \"1\",\n        //抽奖类型：1:积分 2:余额 3：下单支付成功 4:订单评价',5:关注\n        factor_num: 1,\n        //获取一次抽奖的条件数量\n        attends_user: 1,\n        //参与用户1：所有  2：部分\n        user_level: 0,\n        //参与用户等级\n        user_label: [],\n        //参与用户标签\n        is_svip: \"-1\",\n        //参与用户是否付费会员\n        prize_num: 0,\n        //奖品数量\n        period: [],\n        //活动时间\n        prize: [],\n        //奖品数组\n        lottery_num_term: 1,\n        //抽奖次数限制：1：每天2：每人\n        lottery_num: 1,\n        //抽奖次数\n        spread_num: 1,\n        //关注推广获取抽奖次数\n        is_all_record: 0,\n        //中奖纪录展示\n        is_personal_record: 0,\n        //个人中奖纪录展示\n        is_content: 0,\n        //活动规格是否展示\n        content: \"\",\n        //富文本内容\n        status: 0 //状态\n\n      },\n      ruleValidate: lotteryFrom,\n      currentid: \"\",\n      picTit: \"\",\n      tableIndex: 0,\n      copy: 0,\n      editIndex: null,\n      id: \"\",\n      isData: 0,\n      content: \"\"\n    };\n  },\n  filters: {\n    typeName: function typeName(type) {\n      if (type == 1) {\n        return \"未中奖\";\n      } else if (type == 2) {\n        return \"积分\";\n      } else if (type == 3) {\n        return \"余额\";\n      } else if (type == 4) {\n        return \"红包\";\n      } else if (type == 5) {\n        return \"优惠券\";\n      } else if (type == 6) {\n        return \"商品\";\n      }\n    }\n  },\n  computed: _objectSpread({}, mapState(\"admin/layout\", [\"isMobile\", \"menuCollapse\"]), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 135;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    }\n  }),\n  mounted: function mounted() {\n    // if (this.$route.query.id) {\n    //   this.id = this.$route.query.id;\n    //   this.copy = this.$route.query.copy || 0;\n    // }\n    this.prizeList();\n    this.getInfo();\n    this.labelListApi();\n    this.levelListApi();\n    this.setCopyrightShow({\n      value: false\n    });\n  },\n  destroyed: function destroyed() {\n    this.setCopyrightShow({\n      value: true\n    });\n  },\n  methods: _objectSpread({}, mapMutations(\"admin/layout\", [\"setCopyrightShow\"]), {\n    prizeList: function prizeList() {\n      var list = [];\n      var data = {\n        type: 1,\n        //类型 1：未中奖2：积分  3:余额  4：红包 5:优惠券 6：站内商品\n        name: \"\",\n        //活动名称\n        num: 0,\n        //奖品数量\n        image: \"\",\n        //奖品图片\n        chance: 1,\n        //中奖权重\n        total: 0,\n        //奖品数量\n        prompt: \"\" //提示语\n\n      };\n\n      for (var i = 0; i < 8; i++) {\n        list.push(data);\n      }\n\n      this.specsData = JSON.parse(JSON.stringify(list));\n    },\n    getEditorContent: function getEditorContent(data) {\n      this.content = data;\n    },\n    closeLabel: function closeLabel(label) {\n      var index = this.dataLabel.indexOf(this.dataLabel.filter(function (d) {\n        return d.id == label.id;\n      })[0]);\n      this.dataLabel.splice(index, 1);\n    },\n    activeData: function activeData(dataLabel) {\n      this.labelShow = false;\n      this.dataLabel = dataLabel;\n    },\n    openLabel: function openLabel(row) {\n      this.labelShow = true;\n      this.$refs.userLabel.userLabel(JSON.parse(JSON.stringify(this.dataLabel)));\n    },\n    // 标签弹窗关闭\n    labelClose: function labelClose() {\n      this.labelShow = false;\n    },\n    //用户标签列表\n    labelListApi: function labelListApi() {\n      var _this = this;\n\n      _labelListApi().then(function (res) {\n        _this.userLabelList = res.data.list;\n      });\n    },\n    //用户等级列表\n    levelListApi: function levelListApi() {\n      var _this2 = this;\n\n      _levelListApi().then(function (res) {\n        _this2.userLevelListApi = res.data.list;\n      });\n    },\n    // 具体日期\n    onchangeTime: function onchangeTime(e) {\n      var _this3 = this;\n\n      this.$nextTick(function () {\n        _this3.$set(_this3.formValidate, \"period\", e);\n      });\n    },\n    lotteryType: function lotteryType() {\n      this.getInfo();\n    },\n    // 详情\n    getInfo: function getInfo() {\n      var _this4 = this;\n\n      this.spinShow = true;\n      lotteryFactorInfo(this.formValidate.factor).then(function (res) {\n        var factor = _this4.formValidate.factor;\n        _this4.spinShow = false;\n        _this4.isData = res.data.id || 0;\n\n        if (!_this4.isData) {\n          _this4.prizeList();\n\n          _this4.formValidate = {\n            factor: factor,\n            images: [],\n            name: \"\",\n            //活动名称\n            desc: \"\",\n            //活动描述\n            image: \"\",\n            //活动背景图\n            factor_num: 1,\n            //获取一次抽奖的条件数量\n            attends_user: 1,\n            //参与用户1：所有  2：部分\n            user_level: 0,\n            //参与用户等级\n            user_label: [],\n            //参与用户标签\n            is_svip: \"-1\",\n            //参与用户是否付费会员\n            prize_num: 0,\n            //奖品数量\n            period: [],\n            //活动时间\n            prize: [],\n            //奖品数组\n            lottery_num_term: 1,\n            //抽奖次数限制：1：每天2：每人\n            lottery_num: 1,\n            //抽奖次数\n            spread_num: 1,\n            //关注推广获取抽奖次数\n            is_all_record: 0,\n            //中奖纪录展示\n            is_personal_record: 0,\n            //个人中奖纪录展示\n            is_content: 0,\n            //活动规格是否展示\n            content: \"\",\n            //富文本内容\n            status: 0 //状态\n\n          };\n          return;\n        }\n\n        _this4.formValidate = res.data;\n        _this4.formValidate.factor = res.data.factor.toString();\n        _this4.formValidate.user_level = res.data.user_level || [];\n        _this4.formValidate.user_label = res.data.user_label || [];\n        _this4.dataLabel = res.data.user_label || [];\n        _this4.formValidate.is_svip = res.data.is_svip;\n        _this4.content = res.data.is_content ? res.data.content : \"\";\n        _this4.formValidate.period = [_this4.formatDate(res.data.start_time) || \"\", _this4.formatDate(res.data.end_time) || \"\"];\n        _this4.specsData = res.data.prize;\n\n        _this4.getProbability();\n      });\n    },\n    // 下一步\n    next: function next(name) {\n      var _this5 = this;\n\n      this.formValidate.prize = this.specsData;\n\n      if (this.formValidate.is_content) {\n        this.formValidate.content = formatRichText(this.content);\n      }\n\n      if (this.submitOpen) return false;\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          if (_this5.formValidate.period[0] == \"\") {\n            return _this5.$Message.error(\"请选择日期\");\n          }\n\n          _this5.submitOpen = true; // 用户标签\n\n          var activeIds = [];\n\n          _this5.dataLabel.forEach(function (item) {\n            activeIds.push(item.id);\n          });\n\n          _this5.formValidate.user_label = activeIds;\n\n          if (_this5.isData) {\n            lotteryEditApi(_this5.isData, _this5.formValidate).then(\n            /*#__PURE__*/\n            function () {\n              var _ref = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee(res) {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _this5.$Message.success(res.msg);\n\n                        setTimeout(function () {\n                          _this5.submitOpen = false; // this.$router.push({\n                          //   path: \"/admin/marketing/lottery/index\",\n                          // });\n                        }, 500);\n\n                      case 2:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x) {\n                return _ref.apply(this, arguments);\n              };\n            }()).catch(function (res) {\n              _this5.submitOpen = false;\n\n              _this5.$Message.error(res.msg);\n            });\n          } else {\n            lotteryCreateApi(_this5.formValidate).then(\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee2(res) {\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _this5.$Message.success(res.msg);\n\n                        setTimeout(function () {\n                          _this5.submitOpen = false; // this.$router.push({\n                          //   path: \"/admin/marketing/lottery/index\",\n                          // });\n                        }, 500);\n\n                      case 2:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }()).catch(function (res) {\n              _this5.submitOpen = false;\n\n              _this5.$Message.error(res.msg);\n            });\n          }\n        } else {\n          return _this5.$Message.error(\"请完善信息\");\n        }\n      });\n    },\n    // 上一步\n    step: function step() {\n      this.current--;\n    },\n    // 内容\n    getContent: function getContent(val) {\n      this.formValidate.content = val;\n    },\n    // 规则\n    getRole: function getRole(val) {\n      this.formValidate.rule = val;\n    },\n    // 点击商品图\n    modalPicTap: function modalPicTap(tit, picTit, index) {\n      this.modalPic = true;\n      this.isChoice = tit === \"dan\" ? \"单选\" : \"多选\";\n      this.picTit = picTit || \"\";\n      this.tableIndex = index;\n    },\n    // 获取单张图片信息\n    getPic: function getPic(pc) {\n      switch (this.picTit) {\n        case \"danFrom\":\n          this.formValidate.image = pc.att_dir;\n          break;\n\n        default:\n          this.specsData[this.tableIndex].image = pc.att_dir;\n      }\n\n      this.modalPic = false;\n    },\n    handleRemove: function handleRemove() {\n      this.formValidate.image = \"\";\n    },\n    // 表单验证\n    // validate(prop, status, error) {\n    //   if (status === false) {\n    //     this.$Message.error(error);\n    //     return false;\n    //   } else {\n    //     return true;\n    //   }\n    // },\n    // 添加自定义弹窗\n    addCustomDialog: function addCustomDialog(editorId) {\n      window.UE.registerUI(\"test-dialog\", function (editor, uiName) {\n        // 创建 dialog\n        var dialog = new window.UE.ui.Dialog({\n          // 指定弹出层中页面的路径，这里只能支持页面，路径参考常见问题 2\n          iframeUrl: \"/admin/widget.images/index.html?fodder=dialog\",\n          // 需要指定当前的编辑器实例\n          editor: editor,\n          // 指定 dialog 的名字\n          name: uiName,\n          // dialog 的标题\n          title: \"上传图片\",\n          // 指定 dialog 的外围样式\n          cssRules: \"width:1200px;height:500px;padding:20px;\"\n        });\n        this.dialog = dialog;\n        var btn = new window.UE.ui.Button({\n          name: \"dialog-button\",\n          title: \"上传图片\",\n          cssRules: \"background-image: url(../../../assets/images/icons.png);background-position: -726px -77px;\",\n          onclick: function onclick() {\n            // 渲染dialog\n            dialog.render();\n            dialog.open();\n          }\n        });\n        return btn;\n      }, 37);\n    },\n    //新增商品\n    addGoods: function addGoods() {\n      this.addGoodsModel = true;\n      this.title = \"添加商品\";\n      this.editData = {};\n    },\n    //编辑商品\n    editGoods: function editGoods(index) {\n      this.addGoodsModel = true;\n      this.title = \"编辑奖品\";\n      this.editData = this.specsData[index];\n      this.editIndex = index;\n    },\n    //删除商品\n    deleteGoods: function deleteGoods(index) {\n      this.specsData.splice(index, 1);\n    },\n    //获取数组中某个字段之和\n    sumArr: function sumArr(arr, name) {\n      var arrData = [];\n\n      for (var i = 0; i < arr.length; i++) {\n        arrData.push(arr[i][name]);\n      }\n\n      return eval(arrData.join(\"+\"));\n    },\n    addGoodsData: function addGoodsData(data) {\n      this.editIndex != null ? this.$set(this.specsData, [this.editIndex], data) : this.specsData.length < 8 ? this.specsData.push(data) : this.$Message.warning(\"最多添加8个奖品\");\n      this.getProbability();\n      this.addGoodsModel = false;\n      this.editIndex = null;\n    },\n    changeChance: function changeChance(data, index) {\n      var _this6 = this;\n\n      this.$set(this.specsData[index], \"chance\", data);\n      this.$nextTick(function (e) {\n        _this6.getProbability();\n      });\n    },\n    changeTotal: function changeTotal(data, index) {\n      this.$set(this.specsData[index], \"total\", data);\n    },\n    //获取商品中奖概率\n    getProbability: function getProbability() {\n      var sum = 0;\n      sum = this.sumArr(this.specsData, \"chance\");\n\n      for (var j = 0; j < this.specsData.length; j++) {\n        this.$set(this.specsData[j], \"probability\", (this.specsData[j].chance / sum * 100).toFixed(2) + \"%\");\n      }\n    },\n    //修改排序\n    onDragDrop: function onDragDrop(a, b) {\n      var _this$specsData;\n\n      (_this$specsData = this.specsData).splice.apply(_this$specsData, [b, 1].concat(_toConsumableArray(this.specsData.splice(a, 1, this.specsData[b]))));\n    },\n    //时间格式转换\n    formatDate: function formatDate(time) {\n      if (time) {\n        var date = new Date(time * 1000);\n        return _formatDate(date, \"yyyy-MM-dd hh:mm\");\n      } else {\n        return \"\";\n      }\n    }\n  })\n};",null]}