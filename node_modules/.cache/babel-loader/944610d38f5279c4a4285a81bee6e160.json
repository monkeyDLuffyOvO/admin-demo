{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/user/list/handle/userDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/user/list/handle/userDetails.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { detailsApi, infoApi, visitList, spreadList } from '@/api/user';\nimport userForm from './userForm';\nimport userInfo from './userInfo';\nexport default {\n  name: 'userDetails',\n  components: {\n    userForm: userForm,\n    userInfo: userInfo\n  },\n  props: ['levelList', 'labelList', 'groupList', 'fromType'],\n  data: function data() {\n    return {\n      theme2: 'light',\n      list: [{\n        val: 'info',\n        label: '用户信息'\n      }, {\n        val: 'order',\n        label: '消费记录'\n      }, {\n        val: 'integral',\n        label: '积分明细'\n      }, {\n        val: 'sign',\n        label: '签到记录'\n      }, {\n        val: 'coupon',\n        label: '持有优惠券'\n      }, {\n        val: 'balance_change',\n        label: '余额变动'\n      }, {\n        val: 'spread',\n        label: '好友关系'\n      }, {\n        val: 'visit',\n        label: '浏览足迹'\n      }, {\n        val: 'spread_change',\n        label: '推荐人变更记录'\n      }],\n      modals: false,\n      spinShow: false,\n      detailsData: [],\n      userId: 0,\n      loading: false,\n      userFrom: {\n        type: 'info',\n        page: 1,\n        // 当前页\n        limit: 12 // 每页显示条数\n\n      },\n      total: 0,\n      columns: [],\n      userLists: [],\n      psInfo: {},\n      workMemberInfo: {},\n      workClientInfo: {},\n      activeName: 'info',\n      isEdit: false,\n      groupOptions: [],\n      labelOptions: []\n    };\n  },\n  watch: {\n    activeName: function activeName(value) {\n      this.userFrom.page = 1;\n      if (value == 'info') return;\n      this.isEdit = false;\n      this.changeType(value); // if (value == 'visit') {\n      //     this.changeType(value);\n      // } else if (value == 'spread_change') {\n      //    this.changeType(value);\n      // } else {\n      //     this.changeType(value);\n      // }\n    },\n    modals: function modals(value) {\n      if (value) {\n        this.isEdit = false;\n      }\n    }\n  },\n  created: function created() {},\n  methods: {\n    changeMenu: function changeMenu(value) {\n      if (value === '99') {\n        this.getDetails(this.userId);\n        this.$parent.getList();\n        this.isEdit = false;\n        return;\n      }\n\n      this.$parent.changeMenu(this.psInfo, value);\n    },\n    // 完成\n    finish: function finish() {\n      this.$refs.userForm[0].detailsPut();\n    },\n    // 推荐人变更记录\n    getSpreadList: function getSpreadList() {\n      var _this = this;\n\n      this.loading = true;\n      spreadList({\n        id: this.userId,\n        datas: {\n          page: this.userFrom.page,\n          limit: this.userFrom.limit\n        }\n      }).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (res.status === 200) {\n                    data = res.data;\n                    _this.userLists = data.list;\n                    _this.total = data.count;\n                    _this.columns = [{\n                      title: '推荐人ID',\n                      key: 'spread_uid',\n                      minWidth: 120\n                    }, {\n                      title: '推荐人',\n                      key: 'nickname',\n                      minWidth: 120,\n                      render: function render(h, params) {\n                        return h('div', [h('img', {\n                          style: {\n                            borderRadius: '50%',\n                            marginRight: '10px',\n                            verticalAlign: 'middle'\n                          },\n                          attrs: {\n                            with: 38,\n                            height: 38\n                          },\n                          directives: [{\n                            name: 'lazy',\n                            value: params.row.avatar\n                          }, {\n                            name: 'viewer'\n                          }]\n                        }), h('span', {\n                          style: {\n                            verticalAlign: 'middle'\n                          }\n                        }, params.row.nickname)]);\n                      }\n                    }, {\n                      title: '变更方式',\n                      key: 'type',\n                      minWidth: 120\n                    }, {\n                      title: '变更时间',\n                      key: 'spread_time',\n                      minWidth: 120\n                    }];\n                    _this.loading = false;\n                  } else {\n                    _this.loading = false;\n\n                    _this.$Message.error(res.msg);\n                  }\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this.loading = false;\n\n        _this.$Message.error(res.msg);\n      });\n    },\n    // 浏览足迹\n    getVisitList: function getVisitList() {\n      var _this2 = this;\n\n      this.loading = true;\n      visitList({\n        id: this.userId,\n        datas: {\n          page: this.userFrom.page,\n          limit: this.userFrom.limit\n        }\n      }).then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (res.status === 200) {\n                    data = res.data;\n                    _this2.userLists = data.list;\n                    _this2.total = data.count;\n                    _this2.columns = [{\n                      title: '商品信息',\n                      slot: 'product',\n                      minWidth: 400\n                    }, {\n                      title: '价格',\n                      key: 'product_price',\n                      minWidth: 120,\n                      render: function render(h, params) {\n                        return h('div', \"\\xA5\".concat(params.row.product_price));\n                      }\n                    }, {\n                      title: '浏览时间',\n                      key: 'add_time',\n                      minWidth: 120\n                    }];\n                    _this2.loading = false;\n                  } else {\n                    _this2.loading = false;\n\n                    _this2.$Message.error(res.msg);\n                  }\n\n                case 1:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this2.loading = false;\n\n        _this2.$Message.error(res.msg);\n      });\n    },\n    // 会员详情\n    getDetails: function getDetails(id) {\n      var _this3 = this;\n\n      this.userId = id;\n      this.spinShow = true;\n      detailsApi(id).then(\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee3(res) {\n          var data, groupItem;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (res.status === 200) {\n                    data = res.data;\n                    _this3.detailsData = data.headerList;\n\n                    if (_this3.fromType !== 'order') {\n                      groupItem = _this3.groupList.find(function (item) {\n                        return item.id == data.ps_info.group_id;\n                      });\n\n                      if (groupItem) {\n                        data.ps_info.group_name = groupItem.group_name;\n                      }\n                    }\n\n                    _this3.psInfo = data.ps_info;\n                    _this3.workMemberInfo = data.workMemberInfo;\n                    _this3.workClientInfo = data.workClientInfo;\n                    _this3.spinShow = false;\n                  } else {\n                    _this3.spinShow = false;\n\n                    _this3.$Message.error(res.msg);\n                  }\n\n                case 1:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this3.spinShow = false;\n\n        _this3.$Message.error(res.msg);\n      });\n    },\n    pageChange: function pageChange(index) {\n      this.userFrom.page = index;\n      this.changeType(this.userFrom.type); // switch (this.activeName) {\n      //     case 'visit':\n      //        this.changeType(this.userFrom.type);\n      //         break;\n      //     case 'spread_change':\n      //        this.changeType(this.userFrom.type);\n      //         break;\n      //     default:\n      //         this.changeType(this.userFrom.type);\n      //         break;\n      // }\n    },\n    // tab选项\n    changeType: function changeType(name) {\n      var _this4 = this;\n\n      this.loading = true;\n      this.userFrom.type = name;\n      this.activeName = name;\n      var data = {\n        id: this.userId,\n        datas: this.userFrom\n      };\n      infoApi(data).then(\n      /*#__PURE__*/\n      function () {\n        var _ref4 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee4(res) {\n          var _data;\n\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  if (!(res.status === 200)) {\n                    _context4.next = 25;\n                    break;\n                  }\n\n                  _data = res.data;\n                  _this4.userLists = _data.list;\n                  _this4.total = _data.count;\n                  _context4.t0 = _this4.userFrom.type;\n                  _context4.next = _context4.t0 === 'order' ? 7 : _context4.t0 === 'integral' ? 9 : _context4.t0 === 'sign' ? 11 : _context4.t0 === 'coupon' ? 13 : _context4.t0 === 'balance_change' ? 15 : _context4.t0 === 'visit' ? 17 : _context4.t0 === 'spread_change' ? 19 : 21;\n                  break;\n\n                case 7:\n                  _this4.columns = [{\n                    title: '订单ID',\n                    key: 'order_id',\n                    minWidth: 160\n                  }, {\n                    title: '收货人',\n                    key: 'real_name',\n                    minWidth: 100\n                  }, {\n                    title: '商品数量',\n                    key: 'total_num',\n                    minWidth: 90\n                  }, {\n                    title: '商品总价',\n                    key: 'total_price',\n                    minWidth: 110\n                  }, {\n                    title: '实付金额',\n                    key: 'pay_price',\n                    minWidth: 120\n                  }, {\n                    title: '交易完成时间',\n                    key: 'pay_time',\n                    minWidth: 120\n                  }];\n                  return _context4.abrupt(\"break\", 22);\n\n                case 9:\n                  _this4.columns = [{\n                    title: '来源/用途',\n                    key: 'title',\n                    minWidth: 120\n                  }, {\n                    title: '积分变化',\n                    key: 'number',\n                    minWidth: 120\n                  }, {\n                    title: '变化前积分',\n                    key: 'balance',\n                    minWidth: 120\n                  }, {\n                    title: '日期',\n                    key: 'add_time',\n                    minWidth: 120\n                  }, {\n                    title: '备注',\n                    key: 'mark',\n                    minWidth: 120\n                  }];\n                  return _context4.abrupt(\"break\", 22);\n\n                case 11:\n                  _this4.columns = [// {\n                  //     title: '动作',\n                  //     key: 'title',\n                  //     minWidth: 120\n                  // },\n                  {\n                    title: '获得积分',\n                    key: 'number',\n                    minWidth: 120\n                  }, {\n                    title: '签到时间',\n                    key: 'add_time',\n                    minWidth: 120\n                  }, {\n                    title: '备注',\n                    key: 'mark',\n                    minWidth: 120\n                  }];\n                  return _context4.abrupt(\"break\", 22);\n\n                case 13:\n                  _this4.columns = [{\n                    title: '优惠券名称',\n                    key: 'coupon_title',\n                    minWidth: 120\n                  }, {\n                    title: '面值',\n                    slot: 'coupon_price',\n                    minWidth: 120\n                  }, {\n                    title: '有效期(天)',\n                    key: 'coupon_time',\n                    minWidth: 120\n                  }, {\n                    title: '兑换时间',\n                    key: '_add_time',\n                    minWidth: 120\n                  }];\n                  return _context4.abrupt(\"break\", 22);\n\n                case 15:\n                  _this4.columns = [{\n                    title: '动作',\n                    key: 'title',\n                    minWidth: 120\n                  }, {\n                    title: '变动金额',\n                    key: 'number',\n                    minWidth: 120\n                  }, {\n                    title: '变动后',\n                    key: 'balance',\n                    minWidth: 120\n                  }, {\n                    title: '创建时间',\n                    key: 'add_time',\n                    minWidth: 120\n                  }, {\n                    title: '备注',\n                    key: 'mark',\n                    minWidth: 120\n                  }];\n                  return _context4.abrupt(\"break\", 22);\n\n                case 17:\n                  _this4.columns = [{\n                    title: '商品信息',\n                    slot: 'product',\n                    minWidth: 400\n                  }, {\n                    title: '价格',\n                    key: 'product_price',\n                    minWidth: 120,\n                    render: function render(h, params) {\n                      return h('div', \"\\xA5\".concat(params.row.product_price));\n                    }\n                  }, {\n                    title: '浏览时间',\n                    key: 'add_time',\n                    minWidth: 120\n                  }];\n                  return _context4.abrupt(\"break\", 22);\n\n                case 19:\n                  _this4.columns = [{\n                    title: '推荐人ID',\n                    key: 'spread_uid',\n                    minWidth: 120\n                  }, {\n                    title: '推荐人',\n                    key: 'nickname',\n                    minWidth: 120,\n                    render: function render(h, params) {\n                      return h('div', [h('img', {\n                        style: {\n                          borderRadius: '50%',\n                          marginRight: '10px',\n                          verticalAlign: 'middle'\n                        },\n                        attrs: {\n                          with: 38,\n                          height: 38\n                        },\n                        directives: [{\n                          name: 'lazy',\n                          value: params.row.avatar\n                        }, {\n                          name: 'viewer'\n                        }]\n                      }), h('span', {\n                        style: {\n                          verticalAlign: 'middle'\n                        }\n                      }, params.row.nickname)]);\n                    }\n                  }, {\n                    title: '变更方式',\n                    key: 'type',\n                    minWidth: 120\n                  }, {\n                    title: '变更时间',\n                    key: 'spread_time',\n                    minWidth: 120\n                  }];\n                  return _context4.abrupt(\"break\", 22);\n\n                case 21:\n                  _this4.columns = [{\n                    title: 'ID',\n                    key: 'uid',\n                    minWidth: 120\n                  }, {\n                    title: '昵称',\n                    key: 'nickname',\n                    minWidth: 120\n                  }, {\n                    title: '等级',\n                    key: 'type',\n                    minWidth: 120\n                  }, {\n                    title: '加入时间',\n                    key: 'add_time',\n                    minWidth: 120\n                  }];\n\n                case 22:\n                  _this4.loading = false;\n                  _context4.next = 27;\n                  break;\n\n                case 25:\n                  _this4.loading = false;\n\n                  _this4.$Message.error(res.msg);\n\n                case 27:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref4.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this4.loading = false;\n\n        _this4.$Message.error(res.msg);\n      });\n    }\n  }\n};",null]}