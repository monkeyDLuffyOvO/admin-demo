{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/work/welcome/addWelcome.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/work/welcome/addWelcome.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport uploadPictures from \"@/components/uploadPictures\";\nimport { getNewFormBuildRuleApi } from \"@/api/setting\";\nimport department from \"@/components/department/index.vue\";\nimport { workWelcomeSave, getWelcomeInfo, welcomeUpdate } from \"@/api/work\";\nexport default {\n  data: function data() {\n    return {\n      formItem: {\n        sort: 0,\n        type: \"0\",\n        userids: [],\n        content: \"\",\n        attachments: []\n      },\n      gridBtn: {\n        xl: 4,\n        lg: 8,\n        md: 8,\n        sm: 8,\n        xs: 8\n      },\n      gridPic: {\n        xl: 6,\n        lg: 8,\n        md: 12,\n        sm: 12,\n        xs: 12\n      },\n      rontineObj: {\n        msgtype: \"miniprogram\",\n        miniprogram: {\n          pic_url: \"\",\n          pic_media_id: \"\",\n          title: \"\",\n          appid: \"\",\n          page: \"\"\n        }\n      },\n      imageObj: {\n        msgtype: \"image\",\n        image: {\n          media_id: \"\",\n          pic_url: \"\"\n        }\n      },\n      picTit: \"\",\n      modalPic: false,\n      modalRoutine: false,\n      isChoice: \"单选\",\n      activeDepartment: {},\n      isSite: true,\n      onlyDepartment: false,\n      openType: '',\n      userList: []\n    };\n  },\n  components: {\n    uploadPictures: uploadPictures,\n    department: department\n  },\n  computed: _objectSpread({}, mapState(\"admin/layout\", [\"isMobile\", \"menuCollapse\"]), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 80;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? \"top\" : \"left\";\n    }\n  }),\n  mounted: function mounted() {\n    if (this.$route.params.id !== \"0\" && this.$route.params.id) {\n      this.getInfo();\n    } else if (!this.$route.params.id) {}\n  },\n  methods: {\n    modalPicTap: function modalPicTap(picTit) {\n      this.modalPic = true;\n      this.picTit = picTit;\n    },\n    addRoutine: function addRoutine() {\n      var _this = this;\n\n      getNewFormBuildRuleApi('routine').then(function (res) {\n        var data = res.data;\n        _this.rontineObj.miniprogram.pic_url = '';\n        _this.rontineObj.miniprogram.title = data.routine_name.value;\n        _this.rontineObj.miniprogram.appid = data.routine_appId.value;\n        _this.rontineObj.miniprogram.page = '/pages/index/index';\n      });\n      this.modalRoutine = true;\n    },\n    addUser: function addUser() {\n      this.userList = this.formItem.userids;\n      this.$refs.department.memberStatus = true;\n    },\n    //tag标签删除成员\n    handleDel: function handleDel(e, name) {\n      // let index = this.formItem.userids.indexOf(name);\n      // this.formItem.userids.splice(index, 1);\n      var i = this.formItem.userids.findIndex(function (item) {\n        return item.name == name;\n      });\n      this.formItem.userids.splice(i, 1);\n    },\n    //欢迎语tag删除\n    wordsDel: function wordsDel(name) {\n      var index = this.formItem.attachments.indexOf(name);\n      this.formItem.attachments.splice(index, 1);\n    },\n    changeMastart: function changeMastart(arr, type) {\n      this.formItem.userids = arr.map(function (item) {\n        return {\n          userid: item.userid,\n          name: item.name\n        };\n      });\n    },\n    // 选中图片\n    getPic: function getPic(pc) {\n      switch (this.picTit) {\n        case \"image\":\n          this.imageObj.image.pic_url = pc.att_dir;\n          this.formItem.attachments.push(this.imageObj);\n          break;\n\n        case \"routine\":\n          this.rontineObj.miniprogram.pic_url = pc.att_dir;\n          break;\n      }\n\n      this.modalPic = false;\n    },\n    insertName: function insertName() {\n      this.formItem.content = this.formItem.content.concat('##客户名称##');\n    },\n    routineConfirm: function routineConfirm() {\n      var routine = this.deepClone(this.rontineObj);\n      this.formItem.attachments.push(routine);\n    },\n    getInfo: function getInfo() {\n      var _this2 = this;\n\n      getWelcomeInfo(this.$route.params.id).then(function (res) {\n        _this2.formItem.type = res.data.type.toString();\n        _this2.formItem.attachments = res.data.attachments;\n        _this2.formItem.content = res.data.content;\n        _this2.formItem.sort = res.data.sort;\n\n        if (res.data.userList.length) {\n          _this2.formItem.userids = res.data.userList.map(function (item) {\n            return {\n              userid: item.userid,\n              welcome_id: item.welcome_id,\n              name: item.member.name\n            };\n          });\n        } else {\n          _this2.$set(_this2.formItem, 'userids', []);\n        }\n      }).catch(function (err) {\n        _this2.$Message.error(err.msg);\n      });\n    },\n    submit: function submit() {\n      var _this3 = this;\n\n      var formData = this.deepClone(this.formItem);\n\n      if (formData.type == 1) {\n        formData.userids = formData.userids.map(function (item) {\n          return item.userid;\n        });\n      }\n\n      if (formData.type == 0 && formData.userids.length) {\n        formData.userids = formData.userids.map(function (item) {\n          return item.userid;\n        });\n        delete formData.userList;\n      }\n\n      formData.type = Number(formData.type);\n\n      if (this.$route.params.id !== \"0\" && this.$route.params.id) {\n        welcomeUpdate(this.$route.params.id, formData).then(function (res) {\n          _this3.$Message.success(\"欢迎语修改成功\");\n\n          _this3.$router.push('/admin/work/welcome');\n        }).catch(function (err) {\n          _this3.$Message.error(err.msg);\n        });\n      } else if (!this.$route.params.id) {\n        workWelcomeSave(formData).then(function (res) {\n          _this3.$Message.success(\"欢迎语新建成功\");\n\n          _this3.$router.push('/admin/work/welcome');\n        }).catch(function (err) {\n          _this3.$Message.error(err.msg);\n        });\n      }\n    },\n    //深克隆\n    deepClone: function deepClone(obj) {\n      var newObj = Array.isArray(obj) ? [] : {};\n\n      if (obj && _typeof(obj) === \"object\") {\n        for (var key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            newObj[key] = obj && _typeof(obj[key]) === 'object' ? this.deepClone(obj[key]) : obj[key];\n          }\n        }\n      }\n\n      return newObj;\n    }\n  }\n};",null]}