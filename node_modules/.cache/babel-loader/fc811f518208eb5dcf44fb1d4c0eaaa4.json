{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/eslint-loader/index.js??ref--13-0!/home/darkcrossunicorn/文档/admin/src/router/index.js","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/router/index.js","mtime":1664694420204},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// +----------------------------------------------------------------------\n// | HIGOSHOP [ HIGOSHOP助力中小企业数字化转型 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2020~2022 https://www.higoshop.net All rights reserved.\n// +----------------------------------------------------------------------\n// | Licensed HIGOSHOP并不是自由软件，未经许可不能去掉HIGOSHOP相关版权\n// +----------------------------------------------------------------------\n// | Author: HIGOSHOP Team <higoshop@126.com>\n// +----------------------------------------------------------------------\nimport Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport iView from \"view-design\";\nimport util from \"@/libs/util\";\nimport Setting from \"@/setting\";\nimport store from \"@/store/index\"; // 路由数据\n\nimport routes from \"./routes\";\nimport { includeArray } from \"@/libs/system\";\nVue.use(VueRouter);\n/**\n * 重写路由的push方法\n */\n\nvar routerPush = VueRouter.prototype.push;\n\nVueRouter.prototype.push = function push(location) {\n  return routerPush.call(this, location).catch(function (error) {\n    return error;\n  });\n}; // 导出路由 在 main.js 里使用\n\n\nvar router = new VueRouter({\n  routes: routes,\n  mode: Setting.routerMode\n});\n/**\n * 路由拦截\n * 权限验证\n */\n\nrouter.beforeEach(\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(to, from, next) {\n    var db, token, access, isPermission;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(to.fullPath.indexOf(\"kefu\") != -1)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", next());\n\n          case 2:\n            if (!to.matched.some(function (_) {\n              return _.meta.auth;\n            })) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 5;\n            return store.dispatch(\"admin/db/database\", {\n              user: true\n            });\n\n          case 5:\n            db = _context.sent;\n            token = util.cookies.get(\"token\");\n\n            if (token && token !== \"undefined\") {\n              access = db.get(\"unique_auth\").value();\n              isPermission = includeArray(to.meta.auth, access);\n\n              if (isPermission) {\n                next();\n              } else {\n                next({\n                  name: \"403\"\n                });\n              } // next();\n\n            } else {\n              store.dispatch(\"admin/db/databaseClear\", {\n                user: true\n              }); // 没有登录的时候跳转到登录界面\n              // 携带上登陆成功之后需要跳转的页面完整路径\n\n              next({\n                name: \"login\",\n                query: {\n                  redirect: to.fullPath\n                }\n              });\n            }\n\n            _context.next = 11;\n            break;\n\n          case 10:\n            // 不需要身份校验 直接通过\n            next();\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.afterEach(function (to) {\n  // if (Setting.showProgressBar) iView.LoadingBar.finish();\n  // 多页控制 打开新的页面\n  store.dispatch(\"admin/page/open\", to); // 更改标题\n\n  util.title({\n    title: to.meta.title\n  }); // 返回页面顶端\n\n  window.scrollTo(0, 0);\n});\nexport default router;",null]}