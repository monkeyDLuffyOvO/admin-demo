{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/eslint-loader/index.js??ref--13-0!/home/darkcrossunicorn/文档/admin/src/utils/videoCloud.js","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/utils/videoCloud.js","mtime":1664694314874},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// +----------------------------------------------------------------------\n// | HIGOSHOP [ HIGOSHOP助力中小企业数字化转型 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2020~2022 https://www.higoshop.net All rights reserved.\n// +----------------------------------------------------------------------\n// | Licensed HIGOSHOP并不是自由软件，未经许可不能去掉HIGOSHOP相关版权\n// +----------------------------------------------------------------------\n// | Author: HIGOSHOP Team <higoshop@126.com>\n// +----------------------------------------------------------------------\nimport * as qiniu from 'qiniu-js';\nimport Cos from 'cos-js-sdk-v5';\nimport axios from 'axios';\nexport default {\n  videoUpload: function videoUpload(config) {\n    if (config.type === 'COS') {\n      return this.cosUpload(config.evfile, config.res.data, config.uploading);\n    } else if (config.type === 'OSS') {\n      return this.ossHttp(config.evfile, config.res, config.uploading);\n    } else {\n      return this.qiniuHttp(config.evfile, config.res, config.uploading);\n    }\n  },\n  cosUpload: function cosUpload(file, config, uploading) {\n    var cos = new Cos({\n      getAuthorization: function getAuthorization(options, callback) {\n        callback({\n          TmpSecretId: config.credentials.tmpSecretId,\n          // 临时密钥的 tmpSecretId\n          TmpSecretKey: config.credentials.tmpSecretKey,\n          // 临时密钥的 tmpSecretKey\n          XCosSecurityToken: config.credentials.sessionToken,\n          // 临时密钥的 sessionToken\n          ExpiredTime: config.expiredTime // 临时密钥失效时间戳，是申请临时密钥时，时间戳加 durationSeconds\n\n        });\n      }\n    });\n    var fileObject = file.target.files[0];\n    var Key = fileObject.name;\n    var pos = Key.lastIndexOf('.');\n    var suffix = '';\n\n    if (pos !== -1) {\n      suffix = Key.substring(pos);\n    }\n\n    var filename = new Date().getTime() + suffix;\n    return new Promise(function (resolve, reject) {\n      cos.sliceUploadFile({\n        Bucket: config.bucket,\n\n        /* 必须 */\n        Region: config.region,\n\n        /* 必须 */\n        Key: filename,\n\n        /* 必须 */\n        Body: fileObject,\n        // 上传文件对象\n        onProgress: function onProgress(progressData) {\n          uploading(progressData);\n        }\n      }, function (err, data) {\n        if (err) {\n          reject({\n            msg: err\n          });\n        } else {\n          resolve({\n            url: 'http://' + data.Location,\n            ETag: data.ETag\n          });\n        }\n      });\n    });\n  },\n  cosHttp: function cosHttp(evfile, res, videoIng) {\n    // 腾讯云\n    // 对更多字符编码的 url encode 格式\n    var camSafeUrlEncode = function camSafeUrlEncode(str) {\n      return encodeURIComponent(str).replace(/!/g, '%21').replace(/'/g, '%27').replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/\\*/g, '%2A');\n    };\n\n    var fileObject = evfile.target.files[0];\n    var Key = fileObject.name;\n    var pos = Key.lastIndexOf('.');\n    var suffix = '';\n\n    if (pos !== -1) {\n      suffix = Key.substring(pos);\n    }\n\n    var filename = new Date().getTime() + suffix;\n    var data = res.data;\n    var XCosSecurityToken = data.credentials.sessionToken;\n    var url = data.url + camSafeUrlEncode(filename).replace(/%2F/g, '/');\n    var xhr = new XMLHttpRequest();\n    xhr.open('PUT', url, true);\n    XCosSecurityToken && xhr.setRequestHeader('x-cos-security-token', XCosSecurityToken);\n\n    xhr.upload.onprogress = function (e) {\n      var progress = Math.round(e.loaded / e.total * 10000) / 100;\n      videoIng(true, progress);\n    };\n\n    return new Promise(function (resolve, reject) {\n      xhr.onload = function () {\n        if (/^2\\d\\d$/.test('' + xhr.status)) {\n          var ETag = xhr.getResponseHeader('etag');\n          videoIng(false, 0);\n          resolve({\n            url: url,\n            ETag: ETag\n          });\n        } else {\n          reject({\n            msg: '文件 ' + filename + ' 上传失败，状态码：' + xhr.statu\n          });\n        }\n      };\n\n      xhr.onerror = function () {\n        reject({\n          msg: '文件 ' + filename + '上传失败，请检查是否没配置 CORS 跨域规'\n        });\n      };\n\n      xhr.send(fileObject);\n\n      xhr.onreadystatechange = function () {\n        console.log(xhr.statusText, xhr.responseText, 'xhr');\n      };\n    });\n  },\n  ossHttp: function ossHttp(evfile, res, videoIng) {\n    var that = this;\n    var fileObject = evfile.target.files[0];\n    var file = fileObject.name;\n    var pos = file.lastIndexOf('.');\n    var suffix = '';\n\n    if (pos !== -1) {\n      suffix = file.substring(pos);\n    }\n\n    var filename = new Date().getTime() + suffix;\n    var formData = new FormData();\n    var data = res.data; // 注意formData里append添加的键的大小写\n\n    formData.append('key', filename); // 存储在oss的文件路径\n\n    formData.append('OSSAccessKeyId', data.accessid); // accessKeyId\n\n    formData.append('policy', data.policy); // policy\n\n    formData.append('Signature', data.signature); // 签名\n    // 如果是base64文件，那么直接把base64字符串转成blob对象进行上传就可以了\n\n    formData.append('file', fileObject);\n    formData.append('success_action_status', 200); // 成功后返回的操作码\n\n    var url = data.host;\n    var fileUrl = url + '/' + filename;\n    videoIng(true, 100);\n    return new Promise(function (resolve, reject) {\n      axios.defaults.withCredentials = false;\n      axios.post(url, formData).then(function () {\n        // that.progress = 0;\n        videoIng(false, 0);\n        resolve({\n          url: fileUrl\n        });\n      }).catch(function (res) {\n        reject({\n          msg: res\n        });\n      });\n    });\n  },\n  qiniuHttp: function qiniuHttp(evfile, res, videoIng) {\n    var uptoken = res.data.token;\n    var file = evfile.target.files[0]; // Blob 对象，上传的文件\n\n    var Key = file.name; // 上传后文件资源名以设置的 key 为主，如果 key 为 null 或者 undefined，则文件资源名会以 hash 值作为资源名。\n\n    var pos = Key.lastIndexOf('.');\n    var suffix = '';\n\n    if (pos !== -1) {\n      suffix = Key.substring(pos);\n    }\n\n    var filename = new Date().getTime() + suffix;\n    var fileUrl = res.data.domain + '/' + filename;\n    var config = {\n      useCdnDomain: true\n    };\n    var putExtra = {\n      fname: '',\n      // 文件原文件名\n      params: {},\n      // 用来放置自定义变量\n      mimeType: null // 用来限制上传文件类型，为 null 时表示不对文件类型限制；限制类型放到数组里： [\"image/png\", \"image/jpeg\", \"image/gif\"]\n\n    };\n    var observable = qiniu.upload(file, filename, uptoken, putExtra, config);\n    return new Promise(function (resolve, reject) {\n      observable.subscribe({\n        next: function next(result) {\n          var progress = Math.round(result.total.loaded / result.total.size);\n          videoIng(true, progress); // 主要用来展示进度\n        },\n        error: function error(errResult) {\n          // 失败报错信息\n          reject({\n            msg: errResult\n          });\n        },\n        complete: function complete(result) {\n          // 接收成功后返回的信息\n          videoIng(false, 0);\n          resolve({\n            url: fileUrl\n          });\n        }\n      });\n    });\n  }\n};",null]}