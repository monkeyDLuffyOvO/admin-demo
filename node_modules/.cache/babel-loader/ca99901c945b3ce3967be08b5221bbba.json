{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/system/maintain/systemDatabackup/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/system/maintain/systemDatabackup/index.vue","mtime":1650075894000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { backupListApi, backupBackupApi, backupOptimizeApi, backupRepairApi, filesListApi, filesDownloadApi, filesImportApi } from '@/api/system';\nimport Setting from '@/setting';\nimport dataDetails from \"./handle/dataDetails\";\nexport default {\n  name: 'systemDatabackup',\n  components: {\n    dataDetails: dataDetails\n  },\n  data: function data() {\n    return {\n      modals: false,\n      loading: false,\n      tabList: [],\n      columns4: [{\n        title: '备份名称',\n        key: 'filename',\n        minWidth: 200,\n        sortable: true\n      }, {\n        title: 'part',\n        key: 'part',\n        minWidth: 100\n      }, {\n        title: '大小',\n        key: 'size',\n        minWidth: 150\n      }, {\n        title: 'compress',\n        key: 'compress',\n        minWidth: 100\n      }, {\n        title: '时间',\n        key: 'backtime',\n        minWidth: 150\n      }, {\n        title: '操作',\n        slot: 'action',\n        fixed: 'right',\n        minWidth: 100\n      }],\n      tabList2: [],\n      columns: [{\n        type: 'selection',\n        width: 60,\n        align: 'center'\n      }, {\n        title: '表名称',\n        key: 'name',\n        minWidth: 200,\n        sortable: true\n      }, {\n        title: '备注',\n        key: 'comment',\n        minWidth: 200\n      }, {\n        title: '类型',\n        key: 'engine',\n        minWidth: 130,\n        sortable: true\n      }, {\n        title: '大小',\n        key: 'data_length',\n        minWidth: 130,\n        sortable: true\n      }, {\n        title: '更新时间',\n        key: 'update_time',\n        minWidth: 150,\n        sortable: true\n      }, {\n        title: '行数',\n        key: 'rows',\n        minWidth: 100,\n        sortable: true\n      }, {\n        title: '操作',\n        slot: 'action',\n        fixed: 'right',\n        minWidth: 60\n      }],\n      selectionList: [],\n      // tabList3: [],\n      // columns2: [\n      //     {\n      //         title: '字段名',\n      //         key: 'COLUMN_NAME'\n      //     },\n      //     {\n      //         title: '数据类型',\n      //         key: 'COLUMN_TYPE'\n      //     },\n      //     {\n      //         title: '默认值',\n      //         key: 'COLUMN_DEFAULT'\n      //     },\n      //     {\n      //         title: '允许非空',\n      //         key: 'IS_NULLABLE'\n      //     },\n      //     {\n      //         title: '自动递增',\n      //         key: 'EXTRA'\n      //     },\n      //     {\n      //         title: '备注',\n      //         key: 'COLUMN_COMMENT'\n      //     }\n      // ],\n      rows: {},\n      dataList: {},\n      loading2: false,\n      loading3: false,\n      header: {},\n      Token: ''\n    };\n  },\n  computed: {\n    fileUrl: function fileUrl() {\n      var search = '/adminapi/';\n      var start = Setting.apiBaseURL.indexOf(search);\n      return Setting.apiBaseURL.substring(0, start); // 截取字符串\n    }\n  },\n  created: function created() {\n    this.getToken();\n    this.getList();\n    this.getfileList();\n  },\n  methods: {\n    // 导入\n    ImportFile: function ImportFile(row) {\n      var _this = this;\n\n      filesImportApi({\n        part: row.part,\n        time: row.time\n      }).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this.$Message.success(res.msg);\n\n                  _this.getfileList();\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this.loading = false;\n\n        _this.$Message.error(res.msg);\n      });\n    },\n    // 删除备份记录表\n    del: function del(row, tit, num) {\n      var _this2 = this;\n\n      var delfromData = {\n        title: tit,\n        num: num,\n        url: \"system/backup/del_file\",\n        method: 'DELETE',\n        ids: {\n          filename: row.time\n        }\n      };\n      this.$modalSure(delfromData).then(function (res) {\n        _this2.$Message.success(res.msg);\n\n        _this2.tabList.splice(num, 1);\n      }).catch(function (res) {\n        _this2.$Message.error(res.msg);\n      });\n    },\n    // 上传头部token\n    getToken: function getToken() {\n      var _this3 = this;\n\n      this.$store.dispatch('admin/db/database', {\n        user: true\n      }).then(function (res) {\n        _this3.Token = res.get('TOKEN').value();\n      });\n    },\n    download: function download(row) {\n      var _this4 = this;\n\n      var data = {\n        time: row.time\n      };\n      filesDownloadApi(data).then(function (res) {\n        if (res.data.key) {\n          window.open(Setting.apiBaseURL + '/download?key=' + res.data.key);\n        }\n      }).catch(function (res) {\n        _this4.$Message.error(res);\n      });\n    },\n    // 导出备份记录表\n    exportData: function exportData() {\n      var columns = this.columns.slice(1, 7);\n      this.$refs.selection.exportCsv({\n        filename: '导出',\n        columns: columns,\n        data: this.tabList2\n      });\n    },\n    // 全选\n    onSelectTab: function onSelectTab(selection) {\n      this.selectionList = selection;\n      var tables = [];\n      this.selectionList.map(function (item) {\n        tables.push(item.name);\n      });\n      this.dataList = {\n        tables: tables.join(',')\n      };\n    },\n    // 备份表\n    getBackup: function getBackup() {\n      var _this5 = this;\n\n      if (this.selectionList.length === 0) {\n        return this.$Message.warning('请选择表');\n      }\n\n      backupBackupApi(this.dataList).then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(res) {\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _this5.$Message.success(res.msg);\n\n                  _this5.getfileList();\n\n                case 2:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this5.loading = false;\n\n        _this5.$Message.error(res.msg);\n      });\n    },\n    // 备份记录表列表\n    getfileList: function getfileList() {\n      var _this6 = this;\n\n      this.loading3 = true;\n      filesListApi().then(\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee3(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  data = res.data;\n                  _this6.tabList = data.list;\n                  _this6.loading3 = false;\n\n                case 3:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this6.loading3 = false;\n\n        _this6.$Message.error(res.msg);\n      });\n    },\n    // 优化表\n    getOptimize: function getOptimize() {\n      var _this7 = this;\n\n      if (this.selectionList.length === 0) {\n        return this.$Message.warning('请选择表');\n      }\n\n      backupOptimizeApi(this.dataList).then(\n      /*#__PURE__*/\n      function () {\n        var _ref4 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee4(res) {\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _this7.$Message.success(res.msg);\n\n                case 1:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref4.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this7.$Message.error(res.msg);\n      });\n    },\n    // 修复表\n    getRepair: function getRepair() {\n      var _this8 = this;\n\n      if (this.selectionList.length === 0) {\n        return this.$Message.warning('请选择表');\n      }\n\n      backupRepairApi(this.dataList).then(\n      /*#__PURE__*/\n      function () {\n        var _ref5 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee5(res) {\n          return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _this8.$Message.success(res.msg);\n\n                case 1:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x5) {\n          return _ref5.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this8.$Message.error(res.msg);\n      });\n    },\n    // 数据库列表\n    getList: function getList() {\n      var _this9 = this;\n\n      this.loading = true;\n      backupListApi().then(\n      /*#__PURE__*/\n      function () {\n        var _ref6 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee6(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  data = res.data;\n                  _this9.tabList2 = data.list;\n                  _this9.loading = false;\n\n                case 3:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref6.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this9.loading = false;\n\n        _this9.$Message.error(res.msg);\n      });\n    },\n    // 详情\n    Info: function Info(row) {\n      this.$refs.dataDetails.modals = true;\n      this.$refs.dataDetails.activeName = \"datainfo\";\n      this.$refs.dataDetails.getDetails(row);\n    }\n  }\n};",null]}