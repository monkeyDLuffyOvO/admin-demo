{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/components/echarts/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/components/echarts/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\nimport echarts from 'echarts';\nexport default {\n  name: 'index',\n  props: {\n    infoList: {\n      type: Object,\n      default: null\n    },\n    styles: {\n      type: Object,\n      default: null\n    },\n    series: Array,\n    echartsTitle: {\n      type: String,\n      default: ''\n    },\n    yAxisData: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    bingXdata: Array\n  },\n  data: function data() {\n    return {\n      infoLists: this.infoList,\n      seriesArray: this.series\n    };\n  },\n  watch: {\n    infoList: {\n      handler: function handler(newVal, oldVal) {\n        this.infoLists = newVal;\n        this.handleSetVisitChart();\n      },\n      deep: true // 对象内部属性的监听，关键。\n\n    },\n    series: {\n      handler: function handler(newVal, oldVal) {\n        this.seriesArray = newVal;\n        this.handleSetVisitChart();\n      },\n      deep: true // 对象内部属性的监听，关键。\n\n    }\n  },\n  computed: {\n    echarts: function echarts() {\n      return 'echarts' + Math.ceil(Math.random() * 100);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var vm = this;\n    vm.$nextTick(function () {\n      vm.handleSetVisitChart();\n      window.addEventListener('resize', _this.wsFunc);\n    });\n  },\n  methods: {\n    wsFunc: function wsFunc() {\n      this.myChart.resize();\n    },\n    handleSetVisitChart: function handleSetVisitChart() {\n      var _this2 = this;\n\n      this.myChart = echarts.init(document.getElementById(this.echarts));\n      var option = null;\n\n      if (this.echartsTitle === 'circle') {\n        option = {\n          tooltip: {\n            trigger: 'item',\n            formatter: '{a} <br/>{b} : {c} ({d}%)'\n          },\n          legend: {\n            orient: 'vertical',\n            left: 'left',\n            data: this.infoLists.bing_xdata || []\n          },\n          series: [{\n            name: '',\n            type: 'pie',\n            radius: '60%',\n            center: ['50%', '50%'],\n            data: this.infoLists.bing_data || [],\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }]\n        };\n      } else if (this.echartsTitle === 'circle1') {\n        option = {\n          tooltip: {\n            trigger: 'item',\n            formatter: '{b} : {c} ({d}%)'\n          },\n          legend: {\n            icon: \"circle\",\n            top: '5%',\n            left: 'center',\n            fontSize: '12',\n            data: this.infoLists.bing_xdata || []\n          },\n          series: [{\n            name: '访问来源',\n            type: 'pie',\n            radius: ['30%', '60%'],\n            avoidLabelOverlap: false,\n            label: {\n              show: true,\n              formatter: '{d}%',\n              position: 'inner',\n              fontSize: '12'\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: '15',\n                fontWeight: 'bold'\n              }\n            },\n            labelLine: {\n              show: false\n            },\n            data: this.infoLists.bing_data || []\n          }]\n        };\n      } else if (this.echartsTitle === 'inlie') {\n        option = {\n          tooltip: {\n            trigger: 'axis'\n          },\n          toolbox: {},\n          legend: {\n            icon: \"line\",\n            left: 'left',\n            fontWeight: '100',\n            data: this.infoLists.legend || []\n          },\n          color: ['#1495EB', '#00CC66', '#F9D249', '#ff9900', '#9860DF'],\n          grid: {\n            left: 16,\n            right: 25,\n            bottom: 10,\n            top: 40,\n            containLabel: true\n          },\n          xAxis: [{\n            type: 'category',\n            axisLine: {\n              lineStyle: {\n                color: '#D7DDE4'\n              }\n            },\n            axisTick: {\n              alignWithLabel: true,\n              lineStyle: {\n                color: '#D7DDE4'\n              }\n            },\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#F5F7F9'\n              }\n            },\n            axisLabel: {\n              interval: 0,\n              rotate: 40,\n              textStyle: {\n                color: '#7F8B9C'\n              }\n            },\n            data: this.infoLists.xAxis\n          }],\n          yAxis: this.yAxisData.length ? this.yAxisData : {\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              textStyle: {\n                color: '#7F8B9C'\n              }\n            },\n            splitLine: {\n              show: true,\n              lineStyle: {\n                color: '#F5F7F9'\n              }\n            },\n            type: 'value'\n          },\n          series: this.seriesArray\n        };\n      } else {\n        option = {\n          tooltip: {\n            trigger: 'axis'\n          },\n          toolbox: {},\n          legend: {\n            data: this.infoLists.legend || []\n          },\n          color: ['#1495EB', '#00CC66', '#F9D249', '#ff9900', '#9860DF'],\n          grid: {\n            left: 16,\n            right: 25,\n            bottom: 10,\n            top: 40,\n            containLabel: true\n          },\n          xAxis: [{\n            type: 'category',\n            axisLine: {\n              lineStyle: {\n                color: '#D7DDE4'\n              }\n            },\n            axisTick: {\n              alignWithLabel: true,\n              lineStyle: {\n                color: '#D7DDE4'\n              }\n            },\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: '#F5F7F9'\n              }\n            },\n            // axisPointer: {\n            //     type: 'shadow'\n            // },\n            axisLabel: {\n              interval: 0,\n              rotate: 40,\n              textStyle: {\n                color: '#7F8B9C'\n              }\n            },\n            data: this.infoLists.xAxis\n          }],\n          yAxis: this.yAxisData.length ? this.yAxisData : {\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              textStyle: {\n                color: '#7F8B9C'\n              }\n            },\n            splitLine: {\n              show: true,\n              lineStyle: {\n                color: '#F5F7F9'\n              }\n            },\n            type: 'value'\n          },\n          series: this.seriesArray\n        };\n      } // 基于准备好的dom，初始化echarts实例\n\n\n      setTimeout(function () {\n        _this2.wsFunc();\n\n        _this2.myChart.setOption(option, true);\n      }, 200);\n    },\n    handleResize: function handleResize() {\n      this.myChart.resize();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.wsFunc);\n\n    if (!this.myChart) {\n      return;\n    }\n\n    this.myChart.dispose();\n    this.myChart = null;\n  }\n};",null]}