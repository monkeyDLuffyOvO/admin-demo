{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/setting/cityDelivery/record.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/setting/cityDelivery/record.vue","mtime":1660787421000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport timeOptions from \"@/utils/timeOptions\";\nimport { deliveryList, merchantStoreListApi, deliveryCancelForm } from '@/api/setting';\nexport default {\n  name: \"record\",\n  components: {},\n  data: function data() {\n    return {\n      options: timeOptions,\n      timeVal: [],\n      formData: {\n        keyword: '',\n        data: '',\n        store_id: 0,\n        station_type: '',\n        status: '',\n        page: 1,\n        limit: 20\n      },\n      loading: false,\n      columns: [{\n        title: \"ID\",\n        key: \"id\",\n        width: 60\n      }, {\n        title: \"门店名称\",\n        slot: \"info\",\n        minWidth: 150\n      }, {\n        title: \"配送平台\",\n        slot: \"stationType\",\n        minWidth: 90\n      }, {\n        title: \"配送订单号\",\n        key: \"delivery_no\",\n        minWidth: 110\n      }, {\n        title: \"配送原订单号\",\n        slot: \"yOrderId\",\n        minWidth: 110\n      }, {\n        title: \"配送起点\",\n        key: \"from_address\",\n        minWidth: 130\n      }, {\n        title: \"配送终点\",\n        key: \"to_address\",\n        minWidth: 130\n      }, {\n        title: \"配送状态\",\n        slot: \"status\",\n        minWidth: 80\n      }, {\n        title: \"配送距离\",\n        slot: \"distance\",\n        minWidth: 80\n      }, {\n        title: \"配送费用\",\n        key: \"fee\",\n        minWidth: 80\n      }, {\n        title: \"消费时间\",\n        key: \"add_time\",\n        minWidth: 125\n      }, {\n        title: \"备注\",\n        slot: \"mark\",\n        minWidth: 80\n      }, {\n        title: '操作',\n        slot: 'action',\n        fixed: 'right',\n        minWidth: 80\n      }],\n      data: [],\n      storeList: [],\n      total: 0\n    };\n  },\n  computed: _objectSpread({}, mapState(\"admin/layout\", [\"isMobile\"]), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    }\n  }),\n  created: function created() {\n    this.getStoreList();\n    this.getList();\n  },\n  mounted: function mounted() {},\n  methods: {\n    cancelOrder: function cancelOrder(row) {\n      var _this = this;\n\n      this.$modalForm(deliveryCancelForm(row.id)).then(function () {\n        return _this.getList();\n      });\n    },\n    orderReset: function orderReset() {\n      this.formData = {\n        keyword: '',\n        data: '',\n        store_id: 0,\n        station_type: '',\n        status: '',\n        page: 1,\n        limit: 20\n      };\n      this.timeVal = [];\n      this.getList();\n    },\n    orderSearch: function orderSearch() {\n      this.formData.page = 1;\n      this.getList();\n    },\n    pageChange: function pageChange(index) {\n      this.formData.page = index;\n      this.getList();\n    },\n    limitChange: function limitChange(limit) {\n      this.formData.limit = limit;\n      this.getList();\n    },\n    getStoreList: function getStoreList() {\n      var _this2 = this;\n\n      merchantStoreListApi().then(function (res) {\n        _this2.storeList = res.data;\n      }).catch(function (err) {\n        _this2.$Message.error(err.msg);\n      });\n    },\n    getList: function getList() {\n      var _this3 = this;\n\n      this.loading = true;\n      deliveryList(this.formData).then(function (res) {\n        _this3.loading = false;\n        _this3.data = res.data.list;\n        _this3.total = res.data.count;\n      }).catch(function (err) {\n        _this3.loading = false;\n\n        _this3.$Message.error(err.msg);\n      });\n    },\n    // 具体日期\n    onchangeTime: function onchangeTime(e) {\n      this.timeVal = e;\n      this.formData.data = this.timeVal.join(\"-\");\n\n      if (!e[0]) {\n        this.formData.data = \"\";\n      }\n    }\n  }\n};",null]}