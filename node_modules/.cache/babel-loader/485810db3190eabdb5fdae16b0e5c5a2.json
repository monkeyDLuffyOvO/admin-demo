{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/components/freightTemplate/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/components/freightTemplate/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport 'element-ui/lib/theme-chalk/index.css';\nimport { mapState } from 'vuex';\nimport city from '@/components/freightTemplate/city';\nimport { templatesSaveApi, shipTemplatesApi, cityData } from '@/api/setting';\nimport LazyCascader from '../lazyCascader';\nvar cacheAddress = {};\nexport default {\n  name: 'freightTemplate',\n  components: {\n    LazyCascader: LazyCascader\n  },\n  props: {},\n  data: function data() {\n    var that = this;\n    return {\n      props: {\n        children: 'children',\n        label: 'label',\n        value: 'value',\n        multiple: true,\n        lazy: true,\n        lazyLoad: this.lazyLoad,\n        checkStrictly: true\n      },\n      // propsData:{\n      //     multiple: true,\n      //     checkStrictly: true,\n      //     lazy: true,\n      //     lazyLoad (node, resolve) {\n      //         cityData({pid:node?node.value:0}).then(res=>{\n      //             let nodes = res.data\n      //             nodes.forEach(item => {\n      //                 item.leaf = !item.hasOwnProperty('children')\n      //             })\n      //             resolve(nodes)\n      //         }).catch(err=>{\n      //             this.$Message.error(err.msg)\n      //         })\n      //     }\n      // },\n      isTemplate: false,\n      columns: [{\n        title: '可配送区域',\n        slot: 'regionName',\n        minWidth: 200\n      }, {\n        title: '首件',\n        key: 'first',\n        minWidth: 70,\n        render: function render(h, params) {\n          return h('Input', {\n            props: {\n              type: 'number',\n              // size: 'small',\n              value: that.templateList[params.index].first // 此处如何让数据双向绑定\n\n            },\n            on: {\n              'on-change': function onChange(event) {\n                that.templateList[params.index].first = event.target.value;\n              }\n            }\n          });\n        }\n      }, {\n        title: '运费（元）',\n        key: 'price',\n        minWidth: 70,\n        render: function render(h, params) {\n          return h('Input', {\n            props: {\n              type: 'number',\n              // size: 'small',\n              value: that.templateList[params.index].first_price // 此处如何让数据双向绑定\n\n            },\n            on: {\n              'on-change': function onChange(event) {\n                that.templateList[params.index].first_price = event.target.value;\n              }\n            }\n          });\n        }\n      }, {\n        title: '续件',\n        key: 'continue',\n        minWidth: 70,\n        render: function render(h, params) {\n          return h('Input', {\n            props: {\n              type: 'number',\n              // size: 'small',\n              value: that.templateList[params.index].continue // 此处如何让数据双向绑定\n\n            },\n            on: {\n              'on-change': function onChange(event) {\n                that.templateList[params.index].continue = event.target.value;\n              }\n            }\n          });\n        }\n      }, {\n        title: '续费（元）',\n        key: 'continue_price',\n        minWidth: 70,\n        render: function render(h, params) {\n          return h('Input', {\n            props: {\n              type: 'number',\n              // size: 'small',\n              value: that.templateList[params.index].continue_price // 此处如何让数据双向绑定\n\n            },\n            on: {\n              'on-change': function onChange(event) {\n                that.templateList[params.index].continue_price = event.target.value;\n              }\n            }\n          });\n        }\n      }, {\n        title: '操作',\n        slot: 'action',\n        minWidth: 70\n      }],\n      columns2: [{\n        title: '选择地区',\n        slot: 'placeName',\n        minWidth: 250\n      }, {\n        title: '包邮件数',\n        key: 'number',\n        minWidth: 100,\n        render: function render(h, params) {\n          return h('Input', {\n            props: {\n              type: 'number',\n              // size: 'small',\n              value: that.appointList[params.index].number // 此处如何让数据双向绑定\n\n            },\n            on: {\n              'on-change': function onChange(event) {\n                that.appointList[params.index].number = event.target.value;\n              }\n            }\n          });\n        }\n      }, {\n        title: '包邮金额（元）',\n        key: 'price',\n        minWidth: 100,\n        render: function render(h, params) {\n          return h('Input', {\n            props: {\n              type: 'number',\n              // size: 'small',\n              value: that.appointList[params.index].price // 此处如何让数据双向绑定\n\n            },\n            on: {\n              'on-change': function onChange(event) {\n                that.appointList[params.index].price = event.target.value;\n              }\n            }\n          });\n        }\n      }, {\n        title: '操作',\n        slot: 'action',\n        minWidth: 100\n      }],\n      columns3: [{\n        title: '选择地区',\n        slot: 'placeName',\n        minWidth: 250\n      }, {\n        title: '操作',\n        slot: 'action',\n        minWidth: 100\n      }],\n      templateList: [{\n        first: 1,\n        first_price: 0,\n        continue: 1,\n        continue_price: 0,\n        city_ids: [[0]]\n      }],\n      appointList: [],\n      noDeliveryList: [],\n      formData: {\n        type: 1,\n        sort: 0,\n        name: '',\n        appoint_check: 0,\n        no_delivery_check: 0\n      },\n      id: 0\n    };\n  },\n  computed: _objectSpread({}, mapState('admin/layout', ['isMobile']), {\n    labelWidth: function labelWidth() {\n      return this.isMobile ? undefined : 120;\n    },\n    labelPosition: function labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    }\n  }),\n  mounted: function mounted() {},\n  methods: {\n    lazyLoad: function lazyLoad(node, resolve) {\n      var _this = this;\n\n      if (cacheAddress[node]) {\n        cacheAddress[node]().then(function (res) {\n          resolve(_toConsumableArray(res.data));\n        });\n      } else {\n        var p = cityData({\n          pid: node\n        });\n\n        cacheAddress[node] = function () {\n          return p;\n        };\n\n        p.then(function (res) {\n          res.data.forEach(function (item) {\n            item.leaf = !item.hasOwnProperty('children');\n          });\n\n          cacheAddress[node] = function () {\n            return new Promise(function (resolve1) {\n              setTimeout(function () {\n                return resolve1(res);\n              }, 300);\n            });\n          };\n\n          resolve(res.data);\n        }).catch(function (res) {\n          _this.$message.error(res.message);\n        });\n      }\n    },\n    onChange: function onChange(e) {// this.appointList\n    },\n    editFrom: function editFrom(id) {\n      var _this2 = this;\n\n      this.id = id;\n      shipTemplatesApi(id).then(function (res) {\n        var formData = res.data.formData;\n        _this2.templateList = res.data.templateList;\n        _this2.appointList = res.data.appointList;\n        _this2.noDeliveryList = res.data.noDeliveryList;\n        _this2.formData = {\n          type: formData.type,\n          sort: formData.sort,\n          name: formData.name,\n          appoint_check: formData.appoint_check,\n          no_delivery_check: formData.no_delivery_check\n        };\n\n        _this2.headerType();\n      });\n    },\n    selectCity: function selectCity(type) {\n      switch (type) {\n        case 1:\n          this.templateList.push({\n            first: 1,\n            first_price: 0,\n            continue: 1,\n            continue_price: 0,\n            city_ids: []\n          });\n          break;\n\n        case 2:\n          this.appointList.push({\n            placeName: '',\n            number: 0,\n            price: 0,\n            city_ids: []\n          });\n          break;\n\n        case 3:\n          this.noDeliveryList.push({\n            placeName: '',\n            city_ids: []\n          });\n          break;\n      }\n    },\n    // 单独添加配送区域\n    addCity: function addCity(type) {\n      this.type = type;\n      this.selectCity(type);\n    },\n    changeRadio: function changeRadio() {\n      this.headerType();\n    },\n    headerType: function headerType() {\n      var that = this;\n\n      if (this.formData.type === 2) {\n        that.columns[1].title = '首重量(KG)';\n        that.columns[3].title = '续重量(KG)';\n        that.columns2[1].title = '包邮重量(KG)';\n      } else if (this.formData.type === 3) {\n        that.columns[1].title = '首体积(m³)';\n        that.columns[3].title = '续体积(m³)';\n        that.columns2[1].title = '包邮体积(m³)';\n      } else {\n        that.columns[1].title = '首件';\n        that.columns[3].title = '续件';\n        that.columns2[1].title = '包邮件数';\n      }\n    },\n    // 提交\n    handleSubmit: function handleSubmit() {\n      var _this3 = this;\n\n      var that = this;\n\n      if (!that.formData.name.trim().length) {\n        return that.$Message.error('请填写模板名称');\n      }\n\n      if (!that.templateList.length) {\n        return that.$Message.error('请设置配送区域');\n      }\n\n      for (var i = 0; i < that.templateList.length; i++) {\n        if (that.templateList[i].first <= 0) {\n          return that.$Message.error('首件/重量/体积应大于0');\n        }\n\n        if (that.templateList[i].first_price < 0) {\n          return that.$Message.error('运费应大于等于0');\n        }\n\n        if (that.templateList[i].continue <= 0) {\n          return that.$Message.error('续件/重量/体积应大于0');\n        }\n\n        if (that.templateList[i].continue_price < 0) {\n          return that.$Message.error('续费应大于等于0');\n        }\n      }\n\n      if (that.formData.appoint_check === 1) {\n        for (var _i = 0; _i < that.appointList.length; _i++) {\n          if (that.appointList[_i].number <= 0) {\n            return that.$Message.error('包邮件数应大于0');\n          }\n\n          if (that.appointList[_i].price < 0) {\n            return that.$Message.error('包邮金额应大于等于0');\n          }\n        }\n      }\n\n      var data = {\n        no_delivery_info: that.noDeliveryList,\n        appoint_info: that.appointList,\n        region_info: that.templateList,\n        sort: that.formData.sort,\n        type: that.formData.type,\n        name: that.formData.name,\n        appoint: that.formData.appoint_check,\n        no_delivery: that.formData.no_delivery_check\n      };\n      templatesSaveApi(that.id, data).then(function (res) {\n        _this3.isTemplate = false;\n\n        _this3.$parent.getList();\n\n        _this3.formData = {\n          type: 1,\n          sort: 0,\n          name: '',\n          appoint_check: 0,\n          no_delivery_check: 0\n        };\n        _this3.appointList = [];\n        _this3.noDeliveryList = [];\n        _this3.templateList = [{\n          first: 1,\n          first_price: 0,\n          continue: 1,\n          continue_price: 0,\n          city_ids: [[0]]\n        }];\n\n        _this3.$Message.success(res.msg);\n      });\n    },\n    // 删除\n    delCity: function delCity(row, tit, num, type) {\n      var _this4 = this;\n\n      var delfromData = {\n        title: tit,\n        num: num,\n        url: \"setting/shipping_templates/del/\".concat(row.id),\n        method: 'DELETE',\n        ids: ''\n      };\n      this.$modalSure(delfromData).then(function (res) {\n        _this4.$Message.success(res.msg);\n\n        if (type === 1) {\n          _this4.templateList.splice(num, 1);\n        } else if (type == 2) {\n          _this4.appointList.splice(num, 1);\n        } else {\n          _this4.noDeliveryList.splice(num, 1);\n        }\n      }).catch(function (res) {\n        _this4.$Message.error(res.msg);\n      });\n    },\n    // 关闭\n    cancel: function cancel() {\n      this.formData = {\n        type: 1,\n        sort: 0,\n        name: '',\n        appoint_check: 0,\n        no_delivery_check: 0\n      };\n      this.noDeliveryList = [];\n      this.appointList = [];\n      this.templateList = [{\n        first: 0,\n        first_price: 0,\n        continue: 0,\n        continue_price: 0,\n        city_ids: [[0]]\n      }];\n    }\n  }\n};",null]}