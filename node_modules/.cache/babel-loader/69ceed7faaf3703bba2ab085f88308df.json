{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/statistic/user/components/wechetInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/statistic/user/components/wechetInfo.vue","mtime":1640264908000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { statisticWechatApi, statisticWechatTrendApi } from '@/api/statistic';\nimport echartsNew from '@/components/echartsNew/index';\nexport default {\n  name: \"wechetInfo\",\n  components: {\n    echartsNew: echartsNew\n  },\n  props: {\n    formInline: {\n      type: Object,\n      default: function _default() {\n        return {\n          channel_type: '',\n          data: ''\n        };\n      }\n    }\n  },\n  data: function data() {\n    return {\n      spinShow: false,\n      grid: {\n        xl: 8,\n        lg: 8,\n        md: 8,\n        sm: 24,\n        xs: 24\n      },\n      timeVal: [],\n      dataTime: '',\n      list: [],\n      optionData: {},\n      style: {\n        height: '400px'\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.getStatistics();\n    this.getTrend();\n  },\n  methods: {\n    // 具体日期\n    onchangeTime: function onchangeTime(e) {\n      this.timeVal = e;\n      this.dataTime = this.timeVal.join('-');\n      this.name = this.dataTime;\n      this.getStatistics();\n      this.getTrend(); // this.userFrom.user_time = this.timeVal.join('-')\n    },\n    // 统计\n    getStatistics: function getStatistics() {\n      var _this = this;\n\n      statisticWechatApi(this.formInline).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          var cardLists;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  cardLists = res.data;\n                  _this.list = [{\n                    name: '新增关注用户数',\n                    icon: 'iconxinzengguanzhuyonghu',\n                    list: cardLists.subscribe\n                  }, {\n                    name: '新增取关用户数',\n                    icon: 'iconxinzengquguanyonghu',\n                    list: cardLists.unSubscribe\n                  }, {\n                    name: '净增用户数',\n                    icon: 'iconjingzengyonghu',\n                    list: cardLists.increaseSubscribe\n                  }, {\n                    name: '累积关注用户数',\n                    icon: 'iconleijiguanzhuyonghu',\n                    list: cardLists.cumulativeSubscribe\n                  }, {\n                    name: '累积取关用户数',\n                    icon: 'iconleijiquguanyonghu',\n                    list: cardLists.cumulativeUnSubscribe\n                  }];\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this.$Message.error(res.msg);\n      });\n    },\n    // 统计图\n    getTrend: function getTrend() {\n      var _this2 = this;\n\n      this.spinShow = true;\n      statisticWechatTrendApi(this.formInline).then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(res) {\n          var legend, xAxis, col, series;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  legend = res.data.series.map(function (item) {\n                    return item.name;\n                  });\n                  xAxis = res.data.xAxis;\n                  col = ['#5B8FF9', '#5AD8A6', '#5D7092', '#5D7092'];\n                  series = [];\n                  res.data.series.map(function (item, index) {\n                    series.push({\n                      name: item.name,\n                      type: 'line',\n                      data: item.value,\n                      itemStyle: {\n                        normal: {\n                          color: col[index]\n                        }\n                      },\n                      smooth: true\n                    });\n                  });\n                  _this2.optionData = {\n                    tooltip: {\n                      trigger: 'axis',\n                      axisPointer: {\n                        type: 'cross',\n                        label: {\n                          backgroundColor: '#6a7985'\n                        }\n                      }\n                    },\n                    legend: {\n                      x: 'center',\n                      data: legend\n                    },\n                    grid: {\n                      left: '3%',\n                      right: '4%',\n                      bottom: '3%',\n                      containLabel: true\n                    },\n                    toolbox: {\n                      show: true,\n                      right: '2%',\n                      feature: {\n                        saveAsImage: {}\n                      }\n                    },\n                    xAxis: {\n                      type: 'category',\n                      boundaryGap: true,\n                      // axisTick:{\n                      //     show:false\n                      // },\n                      // axisLine:{\n                      //     show:false\n                      // },\n                      // splitLine: {\n                      //     show: false\n                      // },\n                      axisLabel: {\n                        interval: 0,\n                        rotate: 40,\n                        textStyle: {\n                          color: '#000000'\n                        }\n                      },\n                      data: xAxis\n                    },\n                    yAxis: {\n                      type: 'value',\n                      axisLine: {\n                        show: false\n                      },\n                      axisTick: {\n                        show: false\n                      },\n                      axisLabel: {\n                        textStyle: {\n                          color: '#7F8B9C'\n                        }\n                      },\n                      splitLine: {\n                        show: true,\n                        lineStyle: {\n                          color: '#F5F7F9'\n                        }\n                      }\n                    },\n                    series: series\n                  };\n                  _this2.spinShow = false;\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this2.$Message.error(res.msg);\n\n        _this2.spinShow = false;\n      });\n    }\n  }\n};",null]}