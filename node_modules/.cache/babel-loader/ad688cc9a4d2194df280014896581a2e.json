{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/eslint-loader/index.js??ref--13-0!/home/darkcrossunicorn/文档/admin/src/utils/public.js","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/utils/public.js","mtime":1664694304335},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// +----------------------------------------------------------------------\n// | HIGOSHOP [ HIGOSHOP助力中小企业数字化转型 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2020~2022 https://www.higoshop.net All rights reserved.\n// +----------------------------------------------------------------------\n// | Licensed HIGOSHOP并不是自由软件，未经许可不能去掉HIGOSHOP相关版权\n// +----------------------------------------------------------------------\n// | Author: HIGOSHOP Team <higoshop@126.com>\n// +----------------------------------------------------------------------\nimport { tableDelApi } from '@/api/common';\nexport function modalSure(delfromData) {\n  var _this = this;\n\n  return new Promise(function (resolve, reject) {\n    var content = '';\n\n    if (delfromData.info !== undefined) {\n      content = \"<p>\".concat(delfromData.title, \"</p><p>\").concat(delfromData.info, \"</p>\");\n    } else if (delfromData.tips !== undefined) {\n      content = \"<p>\".concat(delfromData.tips, \"</p>\");\n    } else {\n      content = \"<p>\\u786E\\u5B9A\\u8981\".concat(delfromData.title, \"\\u5417\\uFF1F</p><p>\").concat(delfromData.title, \"\\u540E\\u5C06\\u65E0\\u6CD5\\u6062\\u590D\\uFF0C\\u8BF7\\u8C28\\u614E\\u64CD\\u4F5C\\uFF01</p>\");\n    }\n\n    _this.$Modal.confirm({\n      title: delfromData.title,\n      content: content,\n      loading: true,\n      onOk: function onOk() {\n        setTimeout(function () {\n          _this.$Modal.remove();\n\n          if (delfromData.success) {\n            delfromData.success.then(\n            /*#__PURE__*/\n            function () {\n              var _ref = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee(res) {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        resolve(res);\n\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x) {\n                return _ref.apply(this, arguments);\n              };\n            }()).catch(function (res) {\n              reject(res);\n            });\n          } else {\n            tableDelApi(delfromData).then(\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee2(res) {\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        resolve(res);\n\n                      case 1:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }()).catch(function (res) {\n              reject(res);\n            });\n          }\n        }, 300);\n      },\n      onCancel: function onCancel() {// this.$Message.info('取消成功');\n      }\n    });\n  });\n}\nexport function getFileType(fileName) {\n  // 后缀获取\n  var suffix = ''; // 获取类型结果\n\n  var result = '';\n\n  try {\n    var flieArr = fileName.split('.');\n    suffix = flieArr[flieArr.length - 1];\n  } catch (err) {\n    suffix = '';\n  } // fileName无后缀返回 false\n\n\n  if (!suffix) {\n    return false;\n  }\n\n  suffix = suffix.toLocaleLowerCase(); // 图片格式\n\n  var imglist = ['png', 'jpg', 'jpeg', 'bmp', 'gif']; // 进行图片匹配\n\n  result = imglist.find(function (item) {\n    return item === suffix;\n  });\n\n  if (result) {\n    return 'image';\n  } // 匹配 视频\n\n\n  var videolist = ['mp4', 'm2v', 'mkv', 'rmvb', 'wmv', 'avi', 'flv', 'mov', 'm4v'];\n  result = videolist.find(function (item) {\n    return item === suffix;\n  });\n\n  if (result) {\n    return 'video';\n  } // 其他 文件类型\n\n\n  return 'other';\n}",null]}