{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/user/list/handle/userForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/user/list/handle/userForm.vue","mtime":1662690806000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/darkcrossunicorn/\\u6587\\u6863/admin/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { userLabelAddApi, groupAddApi, levelListApi, userGroupApi, userLabelApi, putUserApi } from '@/api/user';\nimport { cityApi } from '@/api/store';\nimport customerInfo from \"@/components/customerInfo\";\nimport userLabel from \"@/components/labelList\";\nexport default {\n  name: 'userForm',\n  components: {\n    customerInfo: customerInfo,\n    userLabel: userLabel\n  },\n  props: {\n    psInfo: Object\n  },\n  data: function data() {\n    return {\n      labelShow: false,\n      customerShow: false,\n      formData: {\n        uid: this.psInfo.uid,\n        real_name: this.psInfo.real_name,\n        phone: this.psInfo.phone,\n        birthday: this.psInfo.birthday,\n        sex: this.psInfo.sex,\n        card_id: this.psInfo.card_id,\n        addres: this.psInfo.addres,\n        pwd: '',\n        true_pwd: '',\n        spread_open: this.psInfo.spread_open,\n        status: this.psInfo.status,\n        group_id: 0,\n        label_id: [],\n        level: this.psInfo.level,\n        provincials: '',\n        province: 0,\n        city: 0,\n        area: 0,\n        street: 0,\n        spread_uid: 0,\n        spread_uid_nickname: ''\n      },\n      dataLabel: [],\n      addressSelect: [],\n      levelOptions: [],\n      labelOptions: [],\n      addresData: [],\n      groupList: []\n    };\n  },\n  watch: {\n    psInfo: function psInfo(value) {\n      this.formData.uid = value.uid;\n      this.formData.real_name = value.real_name;\n      this.formData.phone = value.phone;\n      this.formData.birthday = value.birthday;\n      this.formData.sex = value.sex;\n      this.formData.card_id = value.card_id;\n      this.formData.addres = value.addres;\n      this.formData.spread_open = value.spread_open;\n      this.formData.status = value.status;\n      this.dataLabel = value.label_id;\n      this.formData.level = value.level;\n      this.formData.provincials = value.provincials;\n      this.formData.province = value.province;\n      this.formData.city = value.city;\n      this.formData.area = value.area;\n      this.formData.street = value.street;\n      this.formData.spread_uid_nickname = value.spread_uid_nickname;\n      this.formData.spread_uid = value.spread_uid;\n      this.formData.group_id = value.group_id;\n    }\n  },\n  created: function created() {\n    this.levelList();\n    this.groupLists();\n    this.labelList();\n    this.cityInfo({\n      pid: 0\n    });\n\n    if (this.psInfo.province) {\n      this.addressSelect.push(this.psInfo.province);\n    }\n\n    if (this.psInfo.city) {\n      this.addressSelect.push(this.psInfo.city);\n    }\n\n    if (this.psInfo.area) {\n      this.addressSelect.push(this.psInfo.area);\n    }\n\n    if (this.psInfo.street) {\n      this.addressSelect.push(this.psInfo.street);\n    }\n  },\n  methods: {\n    clearSpread: function clearSpread() {\n      this.formData.spread_uid = 0;\n      this.formData.spread_uid_nickname = '';\n    },\n    closeLabel: function closeLabel(label) {\n      var index = this.dataLabel.indexOf(this.dataLabel.filter(function (d) {\n        return d.id == label.id;\n      })[0]);\n      this.dataLabel.splice(index, 1);\n    },\n    activeData: function activeData(dataLabel) {\n      this.labelShow = false;\n      this.dataLabel = dataLabel;\n    },\n    openLabel: function openLabel() {\n      this.labelShow = true;\n      this.$refs.userLabel.userLabel(JSON.parse(JSON.stringify(this.dataLabel)));\n    },\n    // 标签弹窗关闭\n    labelClose: function labelClose() {\n      this.labelShow = false;\n    },\n    editSpread: function editSpread() {\n      this.customerShow = true;\n    },\n    imageObject: function imageObject(e) {\n      this.customerShow = false;\n      this.formData.spread_uid = e.uid;\n      this.formData.spread_uid_nickname = e.name;\n    },\n    changeMenu: function changeMenu(value) {\n      this.$emit('change-menu', value);\n    },\n    // 添加标签、分组\n    add: function add(value) {\n      var _this = this;\n\n      switch (value) {\n        case 1:\n          this.$modalForm(userLabelAddApi(0)).then(function () {});\n          break;\n\n        case 2:\n          this.$modalForm(groupAddApi(0)).then(function () {\n            _this.groupLists();\n          });\n          break;\n      }\n    },\n    // 会员等级列表\n    levelList: function levelList() {\n      var _this2 = this;\n\n      var data = {\n        page: 1,\n        limit: \"\",\n        title: \"\",\n        is_show: 1\n      };\n      levelListApi(data).then(function (res) {\n        _this2.levelOptions = res.data.list;\n      });\n    },\n    groupLists: function groupLists() {\n      var _this3 = this;\n\n      var data = {\n        page: 1,\n        limit: \"\"\n      };\n      userGroupApi(data).then(function (res) {\n        _this3.groupList = res.data.list;\n      });\n    },\n    labelList: function labelList() {\n      var _this4 = this;\n\n      var data = {\n        page: 1,\n        limit: \"\"\n      };\n      userLabelApi(data).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          var data;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  data = res.data;\n                  _this4.labelOptions = data.list;\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        _this4.loading = false;\n\n        _this4.$Message.error(res.msg);\n      });\n    },\n    // 省市区数据\n    cityInfo: function cityInfo(data) {\n      var _this5 = this;\n\n      cityApi(data).then(function (res) {\n        _this5.addresData = res.data;\n      });\n    },\n    loadData: function loadData(item, callback) {\n      item.loading = true;\n      cityApi({\n        pid: item.value\n      }).then(function (res) {\n        item.children = res.data;\n        item.loading = false;\n        callback();\n      });\n    },\n    addchack: function addchack(e, selectedData) {\n      var _this6 = this;\n\n      e.forEach(function (i, index) {\n        if (index == 0) {\n          _this6.formData.province = i;\n        } else if (index == 1) {\n          _this6.formData.city = i;\n        } else if (index == 2) {\n          _this6.formData.area = i;\n        } else {\n          _this6.formData.street = i;\n        }\n      });\n      this.formData.provincials = selectedData.map(function (o) {\n        return o.label;\n      }).join(\"/\");\n    },\n    dateChange: function dateChange(value) {\n      this.formData.birthday = value;\n    },\n    // 保存用户信息\n    detailsPut: function detailsPut() {\n      var _this7 = this;\n\n      var activeIds = [];\n      this.dataLabel.forEach(function (item) {\n        activeIds.push(item.id);\n      });\n      this.formData.label_id = activeIds;\n\n      if (this.formData.phone && !/^1(3|4|5|7|8|9|6)\\d{9}$/.test(this.formData.phone)) {\n        return this.$Message.error('请填写正确的手机号');\n      }\n\n      putUserApi(this.formData).then(function (res) {\n        _this7.$Message.success('修改成功');\n\n        _this7.$emit('change-menu', '99');\n      }).catch(function (res) {\n        _this7.$Message.error(res.msg);\n      });\n    }\n  }\n};",null]}