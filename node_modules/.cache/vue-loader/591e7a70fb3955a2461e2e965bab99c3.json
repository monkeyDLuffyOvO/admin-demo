{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/setting/user/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/setting/user/index.vue","mtime":1652232731000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vcode from \"vue-puzzle-vcode\";\nimport { updtaeAdmin, setInfo } from \"@/api/user\";\nimport uploadPictures from \"@/components/uploadPictures\";\nimport { mapState } from \"vuex\";\nimport Setting from \"@/setting\";\nimport axios from \"axios\";\nimport util from \"@/libs/util\";\nexport default {\n  name: \"setting_user\",\n  components: { uploadPictures,Vcode },\n  computed: {\n    ...mapState(\"admin/layout\", [\"isMobile\"]),\n    ...mapState(\"admin/userLevel\", [\"categoryId\"]),\n    labelWidth() {\n      return this.isMobile ? undefined : 75;\n    },\n    labelPosition() {\n      return this.isMobile ? \"top\" : \"left\";\n    },\n  },\n  data() {\n    return {\n      modalPic: false,\n      isChoice: \"单选\",\n      account: \"\",\n      formValidate: {\n        head_pic: \"\",\n        real_name: \"\",\n        pwd: \"\",\n        new_pwd: \"\",\n        conf_pwd: \"\",\n        phone:\"\"\n      },\n      formPhone: {\n        phone: \"\",\n        code: \"\",\n      },\n      rulesPhone: {\n        phone: [{ required: true, message: \"手机号不能为空\", trigger: \"blur\" }],\n        code: [{ required: true, message: \"验证码不能为空\", trigger: \"blur\" }],\n      },\n      formPwd:{\n          pwd:\"\",\n          new_pwd:\"\",\n          conf_pwd:\"\"\n      },\n      rulesPwd:{\n          pwd: [{ required: true, message: \"原密码不能为空\", trigger: \"blur\" }],\n          new_pwd: [{ required: true, message: \"新密码不能为空\", trigger: \"blur\" }],\n          conf_pwd: [{ required: true, message: \"请确认密码\", trigger: \"blur\" }],\n      },\n      formName:{\n          real_name:\"\"\n      },\n      rulesName:{\n          real_name: [{ required: true, message: \"姓名不能为空\", trigger: \"blur\" }],\n      },\n      gridPic: {\n        xl: 6,\n        lg: 8,\n        md: 12,\n        sm: 12,\n        xs: 12,\n      },\n      gridBtn: {\n        xl: 4,\n        lg: 8,\n        md: 8,\n        sm: 8,\n        xs: 8,\n      },\n      updatePhone: false,\n      updatePassword:false,\n      updateName:false,\n      cutNUm: \"获取验证码\",\n      canClick: true,\n      isShow: false, // 验证码模态框是否出现\n    };\n  },\n  mounted() {\n    // const db = await this.$store.dispatch('admin/db/database', {\n    //     user: true\n    // });\n    // this.account = db.get('user_info').value().account;\n    this.getInfo();\n  },\n  methods: {\n    // 选择图片\n    modalPicTap() {\n      this.modalPic = true;\n    },\n    // 选中图片\n    getPic(pc) {\n      this.formValidate.head_pic = pc.att_dir;\n      updtaeAdmin({head_pic:pc.att_dir})\n        .then((res) => {\n            this.$Message.success(res.msg);\n            this.modalPic = false;\n        }).catch((res) => {\n            this.$Message.error(res.msg);\n        });\n    },\n    getInfo() {\n      setInfo()\n        .then((res) => {\n          let data = res.data;\n          this.account = data.account;\n          this.formValidate.head_pic = data.head_pic;\n          this.formValidate.real_name = data.real_name;\n          this.formValidate.phone = data.phone;\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n    handleSubmit(name) {\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          updtaeAdmin(this.formValidate)\n            .then((res) => {\n              this.$Message.success(res.msg);\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg);\n            });\n        } else {\n          if (this.formValidate.new_pwd !== this.formValidate.conf_pwd) {\n            this.$Message.error(\"您输入的新密码与旧密码不一致\");\n          }\n        }\n      });\n    },\n    showModal(name) {\n      this[name] = true;\n    },\n    phoneUpdate() {\n      this.$refs.formPhone.validate((valid) => {\n        if (valid) {\n          updtaeAdmin(this.formPhone)\n            .then((res) => {\n              this.$Message.success(res.msg);\n              this.$refs.formPhone.resetFields()\n              this.updatePhone = false;\n              this.getInfo();\n          }).catch((res) => {\n              this.$Message.error(res.msg);\n          });\n        }\n      });\n    },\n    pwdUpdate(){\n        if(this.formPwd.new_pwd !== this.formPwd.conf_pwd ) return this.$Message.warning(\"新密码与确认密码不一致\");\n        this.$refs.formPwd.validate((valid) => {\n        if (valid) {\n          updtaeAdmin(this.formPwd)\n            .then((res) => {\n              this.$Message.success(res.msg);\n              this.$refs.formPwd.resetFields()\n              this.updatePassword = false;\n          }).catch((res) => {\n              this.$Message.error(res.msg);\n          });\n        }\n      });\n    },\n    nameUpdate(){\n      this.$refs.formName.validate((valid) => {\n        if (valid) {\n          updtaeAdmin(this.formName)\n            .then((res) => {\n              this.$Message.success(res.msg);\n              this.$refs.formName.resetFields()\n              this.updateName = false;\n              this.getInfo();\n          }).catch((res) => {\n              this.$Message.error(res.msg);\n          });\n        }\n      });\n    },\n    handleCancle(name) {\n        this[name] = false;\n    },\n    // 短信验证码\n    cutDown() {\n      if (this.formPhone.phone) {\n        if(!this.formPhone.phone) return this.$Message.warning(\"请输入手机号码\");\n        if(!/^1(3|4|5|7|8|9|6)\\d{9}$/i.test(this.formPhone.phone)) return this.$Message.warning(\"请输入正确的手机号码\");\n        this.isShow = true;\n      } else {\n        this.$Message.warning(\"请填写手机号!\");\n      }\n    },\n    onSuccess() {\n      this.isShow = false; // 通过验证后，需要手动隐藏模态框\n      if (!this.canClick) return;\n      this.canClick = false;\n      this.cutNUm = 60;\n      let verification = Setting.apiBaseURL.replace(/adminapi/, \"api\");\n      axios.get(verification + \"/verify_code\").then((res) => {\n        let codeData = {\n          type: \"login\",\n          phone: this.formPhone.phone,\n          key: res.data.data.key,\n          code: \"\",\n        };\n        fetch(verification + \"/register/verify\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(codeData),\n        })\n          .then((response) => {\n            let time = setInterval(() => {\n              this.cutNUm--;\n              if (this.cutNUm === 0) {\n                this.cutNUm = \"获取验证码\";\n                this.canClick = true;\n                clearInterval(time);\n              }\n            }, 1000);\n          })\n          .catch((err) => {\n            this.$Message.error(err.msg);\n          });\n      });\n    },\n    // 用户点击遮罩层，应该关闭模态框\n    onClose() {\n      this.isShow = false;\n    },\n  },\n};\n",null]}