{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/components/freightTemplate/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/components/freightTemplate/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import 'element-ui/lib/theme-chalk/index.css';\n    import { mapState } from 'vuex';\n    import city from '@/components/freightTemplate/city';\n    import { templatesSaveApi, shipTemplatesApi, cityData } from '@/api/setting';\n    import LazyCascader from '../lazyCascader'\n    const cacheAddress = {}\n    export default {\n        name: 'freightTemplate',\n        components: { LazyCascader },\n        props: {\n        },\n        data () {\n            let that = this;\n            return {\n                props: {\n                    children: 'children',\n                    label: 'label',\n                    value: 'value',\n                    multiple: true,\n                    lazy: true,\n                    lazyLoad: this.lazyLoad,\n                    checkStrictly: true\n                },\n                // propsData:{\n                //     multiple: true,\n                //     checkStrictly: true,\n                //     lazy: true,\n                //     lazyLoad (node, resolve) {\n                //         cityData({pid:node?node.value:0}).then(res=>{\n                //             let nodes = res.data\n                //             nodes.forEach(item => {\n                //                 item.leaf = !item.hasOwnProperty('children')\n                //             })\n                //             resolve(nodes)\n                //         }).catch(err=>{\n                //             this.$Message.error(err.msg)\n                //         })\n                //     }\n                // },\n                isTemplate: false,\n                columns: [\n                    {\n                        title: '可配送区域',\n                        slot: 'regionName',\n                        minWidth: 200\n                    },\n                    {\n                        title: '首件',\n                        key: 'first',\n                        minWidth: 70,\n                        render: (h, params) => {\n                            return h('Input', {\n                                props: {\n                                    type: 'number',\n                                    // size: 'small',\n                                    value: that.templateList[params.index].first // 此处如何让数据双向绑定\n                                },\n                                on: {\n                                    'on-change': (event) => {\n                                        that.templateList[params.index].first = event.target.value;\n                                    }\n                                }\n                            })\n                        }\n                    },\n                    {\n                        title: '运费（元）',\n                        key: 'price',\n                        minWidth: 70,\n                        render: (h, params) => {\n                            return h('Input', {\n                                props: {\n                                    type: 'number',\n                                    // size: 'small',\n                                    value: that.templateList[params.index].first_price // 此处如何让数据双向绑定\n                                },\n                                on: {\n                                    'on-change': (event) => {\n                                        that.templateList[params.index].first_price = event.target.value;\n                                    }\n                                }\n                            })\n                        }\n                    },\n                    {\n                        title: '续件',\n                        key: 'continue',\n                        minWidth: 70,\n                        render: (h, params) => {\n                            return h('Input', {\n                                props: {\n                                    type: 'number',\n                                    // size: 'small',\n                                    value: that.templateList[params.index].continue // 此处如何让数据双向绑定\n                                },\n                                on: {\n                                    'on-change': (event) => {\n                                        that.templateList[params.index].continue = event.target.value;\n                                    }\n                                }\n                            })\n                        }\n                    },\n                    {\n                        title: '续费（元）',\n                        key: 'continue_price',\n                        minWidth: 70,\n                        render: (h, params) => {\n                            return h('Input', {\n                                props: {\n                                    type: 'number',\n                                    // size: 'small',\n                                    value: that.templateList[params.index].continue_price // 此处如何让数据双向绑定\n                                },\n                                on: {\n                                    'on-change': (event) => {\n                                        that.templateList[params.index].continue_price = event.target.value;\n                                    }\n                                }\n                            })\n                        }\n                    },\n                    {\n                        title: '操作',\n                        slot: 'action',\n                        minWidth: 70\n                    }\n                ],\n                columns2: [\n                    {\n                        title: '选择地区',\n                        slot: 'placeName',\n                        minWidth: 250\n                    },\n                    {\n                        title: '包邮件数',\n                        key: 'number',\n                        minWidth: 100,\n                        render: (h, params) => {\n                            return h('Input', {\n                                props: {\n                                    type: 'number',\n                                    // size: 'small',\n                                    value: that.appointList[params.index].number // 此处如何让数据双向绑定\n                                },\n                                on: {\n                                    'on-change': (event) => {\n                                        that.appointList[params.index].number = event.target.value;\n                                    }\n                                }\n                            })\n                        }\n                    },\n                    {\n                        title: '包邮金额（元）',\n                        key: 'price',\n                        minWidth: 100,\n                        render: (h, params) => {\n                            return h('Input', {\n                                props: {\n                                    type: 'number',\n                                    // size: 'small',\n                                    value: that.appointList[params.index].price // 此处如何让数据双向绑定\n                                },\n                                on: {\n                                    'on-change': (event) => {\n                                        that.appointList[params.index].price = event.target.value;\n                                    }\n                                }\n                            })\n                        }\n                    },\n                    {\n                        title: '操作',\n                        slot: 'action',\n                        minWidth: 100\n                    }\n                ],\n                columns3: [\n                {\n                  title: '选择地区',\n                  slot: 'placeName',\n                  minWidth: 250\n                },\n                {\n                  title: '操作',\n                  slot: 'action',\n                  minWidth: 100\n                }\n              ],\n                templateList: [\n                    {\n                        first: 1,\n                        first_price: 0,\n                        continue: 1,\n                        continue_price: 0,\n                        city_ids: [[0]]\n                    }\n                ],\n                appointList: [],\n                noDeliveryList: [],\n                formData: {\n                    type: 1,\n                    sort: 0,\n                    name: '',\n                    appoint_check: 0,\n                    no_delivery_check: 0\n                },\n                id: 0\n            }\n        },\n        computed: {\n            ...mapState('admin/layout', [\n                'isMobile'\n            ]),\n            labelWidth () {\n                return this.isMobile ? undefined : 120;\n            },\n            labelPosition () {\n                return this.isMobile ? 'top' : 'right';\n            }\n        },\n        mounted(){\n        },\n        methods: {\n            lazyLoad(node, resolve) {\n   \n                if (cacheAddress[node]) {\n                    cacheAddress[node]().then(res => {\n                        resolve([...res.data])\n                    })\n                } else {\n                    const p = cityData({pid:node})\n                    cacheAddress[node] = () => p\n                    p.then(res => {\n                        res.data.forEach(item => {\n                            item.leaf = !item.hasOwnProperty('children')\n                        })\n                        cacheAddress[node] = () => new Promise((resolve1) => {\n                            setTimeout(() => resolve1(res), 300)\n                        })\n                        resolve(res.data)\n                    }).catch(res => {\n                        this.$message.error(res.message)\n                    })\n                }\n            },\n            onChange(e){\n                // this.appointList\n     \n            },\n            editFrom (id) {\n                this.id = id;\n\n                shipTemplatesApi(id).then(res => {\n                    let formData = res.data.formData;\n                    this.templateList = res.data.templateList;\n                    this.appointList = res.data.appointList;\n                    this.noDeliveryList = res.data.noDeliveryList;\n                    this.formData = {\n                        type: formData.type,\n                        sort: formData.sort,\n                        name: formData.name,\n                        appoint_check: formData.appoint_check,\n                        no_delivery_check: formData.no_delivery_check\n                    }\n                    this.headerType();\n                })\n            },\n            selectCity: function (type) {\n                switch (type) {\n                case 1:\n                    this.templateList.push({\n                        first: 1,\n                        first_price: 0,\n                        continue: 1,\n                        continue_price: 0,\n                        city_ids: []\n                    });\n                    break;\n                case 2:\n                    this.appointList.push({\n                        placeName: '',\n                        number: 0,\n                        price: 0,\n                        city_ids: []\n                    });\n                    break;\n                  case 3:\n                    this.noDeliveryList.push({\n                      placeName: '',\n                      city_ids: []\n                    });\n                    break;\n                }\n            },\n            // 单独添加配送区域\n            addCity (type) {\n                this.type = type;\n                this.selectCity(type);\n            },\n            changeRadio () {\n                this.headerType();\n            },\n            headerType () {\n                let that = this;\n                if (this.formData.type === 2) {\n                    that.columns[1].title = '首重量(KG)'\n                    that.columns[3].title = '续重量(KG)'\n                    that.columns2[1].title = '包邮重量(KG)'\n                } else if (this.formData.type === 3) {\n                    that.columns[1].title = '首体积(m³)'\n                    that.columns[3].title = '续体积(m³)'\n                    that.columns2[1].title = '包邮体积(m³)'\n                } else {\n                    that.columns[1].title = '首件'\n                    that.columns[3].title = '续件'\n                    that.columns2[1].title = '包邮件数'\n                }\n            },\n            // 提交\n            handleSubmit: function () {\n                let that = this;\n                if (!that.formData.name.trim().length) {\n                    return that.$Message.error('请填写模板名称');\n                }\n\t\t\t\t\t\t\t\tif(!that.templateList.length){\n\t\t\t\t\t\t\t\t\treturn that.$Message.error('请设置配送区域');\n\t\t\t\t\t\t\t\t}\n                for (let i = 0; i < that.templateList.length; i++) {\n                    if (that.templateList[i].first <= 0) {\n                        return that.$Message.error('首件/重量/体积应大于0');\n                    }\n                    if (that.templateList[i].first_price < 0) {\n                        return that.$Message.error('运费应大于等于0');\n                    }\n                    if (that.templateList[i].continue <= 0) {\n                        return that.$Message.error('续件/重量/体积应大于0');\n                    }\n                    if (that.templateList[i].continue_price < 0) {\n                        return that.$Message.error('续费应大于等于0');\n                    }\n                }\n                if (that.formData.appoint_check === 1) {\n                    for (let i = 0; i < that.appointList.length; i++) {\n                        if (that.appointList[i].number <= 0) {\n                            return that.$Message.error('包邮件数应大于0');\n                        }\n                        if (that.appointList[i].price < 0) {\n                            return that.$Message.error('包邮金额应大于等于0');\n                        }\n                    }\n                }\n                let data = {\n                    no_delivery_info: that.noDeliveryList,\n                    appoint_info: that.appointList,\n                    region_info: that.templateList,\n                    sort: that.formData.sort,\n                    type: that.formData.type,\n                    name: that.formData.name,\n                    appoint: that.formData.appoint_check,\n                    no_delivery: that.formData.no_delivery_check\n                };\n                templatesSaveApi(that.id, data).then(res => {\n                    this.isTemplate = false;\n                    this.$parent.getList();\n                    this.formData = {\n                        type: 1,\n                        sort: 0,\n                        name: '',\n                        appoint_check: 0,\n                        no_delivery_check: 0\n                    };\n                    this.appointList = [];\n                    this.noDeliveryList = [];\n                    this.templateList = [\n                        {\n                            first: 1,\n                            first_price: 0,\n                            continue: 1,\n                            continue_price: 0,\n                            city_ids: [[0]]\n                        }\n                    ];\n                    this.$Message.success(res.msg);\n                });\n            },\n            // 删除\n            delCity (row, tit, num, type) {\n                let delfromData = {\n                    title: tit,\n                    num: num,\n                    url: `setting/shipping_templates/del/${row.id}`,\n                    method: 'DELETE',\n                    ids: ''\n                };\n                this.$modalSure(delfromData).then((res) => {\n                    this.$Message.success(res.msg);\n                    if (type === 1) {\n                        this.templateList.splice(num, 1);\n                    } else if(type == 2){\n                        this.appointList.splice(num, 1);\n                    }else {\n                        this.noDeliveryList.splice(num, 1);\n                    }\n                }).catch(res => {\n                    this.$Message.error(res.msg);\n                });\n            },\n            // 关闭\n            cancel () {\n                this.formData = {\n                    type: 1,\n                    sort: 0,\n                    name: '',\n                    appoint_check: 0,\n                    no_delivery_check: 0\n                };\n                this.noDeliveryList = [];\n                this.appointList = [];\n                this.templateList = [\n                    {\n                        first: 0,\n                        first_price: 0,\n                        continue: 0,\n                        continue_price: 0,\n                        city_ids: [[0]]\n                    }\n                ];\n            }\n        }\n    }\n",null]}