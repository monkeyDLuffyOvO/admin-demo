{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/components/echarts/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/components/echarts/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\n    import echarts from 'echarts'\n    export default {\n        name: 'index',\n        props: {\n            infoList: {\n                type: Object,\n                default: null\n            },\n              styles: {\n                type: Object,\n                default: null\n            },\n            series: Array,\n            echartsTitle: {\n                type: String,\n                default: ''\n            },\n            yAxisData: {\n                type: Array,\n                default: () => []\n            },\n            bingXdata: Array\n        },\n        data () {\n            return {\n                infoLists: this.infoList,\n                seriesArray: this.series\n            }\n        },\n        watch: {\n            infoList: {\n                handler (newVal, oldVal) {\n                    this.infoLists = newVal\n                    this.handleSetVisitChart()\n                },\n                deep: true // 对象内部属性的监听，关键。\n            },\n            series: {\n                handler (newVal, oldVal) {\n                    this.seriesArray = newVal\n                    this.handleSetVisitChart()\n                },\n                deep: true // 对象内部属性的监听，关键。\n            }\n        },\n        computed: {\n\n            echarts () {\n                return 'echarts' + Math.ceil(Math.random() * 100)\n            }\n        },\n        mounted: function () {\n            const vm = this\n            vm.$nextTick(() => {\n                vm.handleSetVisitChart()\n                window.addEventListener('resize', this.wsFunc)\n            })\n        },\n        methods: {\n            wsFunc() {\n                this.myChart.resize()\n            },\n            handleSetVisitChart () {\n                this.myChart = echarts.init(document.getElementById(this.echarts))\n                let option = null\n                if (this.echartsTitle === 'circle') {\n                    option = {\n                        tooltip: {\n                            trigger: 'item',\n                            formatter: '{a} <br/>{b} : {c} ({d}%)'\n                        },\n                        legend: {\n                            orient: 'vertical',\n                            left: 'left',\n                            data: this.infoLists.bing_xdata || []\n                        },\n                        series: [\n                            {\n                                name: '',\n                                type: 'pie',\n                                radius: '60%',\n                                center: ['50%', '50%'],\n                                data: this.infoLists.bing_data || [],\n                                emphasis: {\n                                    itemStyle: {\n                                        shadowBlur: 10,\n                                        shadowOffsetX: 0,\n                                        shadowColor: 'rgba(0, 0, 0, 0.5)'\n                                    }\n                                }\n                            }\n                        ]\n                    }\n                } else if(this.echartsTitle === 'circle1'){\n\t\t\t\t\toption = {\n\t\t\t\t\t    tooltip: {\n\t\t\t\t\t        trigger: 'item',\n\t\t\t\t\t\t\tformatter: '{b} : {c} ({d}%)'\n\t\t\t\t\t    },\n\t\t\t\t\t    legend: {\n\t\t\t\t\t\t\ticon: \"circle\", \n\t\t\t\t\t        top: '5%',\n\t\t\t\t\t        left: 'center',\n\t\t\t\t\t\t\tfontSize: '12',\n\t\t\t\t\t\t\tdata: this.infoLists.bing_xdata || []\n\t\t\t\t\t    },\n\t\t\t\t\t    series: [\n\t\t\t\t\t        {\n\t\t\t\t\t            name: '访问来源',\n\t\t\t\t\t            type: 'pie',\n\t\t\t\t\t            radius: ['30%', '60%'],\n\t\t\t\t\t            avoidLabelOverlap: false,\n\t\t\t\t\t            label: {\n\t\t\t\t\t                show: true,\n\t\t\t\t\t\t\t\t\tformatter: '{d}%',\n\t\t\t\t\t                position: 'inner',\n\t\t\t\t\t\t\t\t\tfontSize: '12',\n\t\t\t\t\t            },\n\t\t\t\t\t            emphasis: {\n\t\t\t\t\t                label: {\n\t\t\t\t\t                    show: true,\n\t\t\t\t\t                    fontSize: '15',\n\t\t\t\t\t                    fontWeight: 'bold'\n\t\t\t\t\t                },\n\t\t\t\t\t            },\n\t\t\t\t\t            labelLine: {\n\t\t\t\t\t                show: false\n\t\t\t\t\t            },\n\t\t\t\t\t           data: this.infoLists.bing_data || [],\n\t\t\t\t\t        }\n\t\t\t\t\t    ]\n\t\t\t\t\t}\n\t\t\t\t}  else if(this.echartsTitle === 'inlie'){\n\t\t\t\t\toption = {\n\t\t\t\t\t    tooltip: {\n\t\t\t\t\t        trigger: 'axis'\n\t\t\t\t\t    },\n\t\t\t\t\t    toolbox: {},\n\t\t\t\t\t    legend: {\n\t\t\t\t\t\t\ticon: \"line\",\n\t\t\t\t\t\t\tleft: 'left',\n\t\t\t\t\t\t\tfontWeight: '100',\n\t\t\t\t\t        data: this.infoLists.legend || []\n\t\t\t\t\t    },\n\t\t\t\t\t    color: ['#1495EB', '#00CC66', '#F9D249', '#ff9900', '#9860DF'],\n\t\t\t\t\t    grid: {\n\t\t\t\t\t        left: 16,\n\t\t\t\t\t        right: 25,\n\t\t\t\t\t        bottom: 10,\n\t\t\t\t\t        top: 40,\n\t\t\t\t\t        containLabel: true\n\t\t\t\t\t    },\n\t\t\t\t\t    xAxis: [\n\t\t\t\t\t        {\n\t\t\t\t\t            type: 'category',\n\t\t\t\t\t            axisLine: {\n\t\t\t\t\t                lineStyle: {\n\t\t\t\t\t                    color: '#D7DDE4'\n\t\t\t\t\t                }\n\t\t\t\t\t            },\n\t\t\t\t\t            axisTick: {\n\t\t\t\t\t                alignWithLabel: true,\n\t\t\t\t\t                lineStyle: {\n\t\t\t\t\t                    color: '#D7DDE4'\n\t\t\t\t\t                }\n\t\t\t\t\t            },\n\t\t\t\t\t            splitLine: {\n\t\t\t\t\t                show: false,\n\t\t\t\t\t                lineStyle: {\n\t\t\t\t\t                    color: '#F5F7F9'\n\t\t\t\t\t                }\n\t\t\t\t\t            },\n\t\t\t\t\t            axisLabel: {\n\t\t\t\t\t                interval: 0,\n\t\t\t\t\t                rotate: 40,\n\t\t\t\t\t                textStyle: {\n\t\t\t\t\t                    color: '#7F8B9C'\n\t\t\t\t\t                }\n\t\t\t\t\t            },\n\t\t\t\t\t            data: this.infoLists.xAxis\n\t\t\t\t\t        }\n\t\t\t\t\t    ],\n\t\t\t\t\t    yAxis: this.yAxisData.length?this.yAxisData:{\n\t\t\t\t\t        axisLine: {\n\t\t\t\t\t            show: false\n\t\t\t\t\t        },\n\t\t\t\t\t        axisTick: {\n\t\t\t\t\t            show: false\n\t\t\t\t\t        },\n\t\t\t\t\t        axisLabel: {\n\t\t\t\t\t            textStyle: {\n\t\t\t\t\t                color: '#7F8B9C'\n\t\t\t\t\t            }\n\t\t\t\t\t        },\n\t\t\t\t\t        splitLine: {\n\t\t\t\t\t            show: true,\n\t\t\t\t\t            lineStyle: {\n\t\t\t\t\t                color: '#F5F7F9'\n\t\t\t\t\t            }\n\t\t\t\t\t        },\n\t\t\t\t\t        type: 'value'\n\t\t\t\t\t    },\n\t\t\t\t\t    series: this.seriesArray\n\t\t\t\t\t}\n\t\t\t\t} else {\n                    option = {\n                        tooltip: {\n                            trigger: 'axis'\n                        },\n                        toolbox: {},\n                        legend: {\n                            data: this.infoLists.legend || []\n                        },\n                        color: ['#1495EB', '#00CC66', '#F9D249', '#ff9900', '#9860DF'],\n                        grid: {\n                            left: 16,\n                            right: 25,\n                            bottom: 10,\n                            top: 40,\n                            containLabel: true\n                        },\n                        xAxis: [\n                            {\n                                type: 'category',\n                                axisLine: {\n                                    lineStyle: {\n                                        color: '#D7DDE4'\n                                    }\n                                },\n                                axisTick: {\n                                    alignWithLabel: true,\n                                    lineStyle: {\n                                        color: '#D7DDE4'\n                                    }\n                                },\n                                splitLine: {\n                                    show: false,\n                                    lineStyle: {\n                                        color: '#F5F7F9'\n                                    }\n                                },\n                                // axisPointer: {\n                                //     type: 'shadow'\n                                // },\n                                axisLabel: {\n                                    interval: 0,\n                                    rotate: 40,\n                                    textStyle: {\n                                        color: '#7F8B9C'\n                                    }\n                                },\n                                data: this.infoLists.xAxis\n                            }\n                        ],\n                        yAxis: this.yAxisData.length?this.yAxisData:{\n                            axisLine: {\n                                show: false\n                            },\n                            axisTick: {\n                                show: false\n                            },\n                            axisLabel: {\n                                textStyle: {\n                                    color: '#7F8B9C'\n                                }\n                            },\n                            splitLine: {\n                                show: true,\n                                lineStyle: {\n                                    color: '#F5F7F9'\n                                }\n                            },\n                            type: 'value'\n                        },\n                        series: this.seriesArray\n                    }\n                }\n\t\t\t\t// 基于准备好的dom，初始化echarts实例\n\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\tthis.wsFunc()\n\t\t\t\t\tthis.myChart.setOption(option, true)\n\t\t\t\t},200)\n            },\n            handleResize () {\n                this.myChart.resize()\n            }\n        },\n        beforeDestroy () {\n            window.removeEventListener('resize', this.wsFunc)\n            if (!this.myChart) {\n                return\n            }\n            this.myChart.dispose()\n            this.myChart = null\n        }\n    }\n",null]}