{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/kefu/pc/components/chatList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/kefu/pc/components/chatList.vue","mtime":1652772673000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import { Socket } from '@/libs/socket';\n    import dayjs from 'dayjs'\n    import { record } from '@/api/kefu'\n    import { HappyScroll } from 'vue-happy-scroll'\n    import empty from '../../components/empty';\n    export default {\n        name: 'chatList',\n        props: {\n            userOnline: {\n                type: Object,\n                default: function () {\n                    return {}\n                }\n            },\n            newRecored: {\n                type: Object,\n                default: function () {\n                    return {}\n                }\n            },\n            searchData: {\n                type: String,\n                default: ''\n            },\n            isShow:{\n                type:Boolean,\n                default:false\n            }\n        },\n        components: {\n            HappyScroll,\n            empty\n        },\n        watch: {\n            userOnline: {\n                handler (nVal, oVal) {\n                    if (nVal.hasOwnProperty('to_uid')) {\n                        this.userList.forEach((el, index) => {\n                            if (el.to_uid == nVal.to_uid) {\n                                el.online = nVal.online\n                                if (nVal.online == 1) {\n                                    this.$Notice.info({\n                                        title: '上线通知',\n                                        desc: `${el.nickname}上线`\n                                    });\n                                }\n                            }\n                        })\n                    }\n                },\n                deep: true\n            },\n            searchData: {\n                handler (nVal, oVal) {\n                    if (nVal != oVal) {\n                        this.nickname = nVal\n                        this.page = 1\n                        this.isScroll = true\n                        this.userList = []\n                        this.isSearch = true\n                        this.getList()\n                    }\n                },\n                deep: true\n            },\n            isShow:{\n                handler (nVal, oVal) {\n                    if (nVal) {\n                        this.wsStart()\n                    }\n                },\n                deep: true\n            }\n        },\n        data () {\n            return {\n                hdTabCur: 0,\n                hdTab: [\n                    {\n                        key: 0,\n                        title: '用户列表'\n                    },\n                    {\n                        key: 1,\n                        title: '游客列表'\n                    }\n                ],\n                userList: [],\n                curId: '',\n                page: 1,\n                limit: 15,\n                isScroll: true,\n                nickname: '',\n                isSearch: false,\n                ops: {\n                    vuescroll: {\n                        mode: 'native',\n                        enable: false,\n                        tips: {\n                            deactive: 'Push to Load',\n                            active: 'Release to Load',\n                            start: 'Loading...',\n                            beforeDeactive: 'Load Successfully!'\n                        },\n                        auto: false,\n                        autoLoadDistance: 0,\n                        pullRefresh: {\n                            enable: false\n                        },\n                        pushLoad: {\n                            enable: true,\n                            auto: true,\n                            autoLoadDistance: 10\n                        }\n                    },\n                    bar: {\n                        background: '#393232',\n                        opacity: '.5',\n                        size: '5px'\n                    }\n                }\n            }\n        },\n        filters: {\n            toDay: function (value) {\n                if (!value) return ''\n                return dayjs.unix(value).format('M月D日 HH:mm')\n            }\n        },\n        mounted () {\n            let that = this\n            this.bus.$on('change', data => {\n                this.nickname = data\n            })\n            this.getList()\n        },\n        methods: {\n            wsStart(){\n                let that = this\n                this.bus.pageWs.then(ws => {\n                    // 用户转接\n                    ws.$on('transfer', data => {\n                        let status = false\n                        that.userList.forEach((el, index, arr) => {\n                            if (data.recored.id == el.id) {\n                                status = true\n                                if (data.recored.is_tourist == that.hdTabCur) {\n                                    let oldVal = data.recored\n                                    arr.splice(index, 1)\n\n                                    if (index == 0) {\n                                        this.$emit('setDataId', oldVal)\n                                        oldVal.mssage_num = 0\n                                    }\n                                    arr.unshift(oldVal)\n                                }\n                                this.$Notice.info({\n                                    title: '您有一条转接消息！'\n                                });\n                            }\n                        })\n                        if (!status) {\n                            if (data.recored.is_tourist == this.hdTabCur) { this.userList.unshift(data.recored) }\n                        }\n\t\t\t\t\t\t\t\t\t\t\t\tthat.$emit('changeLen', 1)\n                    })\n                    ws.$on('mssage_num', data => {\n                        if (data.recored.id) {\n                            let status = false\n                            that.userList.forEach((el, index, arr) => {\n                                if (data.recored.id == el.id) {\n                                    status = true\n                                    if (data.recored.is_tourist == that.hdTabCur) {\n                                        let oldVal = data.recored\n                                        arr.splice(index, 1)\n                                        arr.unshift(oldVal)\n                                    }\n                                }\n                            })\n                            if (!status) {\n                                if (data.recored.is_tourist == this.hdTabCur) { this.userList.unshift(data.recored) }\n                            }\n                        }\n\t\t\t\t\t\t\t\t\t\t\t\tthat.$emit('changeLen', 1)\n                        if (data.recored.is_tourist != this.hdTabCur && data.recored.id) {\n                            this.$Notice.info({\n                                title: this.hdTabCur ? '用户发来消息啦！' : '游客发来消息啦！'\n                            });\n                        }\n                    })\n                });\n            },\n            // 切换\n            changeTab (item) {\n                if (this.hdTabCur == item.key) return\n                this.hdTabCur = item.key\n                this.isScroll = true\n                this.page = 1\n                this.userList = []\n                this.$emit('changeType', item.key)\n                this.getList()\n            },\n            getList () {\n                if (!this.isScroll) return\n                record({\n                    nickname: this.nickname,\n                    page: this.page,\n                    limit: this.limit,\n                    is_tourist: this.hdTabCur\n                }).then(res => {\n\t\t\t\t\t\t\t\t\t  this.$emit('changeLen', res.data.length)\n                    if (res.data.length > 0) {\n                        res.data[0].mssage_num = 0\n                        this.isScroll = res.data.length >= this.limit\n\n                        this.userList = this.userList.concat(res.data)\n                        if (this.page == 1 && res.data.length > 0 && !this.isSearch) {\n                            this.curId = res.data[0].id\n                            this.$emit('setDataId', res.data[0])\n                        }\n                        this.page++\n                    } else {\n                        this.$emit('setDataId', 0)\n                    }\n                })\n            },\n            chartReachBottom () {\n                this.getList()\n            },\n            // 选择用户\n            selectUser (item) {\n                if (this.curId == item.id) return\n                item.mssage_num = 0\n                this.curId = item.id\n                this.$emit('setDataId', item)\n            },\n            handleScroll (vertical, horizontal, nativeEvent) {\n                if (vertical.process == 1) {\n                    this.getList()\n                }\n            }\n        }\n    }\n",null]}