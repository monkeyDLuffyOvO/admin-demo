{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/layouts/basic-layout/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/layouts/basic-layout/index.vue","mtime":1663732015000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport iMenuHead from './menu-head';\nimport iMenuSide from './menu-side';\nimport iHeaderLogo from './header-logo';\nimport iHeaderCollapse from './header-collapse';\nimport iHeaderReload from './header-reload';\nimport iHeaderBreadcrumb from './header-breadcrumb';\nimport iHeaderSearch from './header-search';\nimport iHeaderLog from './header-log';\nimport iHeaderFullscreen from './header-fullscreen';\nimport iHeaderNotice from './header-notice';\nimport iHeaderUser from './header-user';\nimport iHeaderI18n from './header-i18n';\nimport iHeaderSetting from './header-setting';\nimport iTabs from './tabs';\nimport iCopyright from '@/components/copyright';\n\nimport { mapState, mapGetters, mapMutations } from 'vuex';\nimport Setting from '@/setting';\n\nimport { requestAnimation } from '@/libs/util';\n\nexport default {\n    name: 'BasicLayout',\n    components: { iMenuHead, iMenuSide, iCopyright, iHeaderLogo, iHeaderCollapse, iHeaderReload, iHeaderBreadcrumb, iHeaderSearch, iHeaderUser, iHeaderI18n, iHeaderLog, iHeaderFullscreen, iHeaderSetting, iHeaderNotice, iTabs },\n    // provide (){\n    //     return {\n    //         reload:this.handleReload\n    //     }\n    // },\n    data () {\n        return {\n            showDrawer: false,\n            ticking: false,\n            headerVisible: true,\n            oldScrollTop: 0,\n            isDelayHideSider: false, // hack，当从隐藏侧边栏的 header 切换到正常 header 时，防止 Logo 抖动\n            loadRouter: true,\n            openImage: true\n        }\n    },\n    computed: {\n        ...mapState('admin/layout', [\n            'siderTheme',\n            'headerTheme',\n            'headerStick',\n            'tabs',\n            'tabsFix',\n            'siderFix',\n            'headerFix',\n            'headerHide',\n            'headerMenu',\n            'isMobile',\n            'isTablet',\n            'isDesktop',\n            'menuCollapse',\n            'showMobileLogo',\n            'showSearch',\n            'showNotice',\n            'showFullscreen',\n            'showSiderCollapse',\n            'showBreadcrumb',\n            'showLog',\n            'showI18n',\n            'showReload',\n            'enableSetting',\n            'copyrightShow'\n        ]),\n        ...mapState('admin/page', [\n            'keepAlive'\n        ]),\n        ...mapGetters('admin/menu', [\n            'hideSider'\n        ]),\n        // 如果开启 headerMenu，且当前 header 的 hideSider 为 true，则将顶部按 headerStick 处理\n        // 这时，即使没有开启 headerStick，仍然按开启处理\n        isHeaderStick () {\n            let state = this.headerStick;\n            if (this.hideSider) state = true;\n            return state;\n        },\n        showHeader () {\n            let visible = true;\n            if (this.headerFix && this.headerHide && !this.headerVisible) visible = false;\n            return visible;\n        },\n        headerClasses () {\n            return [\n                `i-layout-header-color-${this.headerTheme}`,\n                {\n                    'i-layout-header-fix': this.headerFix,\n                    'i-layout-header-fix-collapse': this.headerFix && this.menuCollapse,\n                    'i-layout-header-mobile': this.isMobile,\n                    'i-layout-header-stick': this.isHeaderStick && !this.isMobile,\n                    'i-layout-header-with-menu': this.headerMenu,\n                    'i-layout-header-with-hide-sider': this.hideSider || this.isDelayHideSider\n                }\n            ];\n        },\n        headerStyle () {\n            const menuWidth = this.isHeaderStick ? 0 : this.menuCollapse ? 80 : Setting.menuSideWidth;\n            return this.isMobile || !this.headerFix ? {} : {\n                width: `calc(100% - ${menuWidth}px)`\n            };\n        },\n        siderClasses () {\n            return {\n                'i-layout-sider-fix': this.siderFix,\n                'i-layout-sider-dark': this.siderTheme === 'dark'\n            };\n        },\n        contentClasses () {\n            return {\n                'i-layout-content-fix-with-header': this.headerFix,\n                'i-layout-content-with-tabs': this.tabs,\n                'i-layout-content-with-tabs-fix': this.tabs && this.tabsFix\n            };\n        },\n        insideClasses () {\n            return {\n                'i-layout-inside-fix-with-sider': this.siderFix,\n                'i-layout-inside-fix-with-sider-collapse': this.siderFix && this.menuCollapse,\n                'i-layout-inside-with-hide-sider': this.hideSider,\n                'i-layout-inside-mobile': this.isMobile\n            };\n        },\n        drawerClasses () {\n            let className = 'i-layout-drawer';\n            if (this.siderTheme === 'dark') className += ' i-layout-drawer-dark';\n            return className;\n        },\n        menuSideWidth () {\n            return this.menuCollapse ? 80 : Setting.menuSideWidth;\n        }\n    },\n    watch: {\n        hideSider () {\n            this.isDelayHideSider = true;\n            setTimeout(() => {\n                this.isDelayHideSider = false;\n            }, 0);\n        },\n        '$route' (to, from) {\n            if (to.path === from.path) {\n                // 相同路由，不同参数，跳转时，重载页面\n                if (Setting.sameRouteForceUpdate) {\n                    this.handleReload();\n                }\n            }\n        }\n    },\n    methods: {\n        ...mapMutations('admin/layout', [\n            'updateMenuCollapse'\n        ]),\n        ...mapMutations('admin/order', [\n            'getOrderStatus',\n            'getOrderTime',\n            'getOrderNum'\n        ]),\n        handleToggleDrawer (state) {\n            if (typeof state === 'boolean') {\n                this.showDrawer = state;\n            } else {\n                this.showDrawer = !this.showDrawer;\n            }\n        },\n        handleScroll () {\n            if (!this.headerHide) return;\n\n            const scrollTop = document.body.scrollTop + document.documentElement.scrollTop;\n\n            if (!this.ticking) {\n                this.ticking = true;\n                requestAnimation(() => {\n                    if (this.oldScrollTop > scrollTop) {\n                        this.headerVisible = true;\n                    } else if (scrollTop > 300 && this.headerVisible) {\n                        this.headerVisible = false;\n                    } else if (scrollTop < 300 && !this.headerVisible) {\n                        this.headerVisible = true;\n                    }\n                    this.oldScrollTop = scrollTop;\n                    this.ticking = false;\n                });\n            }\n        },\n        handleHeaderWidthChange () {\n            const $breadcrumb = this.$refs.breadcrumb;\n            if ($breadcrumb) {\n                $breadcrumb.handleGetWidth();\n                $breadcrumb.handleCheckWidth();\n            }\n            const $menuHead = this.$refs.menuHead;\n            if ($menuHead) {\n                $menuHead.handleGetMenuHeight();\n            }\n        },\n        handleReload () {\n            this.loadRouter = false;\n            this.getOrderStatus('');\n            this.getOrderTime('');\n            this.getOrderNum('');\n            this.$nextTick(() => {\n                this.loadRouter = true;\n            });\n        },\n        clear () {\n            this.openImage = false;\n        },\n    },\n    mounted () {\n        let isopenImage = localStorage.getItem('isopenImage');\n        if(isopenImage){\n            this.openImage = false;\n        }\n        document.addEventListener('scroll', this.handleScroll, { passive: true });\n    },\n    activated() {\n        this.openImage = false;\n        localStorage.setItem('isopenImage',true);\n    },\n    beforeDestroy () {\n        document.removeEventListener('scroll', this.handleScroll);\n    },\n    created () {\n        if (this.isTablet && this.showSiderCollapse) this.updateMenuCollapse(true);\n    }\n}\n",null]}