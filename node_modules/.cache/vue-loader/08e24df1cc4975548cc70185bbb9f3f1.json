{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/statistic/user/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/statistic/user/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\nimport userInfo from \"./components/userInfo\";\nimport wechetInfo from \"./components/wechetInfo\";\nimport userRegion from \"./components/userRegion\";\nimport { statisticUserExcel } from \"@/api/statistic\";\nimport { formatDate } from \"@/utils/validate\";\nimport exportExcel from \"@/utils/newToExcel.js\";\n\nexport default {\n  name: \"index\",\n  components: {\n    userInfo,\n    wechetInfo,\n    userRegion,\n  },\n  data() {\n    return {\n      // options: this.$timeOptions,\n\t  options: {\n\t    shortcuts: [\n\t      {\n\t        text: \"今天\",\n\t        value() {\n\t          const end = new Date();\n\t          const start = new Date();\n\t          start.setTime(\n\t            new Date(\n\t              new Date().getFullYear(),\n\t              new Date().getMonth(),\n\t              new Date().getDate()\n\t            )\n\t          );\n\t          return [start, end];\n\t        },\n\t      },\n\t      {\n\t        text: \"昨天\",\n\t        value() {\n\t          const end = new Date();\n\t          const start = new Date();\n\t          start.setTime(\n\t            start.setTime(\n\t              new Date(\n\t                new Date().getFullYear(),\n\t                new Date().getMonth(),\n\t                new Date().getDate() - 1\n\t              )\n\t            )\n\t          );\n\t          end.setTime(\n\t            end.setTime(\n\t              new Date(\n\t                new Date().getFullYear(),\n\t                new Date().getMonth(),\n\t                new Date().getDate() - 1\n\t              )\n\t            )\n\t          );\n\t          return [start, end];\n\t        },\n\t      },\n\t      {\n\t        text: \"最近7天\",\n\t        value() {\n\t          const end = new Date();\n\t          const start = new Date();\n\t          start.setTime(\n\t            start.setTime(\n\t              new Date(\n\t                new Date().getFullYear(),\n\t                new Date().getMonth(),\n\t                new Date().getDate() - 6\n\t              )\n\t            )\n\t          );\n\t          return [start, end];\n\t        },\n\t      },\n\t      {\n\t        text: \"最近30天\",\n\t        value() {\n\t          const end = new Date();\n\t          const start = new Date();\n\t          start.setTime(\n\t            start.setTime(\n\t              new Date(\n\t                new Date().getFullYear(),\n\t                new Date().getMonth(),\n\t                new Date().getDate() - 29\n\t              )\n\t            )\n\t          );\n\t          return [start, end];\n\t        },\n\t      },\n\t      {\n\t        text: \"本月\",\n\t        value() {\n\t          const end = new Date();\n\t          const start = new Date();\n\t          start.setTime(\n\t            start.setTime(\n\t              new Date(new Date().getFullYear(), new Date().getMonth(), 1)\n\t            )\n\t          );\n\t          return [start, end];\n\t        },\n\t      },\n\t      {\n\t        text: \"本年\",\n\t        value() {\n\t          const end = new Date();\n\t          const start = new Date();\n\t          start.setTime(\n\t            start.setTime(new Date(new Date().getFullYear(), 0, 1))\n\t          );\n\t          return [start, end];\n\t        },\n\t      },\n\t    ],\n\t  },\n      formInline: {\n        channel_type: \"\",\n        data: \"\",\n      },\n      channel_type: \"\",\n      timeVal: [],\n      isShow: false,\n    };\n  },\n  computed:{\n     ...mapState(\"admin/layout\", [\"isMobile\"]),\n    labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    },\n  },\n  created() {\n    const end = new Date();\n    const start = new Date();\n    start.setTime(\n      start.setTime(\n        new Date(\n          new Date().getFullYear(),\n          new Date().getMonth(),\n          new Date().getDate() - 29\n        )\n      )\n    );\n    this.timeVal = [start, end];\n    this.formInline.data =\n      formatDate(start, \"yyyy/MM/dd\") + \"-\" + formatDate(end, \"yyyy/MM/dd\");\n  },\n  methods: {\n    changeTxt() {\n      this.formInline.channel_type =\n        this.channel_type === \"all\" ? \"\" : this.channel_type;\n    },\n    // // 导出\n    // excel() {\n    //   statisticUserExcel(this.formInline).then(async (res) => {\n    //     res.data.url.map((item) => {\n    //       window.location.href = item;\n    //     });\n    //   });\n    // },\n    // 数据导出；\n    async exports() {\n      let [th, filekey, data, fileName] = [[], [], [], \"\"];\n      let excelData = JSON.parse(JSON.stringify(this.formInline));\n      let lebData = await this.getExcelData(excelData);\n      if (!fileName) fileName = lebData.filename;\n      if (!filekey.length) {\n        filekey = lebData.filekey;\n      }\n      if (!th.length) th = lebData.header;\n      data = data.concat(lebData.export);\n      exportExcel(th, filekey, fileName, data);\n    },\n    getExcelData(excelData) {\n      return new Promise((resolve, reject) => {\n        statisticUserExcel(excelData).then((res) => {\n          return resolve(res.data);\n        });\n      });\n    },\n    // 具体日期\n    onchangeTime(e) {\n      this.timeVal = e;\n      this.formInline.data = this.timeVal.join(\"-\");\n    },\n    handleSubmit() {\n      this.$refs.userInfos.getStatistics();\n      this.$refs.userInfos.getTrend();\n      this.$refs.userRegions.getTrend();\n      this.$refs.userRegions.getSex();\n      if (this.formInline.channel_type === \"wechat\") {\n        this.isShow = true;\n        this.$refs.wechetInfos.getStatistics();\n        this.$refs.wechetInfos.getTrend();\n      } else {\n        this.isShow = false;\n      }\n    },\n  },\n};\n",null]}