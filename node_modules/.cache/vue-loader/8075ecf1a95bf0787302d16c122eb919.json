{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/layouts/basic-layout/tabs/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/layouts/basic-layout/tabs/index.vue","mtime":1640264908000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapGetters, mapActions } from 'vuex';\nimport menuSider from '@/menu/sider';\nimport tTitle from '../mixins/translate-title';\n\nimport Setting from '@/setting';\n\nimport { getAllSiderMenu } from '@/libs/system';\n\nexport default {\n    name: 'iTabs',\n    mixins: [ tTitle ],\n    computed: {\n        ...mapState('admin/page', [\n            'opened',\n            'current'\n        ]),\n        ...mapState('admin/layout', [\n            'showTabsIcon',\n            'tabsFix',\n            'headerFix',\n            'headerStick',\n            'isMobile',\n            'menuCollapse'\n        ]),\n        ...mapGetters('admin/menu', [\n            'hideSider'\n        ]),\n        classes () {\n            return {\n                'i-layout-tabs-fix': this.tabsFix\n            }\n        },\n        isHeaderStick () {\n            return this.hideSider;\n        },\n        styles () {\n            let style = {};\n            if (this.tabsFix && !this.headerFix) {\n                style.top = `${64 - this.scrollTop}px`;\n            }\n\n            const menuWidth = this.isHeaderStick ? 0 : this.menuCollapse ? 80 : Setting.menuSideWidth;\n            if (!this.isMobile && this.tabsFix) {\n                style.width = `calc(100% - ${menuWidth}px)`;\n                style.left = `${menuWidth}px`;\n            }\n\n            return style;\n        }\n    },\n    data () {\n        return {\n            // 得到所有侧边菜单，并转为平级，查询图标用\n            allSiderMenu: getAllSiderMenu(menuSider),\n            scrollTop: 0\n        }\n    },\n    methods: {\n        ...mapActions('admin/page', [\n            'close',\n            'closeLeft',\n            'closeRight',\n            'closeOther',\n            'closeAll'\n        ]),\n        tabLabel (h, page) {\n            const title = h('span', this.tTitle(page.meta.title) || '未命名');\n            let slot = [];\n\n            if (this.showTabsIcon) {\n                const fullPathWithoutQuery = page.fullPath.indexOf('?') >= 0 ? page.fullPath.split('?')[0] : page.fullPath;\n                const currentMenu = this.allSiderMenu.find(menu => menu.path === fullPathWithoutQuery) || {};\n\n                let icon;\n                if (currentMenu.icon) {\n                    icon = h('Icon', {\n                        props: {\n                            type: currentMenu.icon\n                        }\n                    });\n                } else if (currentMenu.custom) {\n                    icon = h('Icon', {\n                        props: {\n                            custom: currentMenu.custom\n                        }\n                    });\n                } else if (currentMenu.img) {\n                    icon = h('img', {\n                        attrs: {\n                            src: currentMenu.img\n                        }\n                    });\n                }\n\n                if (icon) slot.push(icon);\n                slot.push(title);\n            } else {\n                slot.push(title);\n            }\n\n            return h('div', {\n                class: 'i-layout-tabs-title'\n            }, slot);\n        },\n        handleClickTab (tabName) {\n            const page = this.opened.find(page => page.fullPath === tabName);\n            const { name, params, query } = page;\n\n            if (page) this.$router.push({ name, params, query }, () => {});\n        },\n        handleClickClose (tagName) {\n            this.close({\n                tagName\n            });\n        },\n        handleScroll () {\n            if (this.tabsFix && !this.headerFix) {\n                const scrollTop = document.body.scrollTop + document.documentElement.scrollTop;\n                this.scrollTop = scrollTop > 64 ? 64 : scrollTop;\n            }\n        },\n        handleClose (name) {\n            const params = {\n                pageSelect: this.current\n            };\n            switch (name) {\n            case 'left':\n                this.closeLeft(params);\n                break;\n            case 'right':\n                this.closeRight(params);\n                break;\n            case 'other':\n                this.closeOther(params);\n                break;\n            case 'all':\n                this.closeAll();\n                break;\n            }\n        }\n    },\n    mounted () {\n        document.addEventListener('scroll', this.handleScroll, { passive: true });\n        this.handleScroll();\n    },\n    beforeDestroy () {\n        document.removeEventListener('scroll', this.handleScroll);\n    }\n}\n",null]}