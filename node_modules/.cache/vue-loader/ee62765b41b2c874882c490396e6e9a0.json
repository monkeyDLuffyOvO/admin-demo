{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/work/clientMoment/addMoment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/work/clientMoment/addMoment.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapMutations } from \"vuex\";\nimport { workLabel, workMomentSave,workClientCount } from \"@/api/work\";\nimport uploadPictures from \"@/components/uploadPictures\";\nimport department from \"@/components/department/index.vue\";\nimport Setting from \"@/setting\";\nimport util from \"@/libs/util\";\nimport { uploadByPieces } from \"@/utils/upload\"; \nexport default {\n  data() {\n    return {\n      formItem: {\n        name: \"\",\n        type: \"0\",\n        client_tag_list: [],\n        client_type: \"0\",\n        user_ids: [],\n        welcome_words: {\n          text: {\n            content: \"\",\n          },\n          attachments: [],\n        },\n        // images:[],\n        send_type: \"0\",\n        send_time: \"\", //定时发送\n      },\n      descType: \"0\",\n      modalPic: false,\n      picTit: \"\",\n      tableIndex: 0,\n      isChoice: \"\",\n      labelList: [],\n      ruleValidate: {\n        name: [\n          { required: true, message: '名称不能为空', trigger: 'blur' }\n        ],\n        send_time: [\n          { required: true, message: '发送时间不能为空', trigger: 'change' }\n        ],\n      },\n      gridPic: {\n        xl: 6,\n        lg: 8,\n        md: 12,\n        sm: 12,\n        xs: 12,\n      },\n      gridBtn: {\n        xl: 4,\n        lg: 8,\n        md: 8,\n        sm: 8,\n        xs: 8,\n      },\n      imageObj: {\n        msgtype: \"image\",\n        image: {\n          media_id: \"\",\n          pic_url: \"\",\n        },\n      },\n      linkObj: {\n        msgtype: \"link\",\n        link: {\n          media_id: \"\",\n          title: \"\",\n          url: \"\",\n        },\n      },\n      videoObj: {\n        msgtype: \"video\",\n        video: {\n          media_id: \"\",\n          url: \"\",\n        },\n      },\n      activeDepartment: {},\n      isSite: true,\n      onlyDepartment: false,\n      openType: \"\",\n      userList: [],\n      fileUrl2: Setting.apiBaseURL + \"/file/video_upload\",\n      upload_type: \"\", //视频上传类型 1 本地上传 2 3 4 OSS上传\n      uploadData: {}, // 上传参数\n      header: {},\n      progress: 0,\n      upload_type:true,\n      clientCount:0\n    };\n  },\n  components: {\n    uploadPictures,\n    department,\n  },\n  computed: {\n    ...mapState(\"admin/layout\", [\"isMobile\"]),\n    labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    },\n  },\n  watch:{\n    \"formItem.client_tag_list\"(val,oldVal){\n      if(val !== oldVal){\n        this.getClientCount();\n      }\n    },\n  },\n  mounted() {\n    this.setCopyrightShow({ value: false });\n    this.getWorkLabel();\n    this.getToken();\n    this.getClientCount();\n  },\n  destroyed() {\n    this.setCopyrightShow({ value: true });\n  },\n  methods: {\n    ...mapMutations(\"admin/layout\", [\"setCopyrightShow\"]),\n    //获取客户标签\n    getWorkLabel() {\n      workLabel().then((res) => {\n        this.labelList = res.data.map((org) => this.mapTree(org));\n      });\n    },\n    mapTree(org) {\n      const haveChildren =\n        Array.isArray(org.children) && org.children.length > 0;\n      return {\n        //分别将我们查询出来的值做出改变他的key\n        title: org.label,\n        expand: true,\n        value: org.value,\n        selected: false,\n        checked: false,\n        children: haveChildren ? org.children.map((i) => this.mapTree(i)) : [],\n      };\n    },\n    // 点击商品图\n    modalPicTap(tit, picTit, index) {\n      this.modalPic = true;\n      this.isChoice = tit === \"dan\" ? \"单选\" : \"多选\";\n      this.picTit = picTit;\n      this.tableIndex = index;\n    },\n    snedChangeTime(val) {\n      this.formItem.send_time = val;\n    },\n    handleRemove(i) {\n      this.formItem.welcome_words.attachments.splice(i, 1);\n    },\n    // 获取多张图信息\n    getPicD(pc) {\n      let images = [];\n      images = pc.map((item) => {\n        return item.att_dir;\n      });\n      images.forEach((item) => {\n        this.imageObj.image.pic_url = item;\n        this.formItem.welcome_words.attachments.push(this.imageObj);\n      });\n      this.modalPic = false;\n    },\n    addUser() {\n      this.userList = this.formItem.user_ids;\n      this.$refs.department.memberStatus = true;\n    },\n    changeMastart(arr, type) {\n      this.formItem.user_ids = arr.map((item) => {\n        return {\n          userid: item.userid,\n          name: item.name,\n        };\n      });\n    },\n    //tag标签删除成员\n    handleDel(e, name) {\n      let index = this.formItem.user_ids.indexOf(name);\n      this.formItem.user_ids.splice(index, 1);\n    },\n    linkBlur() {\n      if (!this.linkObj.link.url) return this.$Message.warning(\"请输入链接\");\n    },\n    titleBlur() {\n      if (!this.linkObj.link.title)\n        return this.$Message.warning(\"请输入链接标题\");\n    },\n    submit() {\n      if(!this.formItem.welcome_words.text.content.length) return this.$Message.error(\"请填写消息内容1\")\n      if (this.descType == 2) {\n        this.formItem.welcome_words.attachments.push(this.linkObj);\n      }else if(this.descType == 1){\n        this.formItem.welcome_words.attachments.push(this.videoObj);\n      }\n      const formData = this.deepClone(this.formItem);\n      formData.user_ids = formData.user_ids.map((item) => {\n        return item.userid;\n      });\n      this.$refs.formItem.validate((valid) => {\n        if (valid) {\n          workMomentSave(formData).then((res) => {\n            this.$Message.success(res.msg);\n            this.$router.push(\"/admin/work/client/moment\");\n          })\n          .catch((err) => {\n            this.$Message.error(err.msg);\n          });\n        }\n      })\n    },\n    //深克隆\n    deepClone(obj) {\n      let newObj = Array.isArray(obj) ? [] : {};\n      if (obj && typeof obj === \"object\") {\n        for (let key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            newObj[key] =\n              obj && typeof obj[key] === \"object\"\n                ? this.deepClone(obj[key])\n                : obj[key];\n          }\n        }\n      }\n      return newObj;\n    },\n    videoSaveToUrl(file) {\n      uploadByPieces({\n        randoms: \"\", // 随机数，这里作为给后端处理分片的标识 根据项目看情况 是否要加\n        file: file, // 视频实体\n        pieceSize: 3, // 分片大小\n        success: (data) => {\n          this.upload_type = false;\n          this.videoObj.video.url = Setting.apiBaseURL + data.file_path;\n          this.$Spin.hide();\n        },\n        error: (e) => {\n          this.$Message.error(e.msg);\n          this.$Spin.hide();\n        },\n        uploading: (chunk, allChunk) => {\n          this.$Spin.show();\n        },\n      });\n      return false;\n    },\n    \n    // 上传头部token\n    getToken() {\n      this.header[\"Authori-zation\"] = \"Bearer \" + util.cookies.get(\"token\");\n    },\n    getClientCount(){\n      workClientCount({\n        is_all: this.formItem.client_type == 1 ? 0 : 1,\n        label:this.formItem.client_tag_list,\n      }).then(res=>{\n        this.clientCount = res.data.sum_count;\n      })\n    }\n  },\n};\n",null]}