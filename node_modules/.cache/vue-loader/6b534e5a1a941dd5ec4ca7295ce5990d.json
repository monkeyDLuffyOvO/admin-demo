{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/kefu/components/words.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/kefu/components/words.vue","mtime":1640264908000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { speeChcraft, serviceCate, addServiceCate, addSpeeChcraft, serviceCateUpdate, editServiceCate } from '@/api/kefu'\nexport default {\n    name: 'words',\n    props: {\n        isWords: {\n            type: Boolean,\n            default: false\n        }\n    },\n    computed: {\n        cateStatus () {\n            if (this.cateData.name && this.cateData.sort !== '') {\n                return false\n            } else {\n                return true\n            }\n        },\n        msgStatus () {\n            if (this.msgData.message) {\n                return false\n            } else {\n                return true\n            }\n        }\n    },\n    data () {\n        return {\n            isWordShow: false, // 编辑窗\n            wordsList: [],\n            wordsTab: [\n                {\n                    title: '个人库',\n                    key: 1\n                },\n                {\n                    title: '公共库',\n                    key: 0\n                }\n            ],\n            wordsTabCur: 1,\n            wordsData: {\n                isScroll: true,\n                ops: {\n                    vuescroll: {\n                        mode: 'slide',\n                        enable: false,\n                        tips: {\n                            deactive: 'Push to Load',\n                            active: 'Release to Load',\n                            start: 'Loading...',\n                            beforeDeactive: 'Load Successfully!'\n                        },\n                        auto: false,\n                        autoLoadDistance: 0,\n                        pullRefresh: {\n                            enable: false\n                        },\n                        pushLoad: {\n                            enable: true,\n                            auto: true,\n                            autoLoadDistance: 10\n                        }\n                    },\n                    bar: {\n                        background: '#393232',\n                        opacity: '.5',\n                        size: '2px'\n                    }\n                },\n                page: 1,\n                limit: 10,\n                searchTxt: '',\n                cate: [], // 分类\n                cateId: '' // 分类id\n            },\n            // 分组数据\n            cateData: {\n                status: 0, // 0 新增 1编辑\n                name: '',\n                sort: '',\n                isCate: false, // 分组状态开关\n                id: ''\n            },\n            // 编辑分组列表\n            editList: {\n                status: false\n            },\n            // 话术添加数据\n            msgData: {\n                isCateMeg: false,\n                msgCateId: '',\n                message: '',\n                title: '',\n                status: 0, // 0 新增 1修改\n                editId: ''\n            },\n            selectData: ''\n        }\n    },\n    mounted () {\n        Promise.all([this.getServiceCate()])\n    },\n    methods: {\n        // 关闭添加话术弹窗\n        closeMsgBox () {\n            this.msgData.isCateMeg = false\n        },\n        // 选择话术\n        selectWords (item) {\n            this.$emit('selectMsg', item.message)\n        },\n        // 关闭弹窗\n        closeBox () {\n            this.$emit('closeBox')\n        },\n        // 搜索\n        bindSearch () {\n            this.wordsData.page = 1\n            this.wordsData.isScroll = true\n            this.wordsList = []\n            this.getWordsList()\n        },\n        // 顶部切换\n        bindTab (item) {\n            this.wordsTabCur = item.key\n            this.wordsData.isScroll = true\n            this.wordsData.page = 1\n            this.wordsData.cate = []\n            this.wordsList = []\n            this.getServiceCate()\n        },\n        // 选择话术分类\n        changeCate (item) {\n            this.wordsData.isScroll = true\n            this.wordsList = []\n            this.wordsData.page = 1\n            this.wordsData.cateId = item.id\n            this.msgData.msgCateId = item.id\n            this.getWordsList()\n        },\n        // 获取话术分类\n        getServiceCate () {\n            let data = {\n                id: '',\n                name: '全部'\n            }\n            serviceCate({\n                type: this.wordsTabCur\n            }).then(res => {\n                let tempArr = JSON.parse(JSON.stringify(res.data.data))\n                res.data.data.unshift(data)\n                this.wordsData.cateId = res.data.data.length ? res.data.data[0].id : ''\n                this.msgData.msgCateId = this.wordsData.cateId\n                this.wordsData.cate = res.data.data\n                this.selectData = tempArr\n                this.getWordsList()\n            })\n        },\n        // 话术滚动到底部\n        handleWordsScroll (vm, refreshDom, done) {\n            this.getWordsList()\n            done();\n        },\n        // 常用语\n        getWordsList () {\n            speeChcraft({\n                page: this.wordsData.page,\n                limit: this.wordsData.limit,\n                title: this.wordsData.searchTxt,\n                cate_id: this.wordsData.cateId,\n                type: this.wordsTabCur\n            }).then(res => {\n                this.wordsData.isScroll = res.data.length >= this.wordsData.limit\n                this.wordsList = this.wordsList.concat(res.data)\n                this.wordsData.page++\n                this.$nextTick(() => {\n                    if (this.wordsList.length > 0) { this.$refs['scrollBox'].refresh(); }\n                })\n            })\n        },\n        // 打开分组弹窗\n        openCate (key, item) {\n            this.cateData.status = key\n            this.cateData.isCate = true\n            if (key == 1) {\n                this.cateData.name = item.name\n                this.cateData.id = item.id\n                this.cateData.sort = item.sort\n            }\n        },\n        // 关闭分组弹窗\n        closeCate () {\n            this.cateData.isCate = false\n            this.cateData.name = ''\n            this.cateData.sort = ''\n        },\n        // 分组添加\n        cateConfirm () {\n            if (!this.cateData.status) {\n                addServiceCate({\n                    name: this.cateData.name,\n                    sort: this.cateData.sort\n                }).then(res => {\n                    this.cateData.isCate = false\n                    this.cateData.name = ''\n                    this.cateData.sort = ''\n                    this.page = 1\n                    this.wordsData.isScroll = true\n                    this.wordsList = []\n                    this.$Message.success(res.msg)\n                    this.getServiceCate()\n                }).catch(error => {\n                    this.$Message.error(error.msg)\n                })\n            } else {\n                editServiceCate(this.cateData.id, {\n                    name: this.cateData.name,\n                    sort: this.cateData.sort\n                }).then(res => {\n                    this.cateData.isCate = false\n                    this.cateData.name = ''\n                    this.cateData.sort = ''\n                    this.cateData.id = ''\n                    this.page = 1\n                    this.wordsData.isScroll = true\n                    this.wordsList = []\n                    this.$Message.success(res.msg)\n                    this.getServiceCate()\n                })\n            }\n        },\n        // 话术打开\n        addMsg () {\n            this.msgData.isCateMeg = true\n            this.msgData.status = 0\n        },\n        // 话术添加\n        msgConfirm () {\n            if (!this.msgData.status) {\n                addSpeeChcraft({\n                    title: this.msgData.title,\n                    cate_id: this.msgData.msgCateId,\n                    message: this.msgData.message\n                }).then(res => {\n                    this.msgData.isCateMeg = false\n                    this.msgData.title = ''\n                    this.msgData.message = ''\n                    this.msgData.msgCateId = this.wordsData.cateId\n                    this.$Message.success(res.msg)\n                    this.wordsData.isScroll = true\n                    this.wordsData.page = 1\n                    this.wordsList = []\n                    this.getWordsList()\n                }).catch(error => {\n                    this.$Message.error(error.msg)\n                })\n            } else {\n                serviceCateUpdate(this.msgData.editId, {\n                    title: this.msgData.title,\n                    cate_id: this.msgData.msgCateId,\n                    message: this.msgData.message\n                }).then(res => {\n                    this.msgData.isCateMeg = false\n                    this.msgData.title = ''\n                    this.msgData.message = ''\n                    this.msgData.msgCateId = this.wordsData.cateId\n                    this.$Message.success(res.msg)\n                    this.wordsData.isScroll = true\n                    this.wordsData.page = 1\n                    this.wordsList = []\n                    this.getWordsList()\n                })\n            }\n        },\n        // 编辑话术\n        bindEdit (item) {\n            this.msgData.status = 1\n            this.msgData.isCateMeg = true\n            this.msgData.message = item.message\n            this.msgData.title = item.title\n            this.msgData.editId = item.id\n        },\n        // 删除话术\n        delMsg (row, tit, num) {\n            let delfromData = {\n                title: tit,\n                num: num,\n                url: `/service/speechcraft/${row.id}`,\n                method: 'DELETE',\n                ids: '',\n                kefu: true\n            };\n            this.$modalSure(delfromData).then((res) => {\n                this.wordsList.splice(num, 1)\n                this.$Message.success(res.msg);\n            }).catch(res => {\n                this.$Message.error(res.msg);\n            });\n        },\n        delCate (row, tit, num) {\n            let delfromData = {\n                title: tit,\n                num: num,\n                url: `/service/cate/${row.id}`,\n                method: 'DELETE',\n                ids: '',\n                kefu: true\n            };\n            this.$modalSure(delfromData).then((res) => {\n                this.wordsData.cate.splice(num, 1)\n                this.page = 1\n                this.wordsData.isScroll = true\n                this.wordsList = []\n                this.$Message.success(res.msg)\n                this.getServiceCate()\n            }).catch(res => {\n                this.$Message.error(res.msg);\n            });\n        }\n    }\n}\n",null]}