{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/order/orderList/handle/orderSend.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/order/orderList/handle/orderSend.vue","mtime":1660787421000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\nimport {\n  getExpressData,\n  putDelivery,\n  splitDelivery,\n  orderExpressTemp,\n  orderDeliveryList,\n  orderSheetInfo,\n  splitCartInfo,\n} from \"@/api/order\";\nexport default {\n  name: \"orderSend\",\n  props: {\n    orderId: Number,\n    status: Number,\n    pay_type: String,\n  },\n  data() {\n    return {\n\t  productType:0,\t\n      orderStatus: 0,\n      splitSwitch: false,\n      formItem: {\n        type: \"1\",\n        express_record_type: \"1\",\n        delivery_name: \"\",\n        delivery_id: \"\",\n        express_temp_id: \"\",\n        to_name: \"\",\n        to_tel: \"\",\n        to_addr: \"\",\n        sh_delivery: \"\",\n        fictitious_content: \"\",\n        station_type:1,\n        delivery_type:'1',\n        cargo_weight:0,\n        remark:'',\n        mark:''\n      },\n      modals: false,\n      express: [],\n      expressTemp: [],\n      deliveryList: [],\n      temp: {},\n      export_open: true,\n      manyFormValidate: [],\n      stopSubmit: false,\n      header: [\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\",\n        },\n        {\n          title: \"商品信息\",\n          slot: \"image\",\n          width: 200,\n          align: \"center\",\n        },\n        {\n          title: \"规格\",\n          slot: \"value\",\n          align: \"center\",\n          minWidth: 120,\n        },\n        {\n          title: \"商品售价\",\n          slot: \"sellPrice\",\n          align: \"center\",\n          minWidth: 100,\n        },\n        {\n          title: \"商品优惠价\",\n          slot: \"price\",\n          align: \"center\",\n          minWidth: 100,\n        },\n        {\n          title: \"总数\",\n          key: \"cart_num\",\n          align: \"center\",\n          minWidth: 80,\n        },\n        {\n          title: \"待发数量\",\n          key: \"surplus_num\",\n          align: \"center\",\n          width: 180,\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\"InputNumber\", {\n                props: {\n                  min: 1,\n                  max: params.row.numShow,\n                  value: params.row.surplus_num || 1,\n                },\n                on: {\n                  \"on-change\": (e) => {\n                    params.row.surplus_num = e || 1;\n                    this.manyFormValidate[params.index] = params.row;\n                    this.selectData.forEach((v, index) => {\n                      if (v.cart_id === params.row.cart_id) {\n                        this.selectData.splice(index, 1, params.row);\n                      }\n                    });\n                  },\n                },\n              }),\n            ]);\n          },\n        },\n      ],\n      selectData: [],\n      sheetInfo:{}\n    };\n  },\n  computed: {\n    ...mapState(\"admin/order\", [\"splitOrder\"]),\n  },\n  methods: {\n    changeDelivery(e){\n      // console.log('eeeeeeeee',e);\n      // this.formItem.delivery_type = e;\n    },\n    selectOne(data) {\n      this.selectData = data;\n    },\n    changeModal(status) {\n      if (!status) this.cancel();\n    },\n    changeSplitStatus(status) {\n      if (status) {\n        splitCartInfo(this.orderId).then((res) => {\n          let data = res.data;\n          data.forEach((item) => {\n            item.numShow = item.surplus_num;\n          });\n          this.manyFormValidate = data;\n        });\n      }\n    },\n    changeRadio(o) {\n      this.$refs.formItem.resetFields();\n      switch (o) {\n        case \"1\":\n          this.formItem.delivery_name = \"\";\n          this.formItem.delivery_id = \"\";\n          this.formItem.express_temp_id = \"\";\n          this.formItem.express_record_type = \"1\";\n          this.expressTemp = [];\n          break;\n        case \"2\":\n          this.formItem.sh_delivery = \"\";\n          if(this.sheetInfo.self_delivery_status){\n            this.formItem.delivery_type = '1'\n          }else{\n            this.formItem.delivery_type = '2'\n          }\n          if(this.sheetInfo.dada_delivery_status){\n            this.formItem.station_type = 1\n          }else {\n            this.formItem.station_type = 2\n          }\n          break;\n        case \"3\":\n          this.formItem.fictitious_content = \"\";\n          break;\n        default:\n          break;\n      }\n    },\n    changeExpress(j) {\n      switch (j) {\n        case \"2\":\n          this.formItem.delivery_name = \"\";\n          this.formItem.express_temp_id = \"\";\n          this.expressTemp = [];\n          this.getList(2);\n          break;\n        case \"1\":\n          this.formItem.delivery_name = \"\";\n          this.formItem.delivery_id = \"\";\n          this.getList(1);\n          break;\n        default:\n          break;\n      }\n    },\n    reset() {\n      this.formItem = {\n        type: \"1\",\n        express_record_type: \"1\",\n        delivery_name: \"\",\n        delivery_id: \"\",\n        express_temp_id: \"\",\n        expressTemp: [],\n        to_name: \"\",\n        to_tel: \"\",\n        to_addr: \"\",\n        sh_delivery: \"\",\n        fictitious_content: \"\",\n        station_type:1,\n        delivery_type:'1',\n        cargo_weight:0,\n        remark:'',\n        mark:''\n      };\n    },\n    // 物流公司列表\n    getList(type) {\n      let status = type === 2 ? 1 : \"\";\n      getExpressData(status)\n        .then(async (res) => {\n          this.express = res.data;\n          this.getSheetInfo();\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    // 提交\n    putSend(name) {\n      let data = {\n        id: this.orderId,\n        datas: this.formItem,\n      };\n      if (\n        this.formItem.type === \"1\" &&\n        this.formItem.express_record_type === \"2\"\n      ) {\n        if (this.formItem.delivery_name === \"\") {\n          return this.$Message.error(\"快递公司不能为空\");\n        } else if (this.formItem.express_temp_id === \"\") {\n          return this.$Message.error(\"电子面单不能为空\");\n        } else if (this.formItem.to_name === \"\") {\n          return this.$Message.error(\"寄件人姓名不能为空\");\n        } else if (this.formItem.to_tel === \"\") {\n          return this.$Message.error(\"寄件人电话不能为空\");\n        } else if (!/^1(3|4|5|7|8|9|6)\\d{9}$/i.test(this.formItem.to_tel)) {\n          return this.$Message.error(\"请输入正确的手机号码\");\n        } else if (this.formItem.to_addr === \"\") {\n          return this.$Message.error(\"寄件人地址不能为空\");\n        }\n      }\n      if (\n        this.formItem.type === \"1\" &&\n        this.formItem.express_record_type === \"1\"\n      ) {\n        if (this.formItem.delivery_name === \"\") {\n          return this.$Message.error(\"快递公司不能为空\");\n        } else if (this.formItem.delivery_id === \"\") {\n          return this.$Message.error(\"快递单号不能为空\");\n        }\n      }\n      if (this.formItem.type === \"2\") {\n        if (this.formItem.delivery_type === '1' && this.formItem.sh_delivery === \"\") {\n          return this.$Message.error(\"送货人不能为空\");\n        }\n        if(this.formItem.delivery_type === '2' && this.formItem.cargo_weight<=0){\n          return this.$Message.error(\"请输入有效的重量\");\n        }\n      }\n      if (this.splitSwitch) {\n        data.datas.cart_ids = [];\n        this.selectData.forEach((v) => {\n          data.datas.cart_ids.push({\n            cart_id: v.cart_id,\n            cart_num: v.surplus_num,\n          });\n        });\n        splitDelivery(data)\n          .then((res) => {\n            this.modals = false;\n            this.$Message.success(res.msg);\n            this.$emit(\"submitFail\");\n            this.reset();\n            this.splitSwitch = false;\n          })\n          .catch((res) => {\n            this.$Message.error(res.msg);\n          });\n      } else {\n        putDelivery(data)\n          .then(async (res) => {\n            this.modals = false;\n            this.$Message.success(res.msg);\n            this.splitSwitch = false;\n            this.$emit(\"submitFail\");\n            this.reset();\n          })\n          .catch((res) => {\n            this.$Message.error(res.msg);\n          });\n      }\n    },\n    cancel(name) {\n      this.modals = false;\n      this.orderStatus = 0;\n      this.splitSwitch = false;\n      this.selectData = [];\n      this.reset();\n    },\n    // 电子面单列表\n    expressChange(value) {\n      let expressItem = this.express.find((item) => {\n        return item.value === value;\n      });\n      if (expressItem === undefined) {\n        return;\n      }\n      this.formItem.delivery_code = expressItem.code;\n      if (this.formItem.express_record_type === \"2\") {\n        this.expressTemp = [];\n        this.formItem.express_temp_id = \"\";\n        orderExpressTemp({\n          com: this.formItem.delivery_code,\n        })\n          .then((res) => {\n            this.expressTemp = res.data;\n            if (!res.data.length) {\n              this.$Message.error(\"请配置你所选快递公司的电子面单\");\n            }\n          })\n          .catch((err) => {\n            this.$Message.error(err.msg);\n          });\n      }\n    },\n    getCartInfo() {\n      // this.$set(this, \"orderStatus\", data);\n      // this.$set(this, \"splitSwitch\", data === 8 ? true : false);\n      // if (data === 8) {\n      splitCartInfo(this.orderId).then((res) => {\n        let data = res.data;\n        data.forEach((item) => {\n          item.numShow = item.surplus_num;\n        });\n        this.manyFormValidate = data;\n\t\tthis.productType = data[0].product_type;\n\t\tif(this.productType==3){\n\t\t\tthis.formItem.type = '3'\n\t\t    this.formItem.fictitious_content = \"\";\n\t\t}\n      });\n    },\n    getDeliveryList() {\n      orderDeliveryList()\n        .then((res) => {\n          this.deliveryList = res.data.list;\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n    getSheetInfo() {\n      orderSheetInfo()\n        .then((res) => {\n          const data = res.data;\n          for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n              this.formItem[key] = data[key];\n            }\n          }\n          this.export_open =\n            data.export_open === undefined ? true : data.export_open;\n          if (!this.export_open) {\n            this.formItem.express_record_type = \"1\";\n          }\n          this.formItem.to_addr = data.to_add;\n          this.sheetInfo = data;\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n    shDeliveryChange(value) {\n      if (!value) return;\n      let deliveryItem = this.deliveryList.find((item) => {\n        return item.id === value;\n      });\n      this.formItem.sh_delivery_name = deliveryItem.wx_name;\n      this.formItem.sh_delivery_id = deliveryItem.phone;\n      this.formItem.sh_delivery_uid = deliveryItem.uid;\n    },\n    expressTempChange(tempId) {\n      this.temp = this.expressTemp.find((item) => {\n        return tempId === item.temp_id;\n      });\n      if (this.temp === undefined) {\n        this.temp = {};\n      }\n    },\n    preview() {\n      this.$refs.viewer.$viewer.show();\n    },\n  },\n};\n",null]}