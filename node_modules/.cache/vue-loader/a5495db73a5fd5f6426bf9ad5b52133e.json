{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/notify/smsTemplateApply/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/notify/smsTemplateApply/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\nimport {\n  tempListApi,\n  tempCreateApi,\n  isLoginApi,\n  serveInfoApi,\n  serveSign,\n  captchaApi,\n} from \"@/api/setting\";\nimport editFrom from \"@/components/from/from\";\nexport default {\n  name: \"smsTemplateApply\",\n  components: { editFrom },\n  data() {\n    const validatePhone = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error(\"请填写手机号\"));\n      } else if (!/^1[3456789]\\d{9}$/.test(value)) {\n        callback(new Error(\"手机号格式不正确!\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      modals: false,\n      cutNUm: \"获取验证码\",\n      canClick: true,\n      spinShow: true,\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      sign: \"\",\n      formInline: {\n        sign: \"\",\n        phone: \"\",\n        code: \"\",\n      },\n      ruleInline: {\n        sign: [{ required: true, message: \"请输入短信签名\", trigger: \"blur\" }],\n        phone: [{ required: true, validator: validatePhone, trigger: \"blur\" }],\n        code: [{ required: true, message: \"请输入验证码\", trigger: \"blur\" }],\n      },\n      loading: false,\n      columns1: [],\n      levelFrom: {\n        type: \"\",\n        status: \"\",\n        title: \"\",\n        page: 1,\n        limit: 20,\n      },\n      levelFrom2: {\n        is_have: \"\",\n        page: 1,\n        limit: 20,\n      },\n      total: 0,\n      FromData: null,\n      delfromData: {},\n      levelLists: [],\n      accountInfo: {}, //签名审核状态： 0、待审核；1、已通过；2、未通过\n    };\n  },\n  watch: {\n    $route(to, from) {\n      this.getList();\n    },\n  },\n  created() {\n    this.onIsLogin();\n  },\n  mounted() {\n    serveInfoApi().then((res) => {\n      this.accountInfo = res.data;\n      this.formInline.phone = res.data.phone;\n      if (res.data.sms.open != 1) {\n        this.$router.push(\n          \"/admin/setting/sms/sms_config/index?url=\" + this.$route.path\n        );\n      }\n    });\n  },\n  computed: {\n    ...mapState(\"admin/layout\", [\"isMobile\"]),\n    labelWidth() {\n      return this.isMobile ? undefined : 75;\n    },\n    labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    },\n  },\n  methods: {\n    // 查看是否登录\n    onIsLogin() {\n      this.spinShow = true;\n      isLoginApi()\n        .then(async (res) => {\n          let data = res.data;\n          if (!data.status) {\n            this.$Message.warning(\"请先登录\");\n            this.$router.push(\n              \"/admin/setting/sms/sms_config/index?url=\" + this.$route.path\n            );\n          } else {\n            this.getList();\n          }\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 等级列表\n    getList() {\n      this.loading = true;\n      this.levelFrom.status = this.levelFrom.status || \"\";\n      this.levelFrom.is_have = this.levelFrom.is_have || \"\";\n      let data = {\n        data:\n          this.$route.path === \"/admin/setting/sms/sms_template_apply/index\"\n            ? this.levelFrom\n            : this.levelFrom2,\n        url:\n          this.$route.path === \"/admin/setting/sms/sms_template_apply/index\"\n            ? \"serve/sms/temps\"\n            : \"notify/sms/public_temp\",\n      };\n      let columns1 = [\n        {\n          title: \"ID\",\n          key: \"id\",\n          sortable: true,\n          width: 80,\n        },\n        {\n          title: \"模板ID\",\n          key: \"templateid\",\n          minWidth: 110,\n        },\n        {\n          title: \"模板名称\",\n          key: \"title\",\n          minWidth: 150,\n        },\n        {\n          title: \"模板内容\",\n          key: \"content\",\n          minWidth: 550,\n        },\n        {\n          title: \"模板类型\",\n          key: \"type\",\n          minWidth: 100,\n        },\n        {\n          title: \"模板状态\",\n          slot: \"status\",\n          minWidth: 100,\n        },\n      ];\n      if (\n        this.$route.path === \"/admin/setting/sms/sms_template_apply/commons\"\n      ) {\n        this.columns1 = Object.assign([], columns1)\n          .slice(0, 6)\n          .concat([\n            {\n              title: \"是否拥有\",\n              slot: \"is_have\",\n              minWidth: 110,\n            },\n          ]);\n      } else {\n        this.columns1 = columns1;\n      }\n      tempListApi(data)\n        .then(async (res) => {\n          let data = res.data;\n          this.levelLists = data.data;\n          this.total = data.count;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    pageChange(index) {\n      this.levelFrom.page = index;\n      this.getList();\n    },\n    // 添加\n    add() {\n      tempCreateApi()\n        .then(async (res) => {\n          this.FromData = res.data;\n          this.$refs.edits.modals = true;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 表格搜索\n    userSearchs() {\n      this.levelFrom.page = 1;\n      this.getList();\n    },\n    // 修改成功\n    submitFail() {\n      this.getList();\n    },\n    //修改签名\n    editSign() {\n      if (this.accountInfo.sms.sign_status === 0) {\n        this.$Message.warning(\"签名待审核，暂无法修改\");\n        return;\n      }\n      this.sign = this.accountInfo.sms.sign;\n      this.modals = true;\n    },\n    cancel(name) {\n      this.modals = false;\n      this.$refs[name].resetFields();\n      this.formInline.phone = this.accountInfo.phone;\n    },\n    // 提交\n    editSubmit(name) {\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          serveSign(this.formInline)\n            .then((res) => {\n              this.modals = false;\n              this.$Message.success(res.msg);\n              this.$refs[name].resetFields();\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg);\n            });\n        }\n      });\n    },\n    // 短信验证码\n    cutDown() {\n      if (this.formInline.phone) {\n        if (!this.canClick) return;\n        this.canClick = false;\n        this.cutNUm = 60;\n        let data = {\n          phone: this.formInline.phone,\n        };\n        captchaApi(data)\n          .then(async (res) => {\n            this.$Message.success(res.msg);\n          })\n          .catch((res) => {\n            this.$Message.error(res.msg);\n          });\n        let time = setInterval(() => {\n          this.cutNUm--;\n          if (this.cutNUm === 0) {\n            this.cutNUm = \"获取验证码\";\n            this.canClick = true;\n            clearInterval(time);\n          }\n        }, 1000);\n      } else {\n        this.$Message.warning(\"请填写手机号!\");\n      }\n    },\n  },\n};\n",null]}