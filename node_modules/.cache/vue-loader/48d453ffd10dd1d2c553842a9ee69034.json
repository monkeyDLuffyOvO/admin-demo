{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/system/configTab/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/system/configTab/list.vue","mtime":1649411723000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { configTabListApi, configTabAddApi, configTabEditApi, configSetStatusApi } from '@/api/system';\nimport formCreate from '@form-create/iview'\nimport editFrom from '@/components/from/from';\nimport request from '@/plugins/request';\nexport default {\n    name: 'list',\n    components: { formCreate: formCreate.$form(), editFrom },\n    data () {\n        return {\n            modals2: false,\n            grid: {\n                xl: 7,\n                lg: 7,\n                md: 12,\n                sm: 24,\n                xs: 24\n            },\n            loading: false,\n            formValidate: {\n                tab_id: 0,\n                page: 1,\n                limit: 20\n            },\n            total: 0,\n            columns1: [\n                {\n                    title: 'ID',\n                    key: 'id',\n                    width: 80\n                },\n                {\n                    title: '配置名称',\n                    key: 'info',\n                    minWidth: 130\n                },\n                {\n                    title: '字段变量',\n                    key: 'menu_name',\n                    minWidth: 140\n                },\n                {\n                    title: '字段类型',\n                    key: 'type',\n                    minWidth: 90\n                },\n                {\n                    title: '值',\n                    slot: 'values',\n                    minWidth: 230\n                },\n                {\n                    title: '是否显示',\n                    slot: 'statuss',\n                    minWidth: 90\n                },\n                {\n                    title: '操作',\n                    slot: 'action',\n                    fixed: 'right',\n                    minWidth: 120\n                }\n            ],\n            FromData: null,\n            FromRequestData: {},\n            modalTitleSs: '',\n            classList: [],\n            num: 0,\n            typeFrom: {\n                type: 0,\n                tab_id: this.$route.params.id\n            },\n            rules: []\n        }\n    },\n    watch: {\n        $route: {\n            handler: function (val, oldVal) {\n                this.getList();\n            },\n            // 深度观察监听\n            deep: true\n        }\n    },\n    mounted () {\n        this.getList();\n    },\n    methods: {\n        // 点击tab\n        onhangeTab (name) {\n            this.typeFrom.type = name;\n            this.classAdd();\n        },\n        // 新增表单\n        classAdd () {\n            configTabAddApi(this.typeFrom).then(async res => {\n                if (res.data.status === false) {\n                    return this.$authLapse(res.data);\n                }\n                let data = res.data || {};\n                this.FromRequestData = { action: data.action, method: data.method };\n                this.rules = data.rules;\n                this.modals2 = true;\n            }).catch(res => {\n                this.$Message.error(res.msg);\n            })\n        },\n        // 编辑表单\n        edit (row) {\n            configTabEditApi(row.id).then(async res => {\n                if (res.data.status === false) {\n                    return this.$authLapse(res.data);\n                }\n                let data = res.data || {};\n                this.FromRequestData = { action: data.action, method: data.method };\n                this.rules = data.rules;\n                this.$refs.edits.modals = true;\n                this.modals2 = true;\n            }).catch(res => {\n                this.$Message.error(res.msg);\n            })\n        },\n        // 提交表单\n        onSubmit (formData) {\n            request({\n                url: this.FromRequestData.action,\n                method: this.FromRequestData.method,\n                data: formData\n            }).then(res => {\n                this.$Message.success(res.msg);\n                setTimeout(() => {\n                    this.modals2 = false;\n                }, 1000);\n                setTimeout(() => {\n                    this.getList();\n                }, 1500);\n            }).catch(res => {\n                this.$Message.error(res.msg);\n            });\n        },\n        // 修改成功\n        submitFail () {\n            this.getList();\n        },\n        // 添加配置\n        configureAdd () {\n            // this.modals2 = true;\n            this.classAdd();\n        },\n        // 列表\n        getList () {\n            this.loading = true;\n            this.formValidate.tab_id = this.$route.params.id;\n            configTabListApi(this.formValidate).then(async res => {\n                let data = res.data\n                this.classList = data.list;\n                this.total = data.count;\n                this.loading = false;\n            }).catch(res => {\n                this.loading = false;\n                this.$Message.error(res.msg);\n            })\n        },\n        pageChange (index) {\n            this.formValidate.page = index;\n            this.getList();\n        },\n        // 删除\n        del (row, tit, num) {\n            let delfromData = {\n                title: tit,\n                num: num,\n                url: `/setting/config/${row.id}`,\n                method: 'DELETE',\n                ids: ''\n            };\n            this.$modalSure(delfromData).then((res) => {\n                this.$Message.success(res.msg);\n                this.classList.splice(num, 1);\n            }).catch(res => {\n                this.$Message.error(res.msg);\n            });\n        },\n        // 修改是否显示\n        onchangeIsShow (row) {\n            configSetStatusApi(row.id, row.status).then(async res => {\n                this.$Message.success(res.msg);\n            }).catch(res => {\n                this.$Message.error(res.msg);\n            })\n        }\n    }\n}\n",null]}