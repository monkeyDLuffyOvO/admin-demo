{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/marketing/userPoint/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/marketing/userPoint/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\nimport {\n  integralListApi,\n  integralStatisticsApi,\n  userPointApi,\n} from \"@/api/marketing\";\nimport { formatDate } from \"@/utils/validate\";\nimport cardsData from \"@/components/cards/cards\";\nimport exportExcel from \"@/utils/newToExcel.js\";\nimport timeOptions from \"@/utils/timeOptions\";\n\nexport default {\n  name: \"userPoint\",\n  components: { cardsData },\n  filters: {\n    formatDate(time) {\n      if (time !== 0) {\n        let date = new Date(time * 1000);\n        return formatDate(date, \"yyyy-MM-dd hh:mm\");\n      }\n    },\n  },\n  data() {\n    return {\n      cardLists: [],\n      loading: false,\n      options: timeOptions,\n      delfromData: {},\n      columns1: [\n        {\n          title: \"ID\",\n          key: \"id\",\n          width: 80,\n        },\n        {\n          title: \"标题\",\n          key: \"title\",\n          minWidth: 130,\n        },\n        {\n          title: \"变动前积分\",\n          key: \"balance\",\n          minWidth: 100,\n        },\n        {\n          title: \"积分变动\",\n          slot: \"change_number\",\n          minWidth: 100,\n        },\n        {\n          title: \"备注\",\n          key: \"mark\",\n          minWidth: 100,\n        },\n        {\n          title: \"用户微信昵称\",\n          key: \"nickname\",\n          minWidth: 150,\n        },\n        {\n          title: \"添加时间\",\n          key: \"add_time\",\n          minWidth: 100,\n        },\n      ],\n      tableList: [],\n      grid: {\n        xl: 7,\n        lg: 10,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      tableFrom: {\n        start_time: \"\",\n        end_time: \"\",\n        nickname: \"\",\n        page: 1,\n        limit: 15,\n      },\n      timeVal: [],\n      total: 0,\n    };\n  },\n  computed: {\n    ...mapState(\"admin/layout\", [\"isMobile\"]),\n    labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    },\n  },\n  created() {\n    this.getList();\n    this.getStatistics();\n  },\n  methods: {\n    // 拼团统计\n    getStatistics() {\n      integralStatisticsApi()\n        .then(async (res) => {\n          let data = res.data;\n          let classList = [\n            \"ios-help-buoy\",\n            \"md-create\",\n            \"ios-help-buoy-outline\",\n            \"md-help-buoy\",\n          ];\n          this.cardLists = res.data.res.map((item, index) => {\n            item.className = classList[index];\n            return item;\n          });\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n      // integralStatisticsApi().then(async res => {\n      //     let data = res.data\n      //     this.cardLists = data.res;\n      // }).catch(res => {\n      //     this.$Message.error(res.msg);\n      // })\n    },\n    // 具体日期\n    onchangeTime(e) {\n      this.timeVal = e;\n      this.tableFrom.start_time = e[0];\n      this.tableFrom.end_time = e[1];\n      this.tableFrom.page = 1;\n      this.getList();\n    },\n    // 列表\n    getList() {\n      this.loading = true;\n      integralListApi(this.tableFrom)\n        .then(async (res) => {\n          let data = res.data;\n          this.tableList = data.list;\n          this.total = res.data.count;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    pageChange(index) {\n      this.tableFrom.page = index;\n      this.getList();\n    },\n    // 表格搜索\n    userSearchs() {\n      this.tableFrom.page = 1;\n      this.getList();\n    },\n    // 导出\n    // exports () {\n    //     let formValidate = this.tableFrom;\n    //     let data = {\n    //         start_time: formValidate.start_time,\n    //         end_time: formValidate.end_time,\n    //         nickname: formValidate.nickname\n    //     };\n    //     userPointApi(data).then(res => {\n    //         location.href = res.data[0];\n    //     }).catch(res => {\n    //         this.$Message.error(res.msg)\n    //     })\n    // }\n    // 数据导出；\n    async exports() {\n      let [th, filekey, data, fileName] = [[], [], [], \"\"];\n      //   let fileName = \"\";\n      let excelData = JSON.parse(JSON.stringify(this.tableFrom));\n      excelData.page = 1;\n      for (let i = 0; i < excelData.page + 1; i++) {\n        let lebData = await this.getExcelData(excelData);\n        if (!fileName) fileName = lebData.filename;\n        if (!filekey.length) {\n          filekey = lebData.filekey;\n        }\n        if (!th.length) th = lebData.header;\n        if (lebData.export.length) {\n          data = data.concat(lebData.export);\n          excelData.page++;\n        } else {\n          exportExcel(th, filekey, fileName, data);\n          return;\n        }\n      }\n    },\n    getExcelData(excelData) {\n      return new Promise((resolve, reject) => {\n        userPointApi(excelData).then((res) => {\n          return resolve(res.data);\n        });\n      });\n    },\n  },\n};\n",null]}