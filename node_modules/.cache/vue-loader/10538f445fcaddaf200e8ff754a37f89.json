{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/statistic/user/components/wechetInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/statistic/user/components/wechetInfo.vue","mtime":1640264908000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import { statisticWechatApi, statisticWechatTrendApi } from '@/api/statistic'\n    import echartsNew from '@/components/echartsNew/index'\n    export default {\n        name: \"wechetInfo\",\n        components: {\n            echartsNew\n        },\n        props: {\n            formInline:{\n                type:Object,\n                default:function () {\n                    return {\n                        channel_type: '',\n                        data: ''\n                    }\n                }\n            }\n        },\n        data() {\n            return {\n                spinShow: false,\n                grid: {\n                    xl: 8,\n                    lg: 8,\n                    md: 8,\n                    sm: 24,\n                    xs: 24\n                },\n                timeVal: [],\n                dataTime: '',\n                list: [],\n                optionData: {},\n                style: { height: '400px' }\n            }\n        },\n        mounted() {\n            this.getStatistics();\n            this.getTrend();\n        },\n        methods: {\n            // 具体日期\n            onchangeTime (e) {\n                this.timeVal = e\n                this.dataTime = this.timeVal.join('-');\n                this.name = this.dataTime;\n                this.getStatistics();\n                this.getTrend();\n                // this.userFrom.user_time = this.timeVal.join('-')\n            },\n            // 统计\n            getStatistics() {\n                statisticWechatApi(this.formInline).then(async res => {\n                    const cardLists = res.data;\n                    this.list = [\n                        {\n                            name: '新增关注用户数',\n                            icon: 'iconxinzengguanzhuyonghu',\n                            list: cardLists.subscribe\n                        },\n                        {\n                            name: '新增取关用户数',\n                            icon: 'iconxinzengquguanyonghu',\n                            list: cardLists.unSubscribe\n                        },\n                        {\n                            name: '净增用户数',\n                            icon: 'iconjingzengyonghu',\n                            list: cardLists.increaseSubscribe\n                        },\n                        {\n                            name: '累积关注用户数',\n                            icon: 'iconleijiguanzhuyonghu',\n                            list: cardLists.cumulativeSubscribe\n                        },\n                        {\n                            name: '累积取关用户数',\n                            icon: 'iconleijiquguanyonghu',\n                            list: cardLists.cumulativeUnSubscribe\n                        }\n                    ]\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 统计图\n            getTrend() {\n                this.spinShow = true;\n                statisticWechatTrendApi(this.formInline).then(async res => {\n                    let legend = res.data.series.map(item => {\n                        return item.name\n                    })\n                    let xAxis = res.data.xAxis;\n                    let col = ['#5B8FF9', '#5AD8A6', '#5D7092', '#5D7092'];\n                    let series = []\n                    res.data.series.map((item,index) => {\n                        series.push({\n                            name: item.name,\n                            type: 'line',\n                            data: item.value,\n                            itemStyle: {\n                                normal: {\n                                    color: col[index]\n                                }\n                            },\n                            smooth: true\n                        })\n                    })\n                    this.optionData = {\n                        tooltip: {\n                            trigger: 'axis',\n                            axisPointer: {\n                                type: 'cross',\n                                label: {\n                                    backgroundColor: '#6a7985'\n                                }\n                            }\n                        },\n                        legend: {\n                            x:'center',\n                            data: legend\n                        },\n                        grid: {\n                            left: '3%',\n                            right: '4%',\n                            bottom: '3%',\n                            containLabel: true\n                        },\n                        toolbox: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tright: '2%',\n                            feature: {\n                                saveAsImage: {}\n                            }\n                        },\n                        xAxis: {\n                            type: 'category',\n                            boundaryGap: true,\n                            // axisTick:{\n                            //     show:false\n                            // },\n                            // axisLine:{\n                            //     show:false\n                            // },\n                            // splitLine: {\n                            //     show: false\n                            // },\n                            axisLabel: {\n                                interval: 0,\n                                rotate: 40,\n                                textStyle: {\n                                    color: '#000000'\n                                }\n                            },\n                            data: xAxis\n                        },\n                        yAxis: {\n                            type: 'value',\n                            axisLine: {\n                                show: false\n                            },\n                            axisTick: {\n                                show: false\n                            },\n                            axisLabel: {\n                                textStyle: {\n                                    color: '#7F8B9C'\n                                }\n                            },\n                            splitLine: {\n                                show: true,\n                                lineStyle: {\n                                    color: '#F5F7F9'\n                                }\n                            }\n                        },\n                        series: series\n                    }\n                    this.spinShow = false;\n                }).catch(res => {\n                    this.$Message.error(res.msg);\n                    this.spinShow = false;\n                })\n            },\n        }\n    }\n",null]}