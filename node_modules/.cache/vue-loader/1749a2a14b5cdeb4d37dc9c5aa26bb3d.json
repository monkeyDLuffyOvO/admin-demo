{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/user/list/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/user/list/index.vue","mtime":1662534299000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport userLabel from \"../../../components/userLabel\";\nimport labelList from \"@/components/labelList\";\nimport { mapState } from \"vuex\";\nimport expandRow from \"./tableExpand.vue\";\nimport {\n  userList,\n  getUserData,\n  isShowApi,\n  editOtherApi,\n  giveLevelApi,\n  userSetGroup,\n  userGroupApi,\n  levelListApi,\n  userSetLabelApi,\n  userLabelApi,\n  userSynchro,\n  getUserSaveForm,\n  giveLevelTimeApi,\n  extendInfo\n} from \"@/api/user\";\nimport { agentSpreadApi } from \"@/api/agent\";\nimport editFrom from \"../../../components/from/from\";\nimport sendFrom from \"@/components/sendCoupons/index\";\nimport userDetails from \"./handle/userDetails\";\nimport newsCategory from \"@/components/newsCategory/index\";\nimport city from \"@/utils/city\";\nimport customerInfo from \"@/components/customerInfo\";\nexport default {\n  name: \"user_list\",\n  components: {\n    expandRow,\n    editFrom,\n    sendFrom,\n    userDetails,\n    newsCategory,\n    customerInfo,\n    userLabel,\n    labelList,\n  },\n  data() {\n    return {\n      dataLabel: [],\n      labelListShow: false,\n      labelShow: false,\n      customerShow: false,\n      promoterShow: false,\n      labelActive: {\n        uid: 0,\n      },\n      formInline: {\n        uid: 0,\n        spread_uid: 0,\n        image: \"\",\n      },\n      options: {\n        shortcuts: [\n          {\n            text: \"今天\",\n            value() {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(\n                new Date(\n                  new Date().getFullYear(),\n                  new Date().getMonth(),\n                  new Date().getDate()\n                )\n              );\n              return [start, end];\n            },\n          },\n          {\n            text: \"昨天\",\n            value() {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(\n                start.setTime(\n                  new Date(\n                    new Date().getFullYear(),\n                    new Date().getMonth(),\n                    new Date().getDate() - 1\n                  )\n                )\n              );\n              end.setTime(\n                end.setTime(\n                  new Date(\n                    new Date().getFullYear(),\n                    new Date().getMonth(),\n                    new Date().getDate() - 1\n                  )\n                )\n              );\n              return [start, end];\n            },\n          },\n          {\n            text: \"最近7天\",\n            value() {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(\n                start.setTime(\n                  new Date(\n                    new Date().getFullYear(),\n                    new Date().getMonth(),\n                    new Date().getDate() - 6\n                  )\n                )\n              );\n              return [start, end];\n            },\n          },\n          {\n            text: \"最近30天\",\n            value() {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(\n                start.setTime(\n                  new Date(\n                    new Date().getFullYear(),\n                    new Date().getMonth(),\n                    new Date().getDate() - 29\n                  )\n                )\n              );\n              return [start, end];\n            },\n          },\n          {\n            text: \"本月\",\n            value() {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(\n                start.setTime(\n                  new Date(new Date().getFullYear(), new Date().getMonth(), 1)\n                )\n              );\n              return [start, end];\n            },\n          },\n          {\n            text: \"本年\",\n            value() {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(\n                start.setTime(new Date(new Date().getFullYear(), 0, 1))\n              );\n              return [start, end];\n            },\n          },\n        ],\n      },\n      collapse: false,\n      headeNum: [\n        { type: \"\", name: \"全部\" },\n        { type: \"wechat\", name: \"微信公众号\" },\n        { type: \"routine\", name: \"微信小程序\" },\n        { type: \"h5\", name: \"H5\" },\n        { type: \"pc\", name: \"PC\" },\n        { type: \"app\", name: \"APP\" },\n      ],\n      address: [],\n      addresData: city,\n      isShowSend: true,\n      modal13: false,\n      maxCols: 4,\n      scrollerHeight: \"600\",\n      contentTop: \"130\",\n      contentWidth: \"98%\",\n      grid: {\n        xl: 8,\n        lg: 8,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      grid2: {\n        xl: 18,\n        lg: 16,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      loading: false,\n      total: 0,\n      userFrom: {\n        label_id: \"\",\n        user_type: \"\",\n        status: \"\",\n        sex: \"\",\n        is_promoter: \"\",\n        country: \"\",\n        isMember: \"\",\n        pay_count: \"\",\n        user_time_type: \"\",\n        user_time: \"\",\n        nickname: \"\",\n        province: \"\",\n        city: \"\",\n        page: 1,\n        limit: 15,\n        level: \"\",\n        group_id: \"\",\n        field_key: \"\",\n      },\n      field_key: \"\",\n      level: \"\",\n      group_id: \"\",\n      label_id: \"\",\n      user_time_type: \"\",\n      pay_count: \"\",\n      columns: [\n        {\n          type: \"expand\",\n          width: 40,\n          render: (h, params) => {\n            return h(expandRow, {\n              props: {\n                row: params.row,\n              },\n            });\n          },\n        },\n        // {\n        //     type: 'selection',\n        //     width: 60,\n        //     align: 'center'\n        // },\n        {\n          width: 60,\n          align: \"center\",\n          renderHeader: (h, params) => {\n            return h(\n              \"div\",\n              {\n                class: {\n                  \"select-panel\": true,\n                },\n                on: {\n                  mouseenter: (e) => {\n                    this.display = \"block\";\n                  },\n                  mouseleave: (e) => {\n                    this.display = \"none\";\n                  },\n                },\n              },\n              [\n                h(\"Checkbox\", {\n                  props: {\n                    value: this.checkBox,\n                  },\n                  on: {\n                    \"on-change\": (e) => {\n                      this.checkBox = e;\n                      this.$refs.table.selectAll(this.checkBox);\n                      this.isAll = e ? 0 : -1;\n                    },\n                  },\n                }),\n                h(\n                  \"div\",\n                  {\n                    style: {\n                      position: \"absolute\",\n                      top: 0,\n                      zIndex: 2,\n                      display: this.display,\n                      width: \"80px\",\n                      // height: \"100%\",\n                      padding: \"5px\",\n                      borderRadius: \"4px\",\n                      backgroundColor: \"#fff\",\n                      boxShadow: \"0 0px 5px rgba(0, 0, 0, 0.2)\",\n                      transform: \"translateX(25%)\",\n                    },\n                  },\n                  [\n                    h(\n                      \"div\",\n                      {\n                        class: {\n                          \"select-item\": true,\n                          on: this.isAll === 0,\n                        },\n                        style: {\n                          padding: \"1px 6px\",\n                          cursor: \"pointer\",\n                          height: \"50%\",\n                        },\n                        on: {\n                          click: (e) => {\n                            if (this.isAll === 0) {\n                              this.isAll = -1;\n                              this.checkBox = false;\n                              this.$refs.table.selectAll(this.checkBox);\n                            } else {\n                              this.isAll = 0;\n                              if (!this.selectionList.length) {\n                                this.checkBox = true;\n                                this.$refs.table.selectAll(this.checkBox);\n                              }\n                            }\n                            this.display = \"none\";\n                          },\n                        },\n                      }\n                      // \"选择当页\"\n                    ),\n                    h(\n                      \"div\",\n                      {\n                        class: {\n                          \"select-item\": true,\n                          on: this.isAll === 1,\n                        },\n                        style: {\n                          padding: \"4px\",\n                          cursor: \"pointer\",\n                          // height: \"50%\",\n                        },\n                        on: {\n                          click: (e) => {\n                            if (this.isAll === 1) {\n                              this.isAll = -1;\n                              this.checkBox = false;\n                            } else {\n                              this.isAll = 1;\n                              this.checkBox = true;\n                            }\n                            this.$refs.table.selectAll(this.checkBox);\n                            this.display = \"none\";\n                          },\n                        },\n                      },\n                      \"选择全部\"\n                    ),\n                  ]\n                ),\n              ]\n            );\n          },\n          render: (h, params) => {\n            return h(\"Checkbox\", {\n              props: {\n                value: params.row.checkBox,\n              },\n              on: {\n                \"on-change\": (e) => {\n                  if (e) {\n                    this.selectionList.push(params.row);\n                  } else {\n                    this.checkBox = false;\n                    this.selectionList.forEach((item, index) => {\n                      if (item.id === params.row.id) {\n                        this.selectionList.splice(index, 1);\n                      }\n                    });\n                  }\n                  this.isAll = this.selectionList.length ? 0 : -1;\n                  // this.responseData为查询出的结果数据\n                  // params.row.checkBox = e;\n                  params.row.checkBox = e;\n                  this.userLists[params.index].checkBox = e;\n                },\n              },\n              ref: \"checkbox\",\n              refInFor: true,\n            });\n          },\n        },\n        {\n          title: \"UID\",\n          key: \"uid\",\n          width: 60,\n        },\n        {\n          title: \"头像\",\n          slot: \"avatars\",\n          width: 50,\n        },\n        {\n          title: \"昵称\",\n          slot: \"nickname\",\n          minWidth: 150,\n        },\n        {\n          title: \"付费会员\",\n          slot: \"isMember\",\n          minWidth: 90,\n        },\n        {\n          title: \"用户等级\",\n          key: \"level\",\n          minWidth: 90,\n        },\n        {\n          title: \"分组\",\n          key: \"group_id\",\n          minWidth: 100,\n        },\n        {\n          title: \"手机号\",\n          key: \"phone\",\n          minWidth: 100,\n        },\n        {\n          title: \"用户类型\",\n          key: \"user_type\",\n          minWidth: 100,\n        },\n        {\n          title: \"内部联系人\",\n          slot: \"follow_list\",\n          minWidth: 100,\n        },\n        {\n          title: \"余额\",\n          key: \"now_money\",\n          sortable: \"custom\",\n          minWidth: 100,\n        },\n        {\n          title: \"操作\",\n          slot: \"action\",\n          fixed: \"right\",\n          minWidth: 120,\n        },\n      ],\n      userLists: [],\n      FromData: null,\n      selectionList: [],\n      user_ids: \"\",\n      selectedData: [],\n      timeVal: [],\n      array_ids: [],\n      groupList: [],\n      levelList: [],\n      labelFrom: {\n        page: 1,\n        limit: \"\",\n      },\n      labelLists: [],\n      display: \"none\",\n      checkBox: false,\n      selectionCopy: [],\n      isAll: -1,\n      userId: 0,\n    };\n  },\n  watch: {\n    selectionList(value) {\n      let arr = value.map((item) => item.uid);\n      this.array_ids = arr;\n      this.user_ids = arr.join();\n    },\n    userLists: {\n      deep: true,\n      handler(value) {\n        value.forEach((item) => {\n          this.selectionList.forEach((itm) => {\n            if (itm.uid === item.uid) {\n              item.checkBox = true;\n            }\n          });\n        });\n        const arr = this.userLists.filter((item) => item.checkBox);\n        if (this.userLists.length) {\n          this.checkBox = this.userLists.length === arr.length;\n        } else {\n          this.checkBox = false;\n        }\n      },\n    },\n  },\n  computed: {\n    ...mapState(\"admin/layout\", [\"isMobile\"]),\n    labelWidth() {\n      return this.isMobile ? undefined : 100;\n    },\n    labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    },\n  },\n  created() {\n    this.getList();\n  },\n  mounted() {\n    this.userGroup();\n    this.levelLists();\n    this.groupLists();\n  },\n  methods: {\n    closeLabel(label) {\n      let index = this.dataLabel.indexOf(\n        this.dataLabel.filter((d) => d.id == label.id)[0]\n      );\n      this.dataLabel.splice(index, 1);\n    },\n    activeData(dataLabel) {\n      this.labelListShow = false;\n      this.dataLabel = dataLabel;\n    },\n    openLabelList(row) {\n      this.labelListShow = true;\n      this.$refs.labelList.userLabel(\n        JSON.parse(JSON.stringify(this.dataLabel))\n      );\n    },\n    // 标签弹窗关闭\n    labelListClose() {\n      this.labelListShow = false;\n    },\n\n    selectAll(row) {\n      let list = this.userLists;\n      if (list.length) {\n        this.selectionList = list;\n        this.selectionCopy = list;\n      }\n      this.userLists.forEach((item, index) => {\n        item.checkBox = this.checkBox;\n        this.$set(this.userLists, index, item);\n      });\n    },\n    // 标签弹窗关闭\n    labelClose(e) {\n      if (!e) {\n        this.getList();\n      }\n      this.labelShow = false;\n      this.labelActive.uid = 0;\n    },\n    // 提交\n    putSend(name) {\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          if (!this.formInline.spread_uid) {\n            return this.$Message.error(\"请上传用户\");\n          }\n          agentSpreadApi(this.formInline)\n            .then((res) => {\n              this.promoterShow = false;\n              this.$Message.success(res.msg);\n              this.getList();\n              this.$refs[name].resetFields();\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg);\n            });\n        }\n      });\n    },\n    save() {\n      this.$modalForm(getUserSaveForm()).then(() => this.getList());\n\t\t\t// getUserSaveForm().then(async (res) => {\n\t\t\t// \tif(res.data.status === false){\n\t\t\t// \t\treturn this.$authLapse(res.data);\n\t\t\t// \t}\n\t\t\t// \tthis.FromData = res.data;\n\t\t\t// \tthis.$refs.edits.modals = true;\n\t\t\t// }).catch(err=>{\n\t\t\t// \tthis.$Message.error(err.msg);\n\t\t\t// })\n    },\n    synchro() {\n      userSynchro()\n        .then((res) => {\n          this.$Message.success(res.msg);\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n    // 分组列表\n    groupLists() {\n      this.loading = true;\n      userLabelApi(this.labelFrom)\n        .then(async (res) => {\n          let data = res.data;\n          this.labelLists = data.list;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    onClickTab(type) {\n      this.userFrom.page = 1;\n      this.userFrom.user_type = type;\n      this.getList();\n    },\n    userGroup() {\n      let data = {\n        page: 1,\n        limit: \"\",\n      };\n      userGroupApi(data).then((res) => {\n        this.groupList = res.data.list;\n      });\n    },\n    levelLists() {\n      let data = {\n        page: 1,\n        limit: \"\",\n        title: \"\",\n        is_show: 1,\n      };\n      levelListApi(data).then((res) => {\n        this.levelList = res.data.list;\n      });\n    },\n    // 批量设置分组；\n    setGroup() {\n      if (this.selectionList.length === 0) {\n        this.$Message.warning(\"请选择要设置分组的用户\");\n      } else {\n        let uids = { all: this.isAll };\n        if (this.isAll === 0) {\n          uids.uids = this.array_ids;\n        } else if (this.isAll === 1) {\n          uids.where = this.userFrom;\n          uids.where = {\n            city: this.userFrom.city,\n            country: this.userFrom.country,\n            field_key: this.userFrom.field_key,\n            group_id: this.userFrom.group_id,\n            isMember: this.userFrom.isMember,\n            is_promoter: this.userFrom.is_promoter,\n            label_id: this.userFrom.label_id,\n            level: this.userFrom.level,\n            nickname: this.userFrom.nickname,\n            pay_count: this.userFrom.pay_count,\n            province: this.userFrom.province,\n            sex: this.userFrom.sex,\n            status: this.userFrom.status,\n            user_time: this.userFrom.user_time,\n            user_time_type: this.userFrom.user_time_type,\n            user_type: this.userFrom.user_type,\n          };\n        }\n        this.$modalForm(userSetGroup(uids)).then(() => this.getList());\n      }\n    },\n    // 批量设置标签；\n    setLabel() {\n      if (this.selectionList.length === 0) {\n        this.$Message.warning(\"请选择要设置标签的用户\");\n      } else {\n        let uids = { all: this.isAll };\n        if (this.isAll === 0) {\n          uids.uids = this.array_ids;\n        } else if (this.isAll === 1) {\n          uids.where = {\n            city: this.userFrom.city,\n            country: this.userFrom.country,\n            field_key: this.userFrom.field_key,\n            group_id: this.userFrom.group_id,\n            isMember: this.userFrom.isMember,\n            is_promoter: this.userFrom.is_promoter,\n            label_id: this.userFrom.label_id,\n            level: this.userFrom.level,\n            nickname: this.userFrom.nickname,\n            pay_count: this.userFrom.pay_count,\n            province: this.userFrom.province,\n            sex: this.userFrom.sex,\n            status: this.userFrom.status,\n            user_time: this.userFrom.user_time,\n            user_time_type: this.userFrom.user_time_type,\n            user_type: this.userFrom.user_type,\n          };\n        }\n        this.labelShow = true;\n        this.labelActive.uid = uids;\n        // this.$modalForm(userSetLabelApi(uids)).then(() => this.getList());\n      }\n    },\n    // 是否为付费会员；\n    changeMember() {\n      this.userFrom.page = 1;\n      this.getList();\n    },\n    // 选择国家\n    changeCountry() {\n      if (this.userFrom.country === \"abroad\" || !this.userFrom.country) {\n        this.selectedData = [];\n        this.userFrom.province = \"\";\n        this.userFrom.city = \"\";\n        this.address = [];\n      }\n    },\n    // 选择地址\n    handleChange(value, selectedData) {\n      this.selectedData = selectedData.map((o) => o.label);\n      this.userFrom.province = this.selectedData[0];\n      this.userFrom.city = this.selectedData[1];\n    },\n    // 具体日期\n    onchangeTime(e) {\n      this.timeVal = e;\n      this.userFrom.user_time = this.timeVal.join(\"-\");\n    },\n    // 操作\n    changeMenu(row, name, index) {\n      this.userId = row.uid;\n      let uid = [];\n      uid.push(row.uid);\n      let uids = { uids: uid };\n      switch (name) {\n        case \"1\":\n          this.$refs.userDetails.modals = true;\n          this.$refs.userDetails.activeName = \"info\";\n          this.$refs.userDetails.getDetails(row.uid);\n          break;\n        case \"2\":\n          this.getOtherFrom(row.uid);\n          break;\n        case \"3\":\n          // this.giveLevel(row.uid);\n          this.giveLevelTime(row.uid);\n          break;\n        case \"4\":\n          this.del(\n            row,\n            \"清除 【 \" + row.nickname + \" 】的会员等级\",\n            index,\n            \"user\"\n          );\n          break;\n        case \"5\":\n          this.$modalForm(userSetGroup(uids)).then(() =>\n            this.$refs.sends.getList()\n          );\n          break;\n        case \"6\":\n          this.openLabel(row);\n          // this.$modalForm(userSetLabelApi(uids)).then(() => this.$refs.sends.getList());\n          break;\n        case \"7\":\n          this.editS(row);\n          break;\n        default:\n          this.del(\n            row,\n            \"解除【 \" + row.nickname + \" 】的上级推广人\",\n            index,\n            \"tuiguang\"\n          );\n          break;\n        // this.del(row, '清除 【 ' + row.nickname + ' 】的会员等级', index)\n      }\n    },\n    openLabel(row) {\n      this.labelShow = true;\n      this.labelActive.uid = row.uid;\n    },\n    editS(row) {\n      this.promoterShow = true;\n      this.formInline.uid = row.uid;\n    },\n    customer() {\n      this.customerShow = true;\n    },\n    imageObject(e) {\n      this.customerShow = false;\n      this.formInline.spread_uid = e.uid;\n      this.formInline.image = e.image;\n    },\n    cancel(name) {\n      this.promoterShow = false;\n      this.$refs[name].resetFields();\n    },\n    // 赠送会员等级\n    giveLevel(id) {\n      giveLevelApi(id)\n        .then(async (res) => {\n          if (res.data.status === false) {\n            return this.$authLapse(res.data);\n          }\n          this.FromData = res.data;\n          this.$refs.edits.modals = true;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 赠送会员等级\n    giveLevelTime(id) {\n      giveLevelTimeApi(id)\n        .then(async (res) => {\n          if (res.data.status === false) {\n            return this.$authLapse(res.data);\n          }\n          this.FromData = res.data;\n          this.$refs.edits.modals = true;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 删除\n    del(row, tit, num, name) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url:\n          name === \"user\"\n            ? `user/del_level/${row.uid}`\n            : `agent/stair/delete_spread/${row.uid}`,\n        method: name === \"user\" ? \"DELETE\" : \"PUT\",\n        // url: `user/del_level/${row.uid}`,\n        // method: 'DELETE',\n        ids: \"\",\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.getList();\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 清除会员删除成功\n    submitModel() {\n      this.getList();\n    },\n    // 会员列表\n    getList() {\n      this.loading = true;\n      let activeIds = [];\n      this.dataLabel.forEach((item) => {\n        activeIds.push(item.id);\n      });\n      this.userFrom.label_id = activeIds.join(\",\") || \"\";\n      this.userFrom.user_type = this.userFrom.user_type || \"\";\n      this.userFrom.status = this.userFrom.status || \"\";\n      this.userFrom.sex = this.userFrom.sex || \"\";\n      this.userFrom.is_promoter = this.userFrom.is_promoter || \"\";\n      this.userFrom.country = this.userFrom.country || \"\";\n      this.userFrom.user_time_type = this.userFrom.user_time_type || \"\";\n      this.userFrom.pay_count = this.userFrom.pay_count || \"\";\n      // this.userFrom.label_id = this.userFrom.label_id || \"\";\n      this.userFrom.field_key = this.field_key === \"all\" ? \"\" : this.field_key;\n      this.userFrom.level =\n        this.userFrom.level === \"all\" ? \"\" : this.userFrom.level;\n      this.userFrom.group_id =\n        this.userFrom.group_id === \"all\" ? \"\" : this.userFrom.group_id;\n      userList(this.userFrom)\n        .then(async (res) => {\n          let data = res.data;\n          data.list.forEach((item) => {\n            item.checkBox = false;\n          });\n          this.userLists = data.list;\n          if (this.isAll == 1) {\n            this.selectionList = this.userLists;\n            this.userLists = data.list.map((item) => {\n              item.checkBox = true;\n              return item;\n            });\n          }\n          this.total = data.count;\n          // this.isAll = -1;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    pageChange(index) {\n      this.userFrom.page = index;\n      this.getList();\n    },\n    // 搜索\n    userSearchs() {\n      if (this.userFrom.user_time_type && !this.timeVal.length) {\n        return this.$Message.error(\"请选择访问时间\");\n      }\n      if (this.timeVal.length && !this.userFrom.user_time_type) {\n        return this.$Message.error(\"请选择访问情况\");\n      }\n      this.userFrom.page = 1;\n      this.selectionList = [];\n      this.getList();\n    },\n    // 重置\n    reset(name) {\n      this.userFrom = {\n        user_type: \"\",\n        status: \"\",\n        sex: \"\",\n        is_promoter: \"\",\n        country: \"\",\n        pay_count: \"\",\n        user_time_type: \"\",\n        user_time: \"\",\n        nickname: \"\",\n        field_key: \"\",\n        level: \"\",\n        group_id: \"\",\n        label_id: \"\",\n        page: 1, // 当前页\n        limit: 20, // 每页显示条数\n      };\n      this.field_key = \"\";\n      this.level = \"\";\n      this.group_id = \"\";\n      this.label_id = \"\";\n      this.user_time_type = \"\";\n      this.pay_count = \"\";\n      this.timeVal = [];\n      this.selectionList = [];\n      this.getList();\n    },\n    // 获取编辑表单数据\n    getUserFrom(id) {\n    this.$modalForm(getUserData(id)).then(() => this.getList());\n      // getUserData(id)\n      //   .then(async (res) => {\n      //     if (res.data.status === false) {\n      //       return this.$authLapse(res.data);\n      //     }\n      //     this.FromData = res.data;\n      //     this.$refs.edits.modals = true;\n      //   })\n      //   .catch((res) => {\n      //     this.$Message.error(res.msg);\n      //   });\n    },\n    // 获取积分余额表单\n    getOtherFrom(id) {\n      editOtherApi(id)\n        .then(async (res) => {\n          if (res.data.status === false) {\n            return this.$authLapse(res.data);\n          }\n          res.data.rules[1].props.max = 999999;\n          res.data.rules[1].props.precision = 0;\n          this.FromData = res.data;\n          this.$refs.edits.modals = true;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 修改状态\n    onchangeIsShow(row) {\n      let data = {\n        id: row.uid,\n        status: row.status,\n      };\n      isShowApi(data)\n        .then(async (res) => {\n          this.$Message.success(res.msg);\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 全选\n    onSelectTab(selection) {\n      this.selectionList = selection;\n      let data = [];\n      this.selectionList.map((item) => {\n        data.push(item.uid);\n      });\n      this.array_ids = data;\n      this.user_ids = data.join(\",\");\n    },\n    // 点击发送优惠券\n    onSend() {\n      if (this.selectionList.length === 0) {\n        this.$Message.warning(\"请选择要发送优惠券的用户\");\n      } else {\n        this.$refs.sends.modals = true;\n        this.$refs.sends.getList();\n      }\n    },\n    // 发送图文消息\n    onSendPic() {\n      if (this.selectionList.length === 0) {\n        this.$Message.warning(\"请选择要发送图文消息的用户\");\n      } else {\n        this.modal13 = true;\n      }\n    },\n    // 编辑\n    edit(row) {\n      this.getUserFrom(row.uid);\n      // this.$modalForm(getUserSaveForm(row.uid)).then(() => this.getList());\n    },\n    //信息补充\n    extendInfo(row) {\n      // this.$modalForm(extendInfo(row.uid)).then(() => this.getList());\n      extendInfo(row.uid).then(async (res) => {\n      \tif(res.data.status === false){\n      \t\treturn this.$authLapse(res.data);\n      \t}\n      \tthis.FromData = res.data;\n      \tthis.$refs.edits.modals = true;\n        this.getList()\n      }).catch(err=>{\n      \tthis.$Message.error(err.msg);\n      })\n    },\n    // 修改成功\n    submitFail(p) {\n      this.getList();\n      if (this.$refs.userDetails.modals) {\n        this.$refs.userDetails.getDetails(this.userId);\n      }\n    },\n    // 排序\n    sortChanged(e) {\n      this.userFrom[e.key] = e.order;\n      this.getList();\n    },\n    onSelectCancel(selection, row) {},\n  },\n};\n",null]}