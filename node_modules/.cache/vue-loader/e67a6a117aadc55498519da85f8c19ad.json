{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/setting/systemStore/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/setting/systemStore/index.vue","mtime":1650783676000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { storeApi, keyApi, storeAddApi } from '@/api/setting';\nimport { mapState } from 'vuex';\nimport city from '@/utils/city';\nimport uploadPictures from '@/components/uploadPictures';\nexport default {\n    name: 'systemStore',\n    components: { uploadPictures },\n    data () {\n        const validatePhone = (rule, value, callback) => {\n            if (!value) {\n                return callback(new Error('请填写手机号'));\n            } else if (!/^1[3456789]\\d{9}$/.test(value)) {\n                callback(new Error('手机号格式不正确!'));\n            } else {\n                callback();\n            }\n        };\n        const validateUpload = (rule, value, callback) => {\n            if (!this.formItem.image) {\n                callback(new Error('请上传门店logo'))\n            } else {\n                callback()\n            }\n        };\n        return {\n            spinShow: false,\n            modalMap: false,\n            addresData: city,\n            formItem: {\n                name: '',\n                introduction: '',\n                phone: '',\n                address: [],\n                address2: [],\n                detailed_address: '',\n                valid_time: [],\n                day_time: [],\n                latlng: '',\n                id: 0\n            },\n            ruleValidate: {\n                name: [\n                    { required: true, message: '请输入门店名称', trigger: 'blur' }\n                ],\n                mail: [\n                    { required: true, message: 'Mailbox cannot be empty', trigger: 'blur' },\n                    { type: 'email', message: 'Incorrect email format', trigger: 'blur' }\n                ],\n                address: [\n                    { required: true, message: '请选择门店地址', type: 'array', trigger: 'change' }\n                ],\n                valid_time: [\n                    {\n                        required: true,\n                        type: 'array',\n                        message: '请选择核销时效',\n                        trigger: 'change',\n                        fields: {\n                            0: { type: 'date', required: true, message: '请选择年度范围' },\n                            1: { type: 'date', required: true, message: '请选择年度范围' }\n                        }\n                    }\n\n                ],\n                day_time: [\n                    { required: true, type: 'array', message: '请选择门店营业时间', trigger: 'change' }\n                ],\n                phone: [\n                    { required: true, validator: validatePhone, trigger: 'blur' }\n                ],\n                detailed_address: [\n                    { required: true, message: '请输入详细地址', trigger: 'blur' }\n                ],\n                image: [\n                    { required: true, validator: validateUpload, trigger: 'change' }\n                ],\n                latlng: [\n                    { required: true, message: '请选择经纬度', trigger: 'blur' }\n                ]\n            },\n            keyUrl: '',\n            grid: {\n                xl: 10,\n                lg: 16,\n                md: 18,\n                sm: 24,\n                xs: 24\n            },\n            gridPic: {\n                xl: 6,\n                lg: 8,\n                md: 12,\n                sm: 12,\n                xs: 12\n            },\n            gridBtn: {\n                xl: 4,\n                lg: 8,\n                md: 8,\n                sm: 8,\n                xs: 8\n            },\n            modalPic: false,\n            isChoice: '单选'\n        }\n    },\n    created () {\n        city.map((item) => {\n            item.value = item.label;\n            if (item.children && item.children.length) {\n                item.children.map((j) => {\n                    j.value = j.label;\n                    if (j.children && j.children.length) {\n                        j.children.map((o) => {\n                            o.value = o.label;\n                        });\n                    }\n                });\n            }\n        });\n        this.getKey();\n        this.getFrom();\n    },\n    computed: {\n        ...mapState('admin/layout', [\n            'isMobile'\n        ]),\n        labelWidth () {\n            return this.isMobile ? undefined : 100;\n        },\n        labelPosition () {\n            return this.isMobile ? 'top' : 'right';\n        }\n    },\n    mounted: function () {\n        window.addEventListener('message', function (event) {\n            // 接收位置信息，用户选择确认位置点后选点组件会触发该事件，回传用户的位置信息\n            var loc = event.data;\n            if (loc && loc.module === 'locationPicker') { // 防止其他应用也会向该页面post信息，需判断module是否为'locationPicker'\n                window.parent.selectAdderss(loc);\n            }\n        }, false);\n        window.selectAdderss = this.selectAdderss;\n    },\n    methods: {\n        // 选择经纬度\n        selectAdderss (data) {\n            this.formItem.latlng = data.latlng.lat + ',' + data.latlng.lng;\n            this.modalMap = false;\n        },\n        // key值\n        getKey () {\n            keyApi().then(async res => {\n                let keys = res.data.key;\n                this.keyUrl = `https://apis.map.qq.com/tools/locpicker?type=1&key=${keys}&referer=myapp`;\n            }).catch(res => {\n                this.$Message.error(res.msg);\n            })\n        },\n        // 详情\n        getFrom () {\n            this.spinShow = true;\n            storeApi().then(async res => {\n                let info = res.data.info || null;\n                this.formItem = info || this.formItem;\n                this.formItem.address = info.address2;\n                this.spinShow = false;\n            }).catch(res => {\n                this.spinShow = false;\n                this.$Message.error(res.msg);\n            })\n        },\n        // 选择图片\n        modalPicTap () {\n            this.modalPic = true;\n        },\n        // 选中图片\n        getPic (pc) {\n            this.formItem.image = pc.att_dir;\n            this.modalPic = false;\n        },\n        // 选择地址\n        handleChange (value, selectedData) {\n            this.formItem.address = selectedData.map(o => o.label);\n            //  this.formItem.address2 = selectedData.map(o => o.value);\n        },\n        // 核销时效\n        onchangeDate (e) {\n            this.formItem.valid_time = e;\n        },\n        // 营业时间\n        onchangeTime (e) {\n            this.formItem.day_time = e;\n        },\n        onSearch () {\n            this.modalMap = true;\n        },\n        // 提交\n        handleSubmit (name) {\n            this.$refs[name].validate((valid) => {\n                if (valid) {\n                    storeAddApi(this.formItem).then(async res => {\n                        this.$Message.success(res.msg);\n                    }).catch(res => {\n                        this.$Message.error(res.msg);\n                    })\n                } else {\n                    return false;\n                }\n            })\n        }\n    }\n}\n",null]}