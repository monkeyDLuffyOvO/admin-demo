{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/app/wechat/reply/follow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/app/wechat/reply/follow.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Setting from \"@/setting\";\nimport { replyApi, keywordsinfoApi } from \"@/api/app\";\nimport { mapActions } from \"vuex\";\nimport newsCategory from \"@/components/newsCategory/index\";\nimport util from \"@/libs/util\";\nexport default {\n  name: \"follow\",\n  components: { newsCategory },\n  props: {\n      activeName: {\n          type: String,\n          default: ''\n      },\n      keywordSave: {\n          type: String,\n          default: ''\n      }\n  },\n  data() {\n    const validateContent = (rule, value, callback) => {\n      if (this.formValidate.type === \"text\") {\n        if (this.formValidate.data.content === \"\") {\n          callback(new Error(\"请填写消息内容\"));\n        } else {\n          callback();\n        }\n      }\n    };\n    const validateSrc = (rule, value, callback) => {\n      if (\n        this.formValidate.type === \"image\" &&\n        this.formValidate.data.src === \"\"\n      ) {\n        callback(new Error(\"请上传\"));\n      } else {\n        callback();\n      }\n    };\n    const validateVal = (rule, value, callback) => {\n      if (this.labelarr.length === 0) {\n        callback(new Error(\"请输入后回车\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      delfromData: {},\n      isShow: false,\n      maxCols: 4,\n      scrollerHeight: \"600\",\n      contentTop: \"130\",\n      contentWidth: \"98%\",\n      modals: false,\n      val: \"\",\n      formatImg: [\"jpg\", \"jpeg\", \"png\", \"bmp\", \"gif\"],\n      formatVoice: [\"mp3\", \"wma\", \"wav\", \"amr\"],\n      header: {},\n      formValidate: {\n        status: 1,\n        type: \"\",\n        // key: this.$route.params.key || \"\",\n        key: \"\",\n        data: {\n          content: \"\",\n          src: \"\",\n          list: [],\n        },\n        id: 0,\n      },\n      fileUrl: Setting.apiBaseURL + \"/file/upload/1\",\n      ruleValidate: {\n        val: [{ required: true, validator: validateVal, trigger: \"change\" }],\n        type: [\n          { required: true, message: \"请选择消息类型\", trigger: \"change\" },\n        ],\n        content: [\n          { required: true, validator: validateContent, trigger: \"blur\" },\n        ],\n        src: [{ required: true, validator: validateSrc, trigger: \"change\" }],\n      },\n      labelarr: [],\n    };\n  },\n  watch: {\n    $route(to, from) {\n      if (this.$route.params.key || this.$route.params.id !== \"0\") {\n        this.formValidate.key = this.$route.params.key;\n        this.details();\n      } else {\n        this.labelarr = [];\n        this.$refs[\"formValidate\"].resetFields();\n      }\n    },\n    activeName: {\n        handler (value) {\n            switch (value) {\n                case '1':\n                    this.formValidate.key = 'subscribe';\n                    this.details();\n                    break;\n                case '3':\n                    this.formValidate.key = 'default';\n                    this.details();\n                    break;\n                default:\n                    if (this.keywordSave === '0') {\n                        this.labelarr = [];\n                        this.$nextTick(() => {\n                            this.$refs[\"formValidate\"].resetFields();\n                        });\n                    } else {\n                        this.formValidate.key = this.keywordSave;\n                        this.details();\n                    }\n                    break;\n            }\n\n        },\n        immediate: true\n    }\n  },\n  computed: {\n    imgUrl() {\n      const search = \"/adminapi/\";\n      const start = Setting.apiBaseURL.indexOf(search);\n      return Setting.apiBaseURL.substring(0, start); // 截取字符串\n    },\n  },\n  mounted() {\n    this.getToken();\n    // if (\n    //   this.$route.params.key ||\n    //   (this.$route.params.id && this.$route.params.id !== \"0\")\n    // ) {\n    //   this.details();\n    // }\n  },\n  methods: {\n    ...mapActions(\"admin/page\", [\"close\"]),\n    // 返回\n    goBack () {\n        this.$emit('follow-action');\n    },\n    getCentList(val) {\n      this.formValidate.data.list = val.new;\n      this.modals = false;\n    },\n    addlabel() {\n      if (!this.val) {\n        return;\n      }\n      let count = this.labelarr.indexOf(this.val);\n      if (count === -1) {\n        this.labelarr.push(this.val);\n      }\n      this.val = \"\";\n    },\n    handleClose(event, name) {\n      const index = this.labelarr.indexOf(name);\n      this.labelarr.splice(index, 1);\n    },\n    // 详情\n    details() {\n      let url = \"\";\n      let data = {};\n    //   if (this.$route.params.id) {\n    //     url = \"app/wechat/keyword/\" + this.$route.params.id;\n    //     data = {};\n    //   } else {\n    //     url = \"app/wechat/reply\";\n    //     data = {\n    //       key: {\n    //         key: this.formValidate.key,\n    //       },\n    //     };\n    //   }\n    if (this.keywordSave) {\n        url = \"app/wechat/keyword/\" + this.keywordSave;\n        data = {};\n      } else {\n        url = \"app/wechat/reply\";\n        data = {\n          key: {\n            key: this.formValidate.key,\n          },\n        };\n      }\n      keywordsinfoApi(url, data)\n        .then(async (res) => {\n          let info = res.data.info || {},\n            data = info.data || {};\n          this.formValidate = {\n            status: info.status,\n            type: info.type,\n            key: info.key,\n            data: {\n              content: data.content,\n              src: data.src,\n              list: data.list,\n            },\n            id: info.id,\n          };\n        //   if (this.$route.params.id) {\n        //     this.labelarr = this.formValidate.key.split(\",\") || [];\n        //   }\n          if (this.keywordSave) {\n            this.labelarr = this.formValidate.key.split(\",\") || [];\n          }\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 选择图文\n    changePic() {\n      this.modals = true;\n    },\n    // 下拉选择\n    RuleFactor(type) {\n      switch (type) {\n        case \"text\":\n          this.formValidate.data.src = \"\";\n          this.formValidate.data.list = [];\n          break;\n        case \"news\":\n          this.formValidate.data.src = \"\";\n          this.formValidate.data.content = \"\";\n          break;\n        default:\n          this.formValidate.data.list = [];\n          this.formValidate.data.content = \"\";\n          this.formValidate.data.src = \"\";\n      }\n      // this.$refs['formValidate'].resetFields();\n    },\n    // 上传头部token\n    getToken() {\n      this.header[\"Authori-zation\"] = \"Bearer \" + util.cookies.get(\"token\");\n    },\n    // 上传成功\n    handleSuccess(res, file) {\n      if (res.status === 200) {\n        this.formValidate.data.src = res.data.src;\n        this.$Message.success(res.msg);\n      } else {\n        this.$Message.error(res.msg);\n      }\n    },\n    handleFormatError(file) {\n      if (this.formValidate.type === \"image\") {\n        this.$Message.warning(\"请上传bmp/png/jpeg/jpg/gif格式的图片\");\n      } else {\n        this.$Message.warning(\"请上传mp3/wma/wav/amr格式的语音\");\n      }\n    },\n    handleMaxSize(file) {\n      this.$Message.warning(\"请上传文件2M以内的文件\");\n    },\n    // 保存\n    submenus(name) {\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          let data = {};\n        //   if (this.$route.params.id) {\n        //     this.formValidate.key = this.labelarr.join(\",\");\n        //     data = {\n        //       url: \"app/wechat/keyword/\" + this.$route.params.id,\n        //       key: this.formValidate,\n        //     };\n        //   } else {\n        //     data = {\n        //       url: \"app/wechat/keyword/\" + this.formValidate.id,\n        //       key: this.formValidate,\n        //     };\n        //   }\n        if (this.keywordSave) {\n            this.formValidate.key = this.labelarr.join(\",\");\n            data = {\n              url: \"app/wechat/keyword/\" + this.keywordSave,\n              key: this.formValidate,\n            };\n          } else {\n            data = {\n              url: \"app/wechat/keyword/\" + this.formValidate.id,\n              key: this.formValidate,\n            };\n          }\n          replyApi(data)\n            .then(async (res) => {\n              this.operation();\n              this.$Message.success(res.msg);\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg);\n            });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 保存成功操作\n    operation() {\n    //   if (this.$route.params.id && this.$route.params.id === \"0\") {\n    //     this.$Modal.confirm({\n    //       title: \"提示\",\n    //       content: \"<p>是否继续添加？</p>\",\n    //       okText: \"是\",\n    //       cancelText: \"否\",\n    //       loading: true,\n    //       onOk: () => {\n    //         setTimeout(() => {\n    //           this.$Modal.remove();\n    //           this.labelarr = [];\n    //           this.val = \"\";\n    //           this.$refs[\"formValidate\"].resetFields();\n    //         }, 1000);\n    //       },\n    //       onCancel: () => {\n    //         setTimeout(() => {\n    //           this.$Modal.remove();\n    //           this.$router.push({ path: \"/admin/app/wechat/reply/keyword\" });\n    //         }, 500);\n    //       },\n    //     });\n    //   } else if (this.$route.params.id && this.$route.params.id !== \"0\") {\n    //     this.$Modal.remove();\n    //     this.$router.push({ path: \"/admin/app/wechat/reply/keyword\" });\n    //   }\n        if (this.keywordSave && this.keywordSave === '0') {\n            this.$Modal.confirm({\n            title: \"提示\",\n            content: \"<p>是否继续添加？</p>\",\n            okText: \"是\",\n            cancelText: \"否\",\n            loading: true,\n            onOk: () => {\n                setTimeout(() => {\n                this.$Modal.remove();\n                this.labelarr = [];\n                this.val = \"\";\n                this.$refs[\"formValidate\"].resetFields();\n                }, 1000);\n            },\n            onCancel: () => {\n                setTimeout(() => {\n                this.$Modal.remove();\n                this.goBack();\n                }, 500);\n            },\n            });\n        } else if (this.keywordSave && this.keywordSave !== '0') {\n            this.$Modal.remove();\n            this.goBack();\n        }\n    },\n  },\n};\n",null]}