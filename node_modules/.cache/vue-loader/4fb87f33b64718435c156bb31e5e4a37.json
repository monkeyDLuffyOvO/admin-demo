{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/cms/addArticle/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/cms/addArticle/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapMutations } from 'vuex';\nimport uploadPictures from '@/components/uploadPictures';\nimport WangEditor from \"@/components/wangEditor/index.vue\";\nimport { cmsAddApi, createApi, categoryListApi } from '@/api/cms';\nexport default {\n    name: 'addArticle',\n    components: { uploadPictures, WangEditor },\n    computed: {\n        ...mapState(\"admin/layout\", [\"isMobile\", \"menuCollapse\"])\n    },\n    data() {\n        const validateUpload = (rule, value, callback) => {\n            if (this.formValidate.image_input) {\n                callback()\n            } else {\n                callback(new Error('请上传图文封面'))\n            }\n        }\n        const validateUpload2 = (rule, value, callback) => {\n            if (!this.formValidate.cid) {\n                callback(new Error('请选择文章分类'))\n            } else {\n                callback()\n            }\n        }\n        return {\n            dialog: {},\n            isChoice: '单选',\n            grid: {\n                xl: 8,\n                lg: 8,\n                md: 12,\n                sm: 24,\n                xs: 24\n            },\n            gridPic: {\n                xl: 6,\n                lg: 8,\n                md: 12,\n                sm: 12,\n                xs: 12\n            },\n            gridBtn: {\n                xl: 4,\n                lg: 8,\n                md: 8,\n                sm: 8,\n                xs: 8\n            },\n            loading: false,\n            formValidate: {\n                id: 0,\n                title: '',\n                author: '',\n                image_input: '',\n                content: '',\n                synopsis: '',\n                url: '',\n                is_hot: 0,\n                is_banner: 0,\n                cid: '',\n                visit: 0\n            },\n            content: '',\n            ruleValidate: {\n                title: [\n                    { required: true, message: '请输入标题', trigger: 'blur' }\n                ],\n                // author: [\n                //     { required: true, message: '请输入作者', trigger: 'blur' }\n                // ],\n                cid: [\n                    { required: true, validator: validateUpload2, trigger: 'change', type: 'number' }\n                ],\n                image_input: [\n                    { required: true, validator: validateUpload, trigger: 'change' }\n                ],\n                content: [\n                    { required: true, message: '请输入文章内容', trigger: 'change' }\n                ]\n            },\n            value: '',\n            modalPic: false,\n            template: false,\n            treeData: [],\n            formValidate2: {\n                type: 1\n            },\n            myConfig: {\n                autoHeightEnabled: false, // 编辑器不自动被内容撑高\n                initialFrameHeight: 500, // 初始容器高度\n                initialFrameWidth: '100%', // 初始容器宽度\n                UEDITOR_HOME_URL: '/admin/UEditor/',\n                serverUrl: ''\n            },\n            current: 0\n        }\n    },\n    computed: {\n        ...mapState(\"admin/layout\", [\"isMobile\", \"menuCollapse\"]),\n        labelWidth() {\n            return this.isMobile ? undefined : 120;\n        },\n        labelPosition() {\n            return this.isMobile ? 'top' : 'right';\n        }\n    },\n    watch: {\n        $route(to, from) {\n            if (this.$route.params.id) {\n                this.getDetails()\n            } else {\n                this.formValidate = {\n                    id: 0,\n                    title: '',\n                    author: '',\n                    image_input: '',\n                    content: '',\n                    synopsis: '',\n                    url: '',\n                    is_hot: 0,\n                    is_banner: 0\n                }\n                this.content = ''\n            }\n        }\n    },\n    methods: {\n        ...mapMutations('admin/layout', [\n            'setCopyrightShow'\n        ]),\n        back() {\n            this.current = (Number(this.current) - 1).toString();\n        },\n        next() {\n            this.current = (Number(this.current) + 1).toString();\n        },\n        changeTab(name) {\n            this.current = name;\n        },\n        getEditorContent(content) {\n            this.content = content;\n        },\n        // 选择图片\n        modalPicTap() {\n            this.modalPic = true\n        },\n        // 选中图片\n        getPic(pc) {\n            this.formValidate.image_input = pc.att_dir;\n            this.modalPic = false;\n        },\n        // 分类\n        getClass() {\n            categoryListApi(this.formValidate2).then(async res => {\n                this.treeData = res.data;\n            }).catch(res => {\n                this.$Message.error(res.msg);\n            })\n        },\n        // 提交数据\n        onsubmit(name) {\n            this.formValidate.content = this.content;\n            this.$refs[name].validate((valid) => {\n                if (valid) {\n                    cmsAddApi(this.formValidate).then(async res => {\n                        this.$Message.success(res.msg);\n                        setTimeout(() => {\n                            this.$router.push({ path: '/admin/cms/article/index' });\n                        }, 500);\n                    }).catch(res => {\n                        this.$Message.error(res.msg);\n                    })\n                } else {\n                    return false;\n                }\n            })\n        },\n        // 文章详情\n        getDetails() {\n            createApi(this.$route.params.id ? this.$route.params.id : 0).then(async res => {\n                let data = res.data;\n                let news = data.info;\n                let content = news.content?news.content:' ';\n                this.formValidate = {\n                    id: news.id,\n                    title: news.title,\n                    author: news.author,\n                    image_input: news.image_input,\n                    content: content,\n                    synopsis: news.synopsis,\n                    url: news.url,\n                    is_hot: news.is_hot,\n                    is_banner: news.is_banner,\n                    cid: news.cid,\n                    visit: news.visit\n                }\n                this.content = content;\n            }).catch(res => {\n                this.loading = false;\n                this.$Message.error(res.msg);\n            })\n        },\n        // 添加自定义弹窗\n        addCustomDialog(editorId) {\n            window.UE.registerUI('test-dialog', function (editor, uiName) {\n                // 创建 dialog\n                let dialog = new window.UE.ui.Dialog({\n                    // 指定弹出层中页面的路径，这里只能支持页面，路径参考常见问题 2\n                    iframeUrl: '/admin/widget.images/index.html?fodder=dialog',\n                    // 需要指定当前的编辑器实例\n                    editor: editor,\n                    // 指定 dialog 的名字\n                    name: uiName,\n                    // dialog 的标题\n                    title: '上传图片',\n                    // 指定 dialog 的外围样式\n                    cssRules: 'width:1200px;height:500px;padding:20px;'\n                });\n                this.dialog = dialog;\n                var btn = new window.UE.ui.Button({\n                    name: 'dialog-button',\n                    title: '上传图片',\n                    cssRules: `background-image: url(../../../assets/images/icons.png);background-position: -726px -77px;`,\n                    onclick: function () {\n                        // 渲染dialog\n                        dialog.render();\n                        dialog.open();\n                    }\n                });\n                return btn;\n            }, 37);\n            window.UE.registerUI(\n                \"video-dialog\",\n                function (editor, uiName) {\n                    let dialog = new window.UE.ui.Dialog({\n                        iframeUrl: \"/admin/widget.video/index.html?fodder=video\",\n                        editor: editor,\n                        name: uiName,\n                        title: \"上传视频\",\n                        cssRules: \"width:1000px;height:500px;padding:20px;\",\n                    });\n                    this.dialog = dialog;\n                    let btn = new window.UE.ui.Button({\n                        name: \"video-button\",\n                        title: \"上传视频\",\n                        cssRules: `background-image: url(../../../assets/images/icons.png);background-position: -320px -20px;`,\n                        onclick: function () {\n                            // 渲染dialog\n                            dialog.render();\n                            dialog.open();\n                        },\n                    });\n                    return btn;\n                },\n                38\n            );\n        }\n    },\n    mounted() {\n        if (this.$route.params.id) {\n            this.getDetails()\n        }\n    },\n    created() {\n        this.getClass();\n    }\n}\n",null]}