{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/work/clientGroup/addClientGroup.vue?vue&type=template&id=27d71210&scoped=true&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/work/clientGroup/addClientGroup.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"div\",\n        { staticClass: \"i-layout-page-header\" },\n        [\n          _c(\n            \"PageHeader\",\n            { staticClass: \"product_tabs\", attrs: { \"hidden-breadcrumb\": \"\" } },\n            [\n              _c(\"div\", { attrs: { slot: \"title\" }, slot: \"title\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"float-l\" },\n                  [\n                    _c(\n                      \"router-link\",\n                      { attrs: { to: { path: \"/admin/work/client/group\" } } },\n                      [\n                        _c(\"div\", { staticClass: \"font-sm after-line\" }, [\n                          _c(\"span\", { staticClass: \"iconfont iconfanhui\" }),\n                          _c(\"span\", { staticClass: \"pl10\" }, [_vm._v(\"返回\")])\n                        ])\n                      ]\n                    )\n                  ],\n                  1\n                ),\n                _c(\"span\", { staticClass: \"mr20 ml16\" }, [_vm._v(\"新建群发\")])\n              ])\n            ]\n          )\n        ],\n        1\n      ),\n      _c(\n        \"Card\",\n        {\n          staticClass: \"ivu-mt mb100\",\n          attrs: { bordered: false, \"dis-hover\": \"\" }\n        },\n        [\n          _c(\n            \"Form\",\n            {\n              ref: \"formItem\",\n              attrs: {\n                model: _vm.formItem,\n                rules: _vm.ruleValidate,\n                \"label-width\": 110,\n                \"label-colon\": true\n              }\n            },\n            [\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"名称\", prop: \"name\" } },\n                [\n                  _c(\"Input\", {\n                    staticClass: \"input-add\",\n                    attrs: { placeholder: \"请输入名称\" },\n                    model: {\n                      value: _vm.formItem.name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formItem, \"name\", $$v)\n                      },\n                      expression: \"formItem.name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"选择群发账号\", required: \"\" } },\n                [\n                  _c(\n                    \"Button\",\n                    {\n                      on: {\n                        click: function($event) {\n                          return _vm.addUser()\n                        }\n                      }\n                    },\n                    [_vm._v(\"选择成员\")]\n                  ),\n                  _c(\n                    \"div\",\n                    { staticClass: \"mt10\" },\n                    _vm._l(_vm.formItem.userids, function(item, index) {\n                      return _c(\n                        \"Tag\",\n                        {\n                          key: index,\n                          attrs: {\n                            closable: \"\",\n                            name: item.name,\n                            size: \"medium\"\n                          },\n                          on: { \"on-close\": _vm.handleDel }\n                        },\n                        [_vm._v(_vm._s(item.name))]\n                      )\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"选择客户\", prop: \"client_type\" } },\n                [\n                  _c(\n                    \"RadioGroup\",\n                    {\n                      model: {\n                        value: _vm.formItem.client_type,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formItem, \"client_type\", $$v)\n                        },\n                        expression: \"formItem.client_type\"\n                      }\n                    },\n                    [\n                      _c(\"Radio\", { attrs: { label: \"0\" } }, [\n                        _vm._v(\"全部客户\")\n                      ]),\n                      _c(\"Radio\", { attrs: { label: \"1\" } }, [\n                        _vm._v(\"筛选客户\")\n                      ])\n                    ],\n                    1\n                  ),\n                  _c(\"div\", { staticClass: \"desc\" }, [\n                    _vm._v(\"预计群发\\n            \"),\n                    _c(\"span\", { staticClass: \"client_count\" }, [\n                      _vm._v(\"[\" + _vm._s(_vm.clientCount) + \"]\")\n                    ]),\n                    _vm._v(\"人。\\n            \"),\n                    _c(\n                      \"span\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.formItem.client_type == 1,\n                            expression: \"formItem.client_type == 1\"\n                          }\n                        ]\n                      },\n                      [_vm._v(\"将消息发送给符合条件的客户\")]\n                    )\n                  ])\n                ],\n                1\n              ),\n              _vm.formItem.client_type == 1\n                ? [\n                    _c(\n                      \"FormItem\",\n                      { attrs: { label: \"添加时间\" } },\n                      [\n                        _c(\"DatePicker\", {\n                          staticClass: \"input-add\",\n                          attrs: {\n                            editable: false,\n                            value: _vm.timeVal,\n                            format: \"yyyy/MM/dd\",\n                            type: \"datetimerange\",\n                            placement: \"bottom-start\",\n                            placeholder: \"自定义时间\",\n                            options: _vm.options\n                          },\n                          on: { \"on-change\": _vm.onchangeTime }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"FormItem\",\n                      { attrs: { label: \"标签\" } },\n                      [\n                        _c(\"TreeSelect\", {\n                          directives: [\n                            {\n                              name: \"width\",\n                              rawName: \"v-width\",\n                              value: 460,\n                              expression: \"460\"\n                            }\n                          ],\n                          attrs: { data: _vm.labelList, multiple: \"\" },\n                          model: {\n                            value: _vm.formItem.where_label,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formItem, \"where_label\", $$v)\n                            },\n                            expression: \"formItem.where_label\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"FormItem\",\n                      { attrs: { label: \"排除标签\" } },\n                      [\n                        _c(\"TreeSelect\", {\n                          directives: [\n                            {\n                              name: \"width\",\n                              rawName: \"v-width\",\n                              value: 460,\n                              expression: \"460\"\n                            }\n                          ],\n                          attrs: { data: _vm.newLabelList, multiple: \"\" },\n                          model: {\n                            value: _vm.formItem.where_not_label,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formItem, \"where_not_label\", $$v)\n                            },\n                            expression: \"formItem.where_not_label\"\n                          }\n                        }),\n                        _c(\"div\", { staticClass: \"desc\" }, [\n                          _vm._v(\n                            \"\\n            可根据标签选择客户，群发时将不会发送给该标签内的客户\\n          \"\n                          )\n                        ])\n                      ],\n                      1\n                    )\n                  ]\n                : _vm._e(),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"群发内容\" } },\n                [\n                  _c(\"Input\", {\n                    staticClass: \"input-add\",\n                    attrs: { type: \"textarea\", rows: 4 },\n                    model: {\n                      value: _vm.formItem.welcome_words.text.content,\n                      callback: function($$v) {\n                        _vm.$set(\n                          _vm.formItem.welcome_words.text,\n                          \"content\",\n                          $$v\n                        )\n                      },\n                      expression: \"formItem.welcome_words.text.content\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                [\n                  _c(\n                    \"Poptip\",\n                    { attrs: { trigger: \"hover\" } },\n                    [\n                      _c(\"template\", { slot: \"content\" }, [\n                        _c(\"div\", { staticClass: \"poptip_content\" }, [\n                          _c(\n                            \"div\",\n                            {\n                              on: {\n                                click: function($event) {\n                                  return _vm.modalPicTap(\"image\")\n                                }\n                              }\n                            },\n                            [\n                              _c(\n                                \"div\",\n                                {\n                                  staticClass:\n                                    \"add_img acea-row row-center-wrapper\"\n                                },\n                                [\n                                  _c(\"span\", {\n                                    staticClass: \"iconfont icontupian4\"\n                                  })\n                                ]\n                              ),\n                              _c(\"span\", { staticClass: \"tip_tit\" }, [\n                                _vm._v(\"图片\")\n                              ])\n                            ]\n                          ),\n                          _c(\n                            \"div\",\n                            {\n                              on: {\n                                click: function($event) {\n                                  return _vm.addRoutine()\n                                }\n                              }\n                            },\n                            [\n                              _c(\n                                \"div\",\n                                {\n                                  staticClass:\n                                    \"add_routine acea-row row-center-wrapper\"\n                                },\n                                [\n                                  _c(\"span\", {\n                                    staticClass: \"iconfont iconxiaochengxu\"\n                                  })\n                                ]\n                              ),\n                              _c(\"span\", { staticClass: \"tip_tit\" }, [\n                                _vm._v(\"小程序\")\n                              ])\n                            ]\n                          )\n                        ])\n                      ]),\n                      _c(\"Button\", { attrs: { type: \"success\" } }, [\n                        _vm._v(\"添加图片/小程序\")\n                      ])\n                    ],\n                    2\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                _vm._l(_vm.formItem.welcome_words.attachments, function(\n                  item,\n                  index\n                ) {\n                  return _c(\"div\", { key: index }, [\n                    _c(\n                      \"div\",\n                      {\n                        staticClass:\n                          \"\\n                ivu-tag\\n                ivu-tag-dot\\n                ivu-tag-size-default\\n                ivu-tag-closable\\n                ivu-tag-checked\\n              \"\n                      },\n                      [\n                        item.msgtype == \"image\"\n                          ? _c(\"span\", {\n                              staticClass: \"iconfont icontupian4 tag_icon\"\n                            })\n                          : _vm._e(),\n                        item.msgtype == \"miniprogram\"\n                          ? _c(\"span\", {\n                              staticClass: \"iconfont iconxiaochengxu tag_icon\"\n                            })\n                          : _vm._e(),\n                        item.msgtype == \"image\"\n                          ? _c(\"span\", { staticClass: \"ivu-tag-text\" }, [\n                              _vm._v(_vm._s(item.image.pic_url))\n                            ])\n                          : _vm._e(),\n                        item.msgtype == \"miniprogram\"\n                          ? _c(\"span\", { staticClass: \"ivu-tag-text\" }, [\n                              _vm._v(_vm._s(item.miniprogram.title))\n                            ])\n                          : _vm._e(),\n                        item.msgtype == \"image\"\n                          ? _c(\"i\", {\n                              staticClass: \"ivu-icon ivu-icon-ios-close\",\n                              on: {\n                                click: function($event) {\n                                  return _vm.wordsDel(item.image.pic_url)\n                                }\n                              }\n                            })\n                          : _vm._e(),\n                        item.msgtype == \"miniprogram\"\n                          ? _c(\"i\", {\n                              staticClass: \"ivu-icon ivu-icon-ios-close\",\n                              on: {\n                                click: function($event) {\n                                  return _vm.wordsDel(item.miniprogram.title)\n                                }\n                              }\n                            })\n                          : _vm._e()\n                      ]\n                    )\n                  ])\n                }),\n                0\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"发送类型\", prop: \"template_type\" } },\n                [\n                  _c(\n                    \"RadioGroup\",\n                    {\n                      model: {\n                        value: _vm.formItem.template_type,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formItem, \"template_type\", $$v)\n                        },\n                        expression: \"formItem.template_type\"\n                      }\n                    },\n                    [\n                      _c(\"Radio\", { attrs: { label: \"0\" } }, [\n                        _vm._v(\"立即发送\")\n                      ]),\n                      _c(\"Radio\", { attrs: { label: \"1\" } }, [\n                        _vm._v(\"定时发送\")\n                      ])\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm.formItem.template_type == 1\n                ? _c(\n                    \"FormItem\",\n                    { attrs: { label: \"定时发送时间\" } },\n                    [\n                      _c(\"DatePicker\", {\n                        staticClass: \"input-add\",\n                        attrs: {\n                          type: \"datetime\",\n                          placeholder: \"请选择发送时间\"\n                        },\n                        on: { \"on-change\": _vm.snedChangeTime },\n                        model: {\n                          value: _vm.formItem.send_time,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formItem, \"send_time\", $$v)\n                          },\n                          expression: \"formItem.send_time\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            2\n          )\n        ],\n        1\n      ),\n      _c(\n        \"Card\",\n        {\n          staticClass: \"fixed-card\",\n          attrs: { bordered: false, \"dis-hover\": \"\" }\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"acea-row row-center-wrapper\" },\n            [\n              _c(\n                \"Button\",\n                {\n                  staticClass: \"step_btn\",\n                  attrs: { type: \"primary\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.submit()\n                    }\n                  }\n                },\n                [_vm._v(\"提交\")]\n              )\n            ],\n            1\n          )\n        ]\n      ),\n      _c(\n        \"Modal\",\n        {\n          attrs: {\n            width: \"960px\",\n            scrollable: \"\",\n            \"footer-hide\": \"\",\n            closable: \"\",\n            title: \"logo\",\n            \"mask-closable\": false,\n            \"z-index\": 9\n          },\n          model: {\n            value: _vm.modalPic,\n            callback: function($$v) {\n              _vm.modalPic = $$v\n            },\n            expression: \"modalPic\"\n          }\n        },\n        [\n          _vm.modalPic\n            ? _c(\"uploadPictures\", {\n                attrs: {\n                  isChoice: _vm.isChoice,\n                  gridBtn: _vm.gridBtn,\n                  gridPic: _vm.gridPic\n                },\n                on: { getPic: _vm.getPic }\n              })\n            : _vm._e()\n        ],\n        1\n      ),\n      _c(\n        \"Modal\",\n        {\n          attrs: { title: \"添加小程序消息\", \"z-index\": 1 },\n          on: { \"on-ok\": _vm.routineConfirm },\n          model: {\n            value: _vm.modalRoutine,\n            callback: function($$v) {\n              _vm.modalRoutine = $$v\n            },\n            expression: \"modalRoutine\"\n          }\n        },\n        [\n          _c(\n            \"Form\",\n            { attrs: { model: _vm.formItem, \"label-width\": 110 } },\n            [\n              _c(\"FormItem\", { attrs: { label: \"封面图:\" } }, [\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"picBox\",\n                    on: {\n                      click: function($event) {\n                        return _vm.modalPicTap(\"routine\")\n                      }\n                    }\n                  },\n                  [\n                    _vm.rontineObj.miniprogram.pic_url\n                      ? _c(\"div\", { staticClass: \"pictrue\" }, [\n                          _c(\"img\", {\n                            directives: [\n                              {\n                                name: \"lazy\",\n                                rawName: \"v-lazy\",\n                                value: _vm.rontineObj.miniprogram.pic_url,\n                                expression: \"rontineObj.miniprogram.pic_url\"\n                              }\n                            ]\n                          })\n                        ])\n                      : _c(\"div\", { staticClass: \"upLoad\" }, [\n                          _c(\"div\", { staticClass: \"iconfont\" }, [_vm._v(\"+\")])\n                        ])\n                  ]\n                )\n              ]),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"小程序消息标题:\" } },\n                [\n                  _c(\"Input\", {\n                    model: {\n                      value: _vm.rontineObj.miniprogram.title,\n                      callback: function($$v) {\n                        _vm.$set(_vm.rontineObj.miniprogram, \"title\", $$v)\n                      },\n                      expression: \"rontineObj.miniprogram.title\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"小程序Appid:\" } },\n                [\n                  _c(\"Input\", {\n                    model: {\n                      value: _vm.rontineObj.miniprogram.appid,\n                      callback: function($$v) {\n                        _vm.$set(_vm.rontineObj.miniprogram, \"appid\", $$v)\n                      },\n                      expression: \"rontineObj.miniprogram.appid\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"小程序功能页:\" } },\n                [\n                  _c(\"Input\", {\n                    model: {\n                      value: _vm.rontineObj.miniprogram.page,\n                      callback: function($$v) {\n                        _vm.$set(_vm.rontineObj.miniprogram, \"page\", $$v)\n                      },\n                      expression: \"rontineObj.miniprogram.page\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\"department\", {\n        ref: \"department\",\n        attrs: {\n          \"active-department\": _vm.activeDepartment,\n          \"is-site\": _vm.isSite,\n          userList: _vm.userList,\n          \"only-department\": _vm.onlyDepartment\n        },\n        on: { changeMastart: _vm.changeMastart }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}