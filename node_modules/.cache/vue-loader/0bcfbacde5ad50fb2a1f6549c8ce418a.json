{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/setting/systemRole/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/setting/systemRole/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex'\nimport {\n  roleListApi,\n  roleSetStatusApi,\n  menusListApi,\n  roleCreatApi,\n  roleInfoApi,\n} from '@/api/setting'\nexport default {\n  name: 'systemrRole',\n  data() {\n    return {\n      spinShow: false,\n      modals: false,\n      total: 0,\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      loading: false,\n      formValidate: {\n        status: '',\n        role_name: '',\n        page: 1,\n        limit: 20,\n      },\n      columns1: [\n        {\n          title: 'ID',\n          key: 'id',\n          width: 80,\n        },\n        {\n          title: '身份昵称',\n          key: 'role_name',\n          minWidth: 120,\n        },\n        {\n          title: '权限',\n          key: 'rules',\n          tooltip: true,\n          width: 1000,\n        },\n        {\n          title: '状态',\n          slot: 'is_shows',\n          minWidth: 120,\n        },\n        {\n          title: '操作',\n          slot: 'action',\n          fixed: 'right',\n          minWidth: 120,\n        },\n      ],\n      tableList: [],\n      formInline: {\n        role_name: '',\n        status: 0,\n        checked_menus: [],\n        id: 0,\n      },\n      menusList: [],\n      modelTit: '',\n      ruleValidate: {\n        role_name: [\n          { required: true, message: '请输入身份昵称', trigger: 'blur' },\n        ],\n        status: [\n          {\n            required: true,\n            type: 'number',\n            message: '请选择是否开启',\n            trigger: 'change',\n          },\n        ],\n        // checked_menus: [\n        //     { required: true, validator: validateStatus, trigger: 'change' }\n        // ]\n      },\n    }\n  },\n  computed: {\n    ...mapState('admin/layout', ['isMobile']),\n    labelWidth() {\n      return this.isMobile ? undefined : 96\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right'\n    },\n    labelPosition2() {\n      return this.isMobile ? 'top' : 'right'\n    },\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    // 添加\n    add(name) {\n      this.formInline.id = 0\n      this.modelTit = name\n      this.modals = true\n      this.getmenusList()\n    },\n    // 删除\n    del(row, tit, num) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `setting/role/${row.id}`,\n        method: 'DELETE',\n        ids: '',\n      }\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$Message.success(res.msg)\n          this.tableList.splice(num, 1)\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg)\n        })\n    },\n    // 修改是否显示\n    onchangeIsShow(row) {\n      let data = {\n        id: row.id,\n        status: row.status,\n      }\n      roleSetStatusApi(data)\n        .then(async (res) => {\n          this.$Message.success(res.msg)\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg)\n        })\n    },\n    // 列表\n    getList() {\n      this.loading = true\n      this.formValidate.status = this.formValidate.status || ''\n      roleListApi(this.formValidate)\n        .then(async (res) => {\n          let data = res.data\n          this.tableList = data.list\n          this.total = res.data.count\n          this.loading = false\n        })\n        .catch((res) => {\n          this.loading = false\n          this.$Message.error(res.msg)\n        })\n    },\n    pageChange(index) {\n      this.formValidate.page = index\n      this.getList()\n    },\n    // 表格搜索\n    userSearchs() {\n      this.formValidate.page = 1\n      this.getList()\n    },\n    // 编辑\n    edit(row, name) {\n      this.modelTit = name\n      this.formInline.id = row.id\n      this.modals = true\n      this.rows = row\n      this.getIofo(row)\n    },\n    //默认首页被选中并禁止更改\n    checkedFun(data) {\n      data.forEach((item) => {\n        if (item.title == '运营') {\n          item.disabled = true\n          if (item.children.length) {\n            item.children.forEach((j) => {\n              if (j.title == '首页') {\n                this.formInline.checked_menus.push(j.id)\n                j.checked = true\n                j.disabled = true\n                if (j.children.length) {\n                  j.children.forEach((v) => {\n                    v.checked = true\n                    v.disabled = true\n                  })\n                }\n              }\n            })\n          }\n        }\n        item.expand = false\n      })\n    },\n    // 菜单列表\n    getmenusList() {\n      this.spinShow = true\n      menusListApi()\n        .then(async (res) => {\n          let data = res.data\n          // const mList = data.menus[0].children.splice(0,1);\n          this.menusList = data.menus\n          this.checkedFun(res.data.menus)\n          // this.menusList.map((item, index) => {\n          //   if (item.title === '主页') {\n          //     item.checked = true\n          //     item.disableCheckbox = true\n          //     if (item.children.length) {\n          //       item.children.map((v) => {\n          //         v.checked = true\n          //         v.disableCheckbox = true\n          //       })\n          //     }\n          //   }\n          //   item.expand = false\n          // })\n          this.spinShow = false\n        })\n        .catch((res) => {\n          this.spinShow = false\n          this.$Message.error(res.msg)\n        })\n    },\n    // 详情\n    getIofo(row) {\n      this.spinShow = true\n      roleInfoApi(row.id)\n        .then(async (res) => {\n          let data = res.data\n          this.formInline = data.role || this.formInline\n          this.formInline.checked_menus = this.formInline.rules\n          this.tidyRes(data.menus)\n          this.spinShow = false\n        })\n        .catch((res) => {\n          this.spinShow = false\n          this.$Message.error(res.msg)\n        })\n    },\n    tidyRes(menus) {\n      let data = []\n      menus.map((menu) => {\n        data.push(this.initMenu(menu))\n      })\n      // this.checkedFun(data);\n      this.$set(this, 'menusList', data)\n      // this.menusList.map((item, index) => {\n      //     if (item.title === '主页') {\n      //         item.checked = true;\n      //         item.disableCheckbox = true;\n      //         if (item.children.length) {\n      //             item.children.map(v => {\n      //                 v.checked = true;\n      //                 v.disableCheckbox = true;\n      //             });\n      //         }\n      //     }\n      // });\n    },\n    initMenu(menu) {\n      let data = {},\n        checkMenus = ',' + this.formInline.checked_menus + ','\n      data.title = menu.title\n      data.id = menu.id\n      if (menu.children && menu.children.length > 0) {\n        data.children = []\n        menu.children.map((child) => {\n          data.children.push(this.initMenu(child))\n        })\n      } else {\n        data.checked = checkMenus.indexOf(String(',' + data.id + ',')) !== -1\n        data.expand = !data.checked\n      }\n      return data\n    },\n    // 递归函数\n    // getNestedChildren(arr, parent) {\n    //   var out = []\n    //   for (var i in arr) {\n    //     if (arr[i].parent == parent) {\n    //       var children = getNestedChildren(arr, arr[i].id)\n\n    //       if (children.length) {\n    //         arr[i].children = children\n    //       }\n    //       out.push(arr[i])\n    //     }\n    //   }\n    //   return out\n    // },\n    // 提交\n    handleSubmit(name) {\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          this.formInline.checked_menus = []\n          this.$refs.tree.getCheckedAndIndeterminateNodes().map((node) => {\n            this.formInline.checked_menus.push(node.id)\n          })\n\n          if (this.formInline.checked_menus.length === 0)\n            return this.$Message.warning('请至少选择一个权限')\n          roleCreatApi(this.formInline)\n            .then(async (res) => {\n              this.$Message.success(res.msg)\n              this.modals = false\n              this.getList()\n              this.$refs[name].resetFields()\n              this.formInline.checked_menus = []\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg)\n            })\n        } else {\n          return false\n        }\n      })\n    },\n    onCancel() {\n      this.$refs['formInline'].resetFields()\n      this.formInline.checked_menus = []\n    },\n  },\n}\n",null]}