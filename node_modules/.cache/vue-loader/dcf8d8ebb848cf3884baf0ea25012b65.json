{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/work/channelCode/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/work/channelCode/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\nimport {\n  workChannelCate,\n  workCateCreate,\n  workCateEdit,\n  workCateDel,\n  workChannelCode,\n  getWorkCodeClient,\n  getWorkCodeInfo,\n  workBranchCate\n} from \"@/api/work\";\nexport default {\n  name: \"\",\n  data() {\n    return {\n      loading: false,\n      formInline: {},\n      channelCateList:[],\n      current: 0,\n      sortName: \"\",\n      codeInfoStatus:false,\n      clentStatus:false,\n      branchStatus:false,\n      columns1: [\n        {\n          type: \"selection\",\n          width: 60,\n        },\n        {\n          title: \"二维码\",\n          slot: \"qrcode_url\",\n          minWidth: 80,\n        },\n        {\n          title: \"二维码名称\",\n          key: \"name\",\n          minWidth: 100,\n        },\n        {\n          title: \"分类\",\n          slot: \"category\",\n          minWidth: 100,\n        },\n        {\n          title: \"添加好友\",\n          slot: \"skip_verify\",\n          minWidth: 80,\n        },\n        {\n          title: \"类型\",\n          slot: \"type\",\n          minWidth: 80,\n        },\n        {\n          title: \"客户数\",\n          key: \"client_num\",\n          minWidth: 80,\n        },\n        {\n          title: \"创建时间\",\n          key: \"create_time\",\n          minWidth: 110,\n        },\n        {\n          title: \"用户标签\",\n          slot: \"label_name\",\n          minWidth: 130,\n        },\n        {\n          title: \"操作\",\n          slot: \"action\",\n          // fixed: \"right\",\n          width: 150,\n        },\n      ],\n      tableData: [],\n      clientList:{\n        count:0,\n        list:[]\n      },\n      infoData:{\n        welcome_words:{\n          attachments:[]\n        },\n      }, //详情弹窗内容赋值\n      grid: {\n        xl: 7,\n        lg: 10,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      tableFrom: {\n        type: \"\",\n        name: \"\",\n        cate_id:null,\n        page: 1,\n        limit: 15,\n      },\n      clientColumn:[\n        {\n          title: \"ID\",\n          key: \"client_id\",\n          minWidth: 60,\n          align: \"center\",\n        },\n        {\n          title: \"头像\",\n          slot: \"avatar\",\n          minWidth: 100,\n          align: \"center\",\n        },\n        {\n          title: \"客户名称\",\n          slot: \"name\",\n          minWidth: 100,\n          align: \"center\",\n        },\n        {\n          title: \"加入时间\",\n          key: \"create_time\",\n          minWidth: 120,\n          align: \"center\",\n        },\n      ],\n      branchCateId:'',\n      branchRow:[],\n      loading: false,\n      userLoading:false,\n      clientForm:{\n        id:0,\n        page: 1,\n        limit: 15,\n      },\n      total: 0,\n    };\n  },\n  computed: {\n    ...mapState(\"admin/layout\", [\"isMobile\"]),\n    labelWidth() {\n      return this.isMobile ? undefined : 80;\n    },\n    labelPosition() {\n      return this.isMobile ? \"top\" : \"left\";\n    }\n  },\n  created() {\n    this.getWorkChannelCate();\n    this.getChannelCode();\n  },\n  methods: {\n    //编辑\n    editData(row) {\n      this.$router.push({ path: \"/admin/work/createCode/\" + row.id });\n    },\n    //移动\n    move() {},\n    // 操作\n    changeMenu(row, name, index) {\n      switch (name) {\n        case \"1\":\n          this.branchRow[0] = row;\n          this.branchStatus = true;\n          break;\n        case \"2\":\n          let delfromData = {\n            title: '删除渠道码',\n            num:index,\n            url: `work/channel/code/${row.id}`,\n            method: \"DELETE\",\n            ids: \"\",\n          };\n          this.$modalSure(delfromData)\n            .then((res) => {\n              this.$Message.success(res.msg);\n              if(this.tableData.list.length == 1){\n                this.tableFrom.page = this.tableFrom.page -1;\n                this.getChannelCode();\n              }else{\n                this.getChannelCode();\n              }\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg);\n            });\n          break;\n        case \"3\":\n          this.clentStatus = true;\n          this.clientForm.id = row.id; \n          this.getClient();\n          break;\n      }\n    },\n    codeInfo(row){\n      getWorkCodeInfo(row.id).then(res=>{\n        this.infoData = res.data;\n      })\n      this.codeInfoStatus = true;\n    },\n    //获取客户列表\n    getClient(){\n      this.userLoading = true;\n      getWorkCodeClient(this.clientForm).then(res=>{\n        this.$set(this,'clientList',res.data);\n        this.userLoading = false;\n      }).catch((res) => {\n        this.userLoading = false;\n        this.$Message.error(res.msg);\n      });\n    },\n    //获取分类列表\n    getWorkChannelCate(key){\n      workChannelCate().then(res=>{\n        let obj = {\n          name: \"全部\",\n          id: \"\",\n        };\n        res.data.unshift(obj);\n        res.data.forEach((el) => {\n          el.status = false;\n        });\n        if (!key) {\n          this.sortName = res.data[0].id;\n        }\n        this.channelCateList = res.data;\n      })\n    },\n    bindMenuItem(name,index) {\n      this.tableFrom.cate_id = name.id;\n      this.current = index;\n      this.channelCateList.forEach((el) => {\n        el.status = false;\n      });\n      this.getChannelCode();\n    },\n    // 显示标签小菜单\n    showMenu(item) {\n      this.channelCateList.forEach((el) => {\n        if (el.id == item.id) {\n          el.status = item.status ? false : true;\n        } else {\n          el.status = false;\n        }\n      });\n    },\n    //添加分类\n    addChannelCate(){\n      this.$modalForm(workCateCreate()).then(() => {\n        this.getWorkChannelCate();\n      });\n    },\n    //删除分类\n    delChannelCate(item,name,index){\n      workCateDel(item.id).then(res=>{\n        this.getWorkChannelCate();\n        this.$Message.success('删除成功');\n      })\n    },\n    //编辑分类\n    labelEdit(item){\n      this.$modalForm(workCateEdit(item.id)).then(() =>{\n        item.status = false;\n        this.getWorkChannelCate(1)\n      });\n    },\n    //获取渠道码列表\n    getChannelCode(){\n      this.loading = true;\n      workChannelCode(this.tableFrom).then(res=>{\n        this.tableData = res.data;\n        this.loading = false;\n      }).catch((res) => {\n        this.loading = false;\n        this.$Message.error(res.msg);\n      });\n    },\n    //批量移动\n    branchCate(){\n      this.branchStatus = true;\n    },\n    branchCateConfirm(){\n      let data = {\n        cate_id:this.branchCateId,\n        ids:this.branchRow.map(item=>{\n          return item.id\n        })\n      };\n      workBranchCate(data).then(res=>{\n        this.$Message.success(\"移动成功\");\n        this.branchRow = [];\n        this.getChannelCode();\n\n      })\n    },\n    selectAll(row) {\n      if (row.length) {\n        this.branchRow = row;\n      }\n    },\n    handleSelectRow(row){\n      this.branchRow = row;\n    },\n    //搜索\n    codeSearchs(){\n      this.tableFrom.page = 1;\n      this.getChannelCode();\n    },\n    //分页\n    pageChange(index) {\n      this.tableFrom.page = index;\n      this.getChannelCode();\n    },\n    //分页\n    clientChange(index){\n      this.clientForm.page = index;\n      this.getClient();\n    },\n    //下载活码\n    downloadCodeImg(){\n      let link = document.createElement('a')\n      let url =  this.infoData.qrcode_url;  //codeIMG  要下载的路径\n      // 这里是将url转成blob地址，\n      fetch(url).then(res => res.blob()).then(blob => { // 将链接地址字符内容转变成blob地址\n         link.href = URL.createObjectURL(blob)\n         link.download = 'pic';\n         document.body.appendChild(link)\n         link.click()\n     })\n    },\n    downPic(){\n      for(let i in this.branchRow){\n        let link = document.createElement('a');\n        let url =  this.branchRow[i].qrcode_url;\n         fetch(url).then(res => res.blob()).then(blob=>{\n           link.href = URL.createObjectURL(blob)\n           link.download = this.branchRow[i].name;\n           document.body.appendChild(link)\n           link.click()\n         })\n      }\n    }\n  },\n};\n",null]}