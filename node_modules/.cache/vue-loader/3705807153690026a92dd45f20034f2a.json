{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/work/clientMoment/addMoment.vue?vue&type=template&id=3dbf2707&scoped=true&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/work/clientMoment/addMoment.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"div\",\n        { staticClass: \"i-layout-page-header\" },\n        [\n          _c(\n            \"PageHeader\",\n            { staticClass: \"product_tabs\", attrs: { \"hidden-breadcrumb\": \"\" } },\n            [\n              _c(\"div\", { attrs: { slot: \"title\" }, slot: \"title\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"float-l\" },\n                  [\n                    _c(\n                      \"router-link\",\n                      { attrs: { to: { path: \"/admin/work/client/moment\" } } },\n                      [\n                        _c(\"div\", { staticClass: \"font-sm after-line\" }, [\n                          _c(\"span\", { staticClass: \"iconfont iconfanhui\" }),\n                          _c(\"span\", { staticClass: \"pl10\" }, [_vm._v(\"返回\")])\n                        ])\n                      ]\n                    )\n                  ],\n                  1\n                ),\n                _c(\"span\", { staticClass: \"mr20 ml16\" }, [_vm._v(\"发布朋友圈\")])\n              ])\n            ]\n          )\n        ],\n        1\n      ),\n      _c(\n        \"Card\",\n        {\n          staticClass: \"ivu-mt mb100\",\n          attrs: { bordered: false, \"dis-hover\": \"\" }\n        },\n        [\n          _c(\n            \"Form\",\n            {\n              ref: \"formItem\",\n              attrs: {\n                model: _vm.formItem,\n                \"label-width\": 110,\n                \"label-colon\": true,\n                rules: _vm.ruleValidate\n              }\n            },\n            [\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"任务名称\", prop: \"name\" } },\n                [\n                  _c(\"Input\", {\n                    staticClass: \"input-add\",\n                    attrs: { placeholder: \"请输入任务名称\" },\n                    model: {\n                      value: _vm.formItem.name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formItem, \"name\", $$v)\n                      },\n                      expression: \"formItem.name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"成员类型\", required: \"\" } },\n                [\n                  _c(\n                    \"RadioGroup\",\n                    {\n                      model: {\n                        value: _vm.formItem.type,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formItem, \"type\", $$v)\n                        },\n                        expression: \"formItem.type\"\n                      }\n                    },\n                    [\n                      _c(\"Radio\", { attrs: { label: \"0\" } }, [\n                        _vm._v(\"全部成员\")\n                      ]),\n                      _c(\"Radio\", { attrs: { label: \"1\" } }, [\n                        _vm._v(\"选定成员\")\n                      ])\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm.formItem.type == 1\n                ? _c(\n                    \"FormItem\",\n                    { attrs: { label: \"发表成员\" } },\n                    [\n                      _c(\n                        \"Button\",\n                        {\n                          on: {\n                            click: function($event) {\n                              return _vm.addUser()\n                            }\n                          }\n                        },\n                        [_vm._v(\"选择成员\")]\n                      ),\n                      _c(\n                        \"div\",\n                        { staticClass: \"mt10\" },\n                        _vm._l(_vm.formItem.user_ids, function(item, index) {\n                          return _c(\n                            \"Tag\",\n                            {\n                              key: index,\n                              attrs: {\n                                closable: \"\",\n                                name: item.name,\n                                size: \"large\"\n                              },\n                              on: { \"on-close\": _vm.handleDel }\n                            },\n                            [_vm._v(_vm._s(item.name))]\n                          )\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"可见的客户\", required: \"\" } },\n                [\n                  _c(\n                    \"RadioGroup\",\n                    {\n                      model: {\n                        value: _vm.formItem.client_type,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formItem, \"client_type\", $$v)\n                        },\n                        expression: \"formItem.client_type\"\n                      }\n                    },\n                    [\n                      _c(\"Radio\", { attrs: { label: \"0\" } }, [\n                        _vm._v(\"全部客户\")\n                      ]),\n                      _c(\"Radio\", { attrs: { label: \"1\" } }, [\n                        _vm._v(\"筛选客户\")\n                      ])\n                    ],\n                    1\n                  ),\n                  _c(\"div\", { staticClass: \"desc\" }, [\n                    _vm._v(\"预估将发送到\\n            \"),\n                    _c(\"span\", { staticClass: \"client_count\" }, [\n                      _vm._v(\"[\" + _vm._s(_vm.clientCount) + \"]\")\n                    ]),\n                    _vm._v(\"个客户朋友圈中。\\n            \"),\n                    _c(\n                      \"span\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.formItem.client_type == 1,\n                            expression: \"formItem.client_type == 1\"\n                          }\n                        ]\n                      },\n                      [_vm._v(\"将消息发送给符合条件的客户\")]\n                    )\n                  ])\n                ],\n                1\n              ),\n              _vm.formItem.client_type == 1\n                ? _c(\n                    \"FormItem\",\n                    { attrs: { label: \"标签\" } },\n                    [\n                      _c(\"TreeSelect\", {\n                        directives: [\n                          {\n                            name: \"width\",\n                            rawName: \"v-width\",\n                            value: 460,\n                            expression: \"460\"\n                          }\n                        ],\n                        attrs: { data: _vm.labelList, multiple: \"\" },\n                        model: {\n                          value: _vm.formItem.client_tag_list,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formItem, \"client_tag_list\", $$v)\n                          },\n                          expression: \"formItem.client_tag_list\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"消息内容1\", required: \"\" } },\n                [\n                  _c(\"Input\", {\n                    staticClass: \"input-add\",\n                    attrs: {\n                      type: \"textarea\",\n                      rows: 4,\n                      \"show-word-limit\": \"\",\n                      placeholder: \"请输入消息内容\",\n                      maxlength: \"1000\"\n                    },\n                    model: {\n                      value: _vm.formItem.welcome_words.text.content,\n                      callback: function($$v) {\n                        _vm.$set(\n                          _vm.formItem.welcome_words.text,\n                          \"content\",\n                          $$v\n                        )\n                      },\n                      expression: \"formItem.welcome_words.text.content\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"消息内容2\" } },\n                [\n                  _c(\n                    \"RadioGroup\",\n                    {\n                      model: {\n                        value: _vm.descType,\n                        callback: function($$v) {\n                          _vm.descType = $$v\n                        },\n                        expression: \"descType\"\n                      }\n                    },\n                    [\n                      _c(\"Radio\", { attrs: { label: \"0\" } }, [_vm._v(\"图片\")]),\n                      _c(\"Radio\", { attrs: { label: \"1\" } }, [_vm._v(\"视频\")]),\n                      _c(\"Radio\", { attrs: { label: \"2\" } }, [\n                        _vm._v(\"图文链接\")\n                      ])\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm.descType == 0\n                ? _c(\"FormItem\", [\n                    _c(\n                      \"div\",\n                      { staticClass: \"acea-row\" },\n                      [\n                        _vm._l(_vm.formItem.welcome_words.attachments, function(\n                          item,\n                          index\n                        ) {\n                          return _c(\n                            \"div\",\n                            { key: index, staticClass: \"pictrue\" },\n                            [\n                              item.msgtype == \"image\"\n                                ? _c(\"img\", {\n                                    directives: [\n                                      {\n                                        name: \"lazy\",\n                                        rawName: \"v-lazy\",\n                                        value: item.image.pic_url,\n                                        expression: \"item.image.pic_url\"\n                                      }\n                                    ]\n                                  })\n                                : _vm._e(),\n                              _c(\"Button\", {\n                                staticClass: \"btndel\",\n                                attrs: { shape: \"circle\", icon: \"md-close\" },\n                                nativeOn: {\n                                  click: function($event) {\n                                    return _vm.handleRemove(index)\n                                  }\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        }),\n                        _vm.formItem.welcome_words.attachments.length < 9\n                          ? _c(\n                              \"div\",\n                              {\n                                staticClass:\n                                  \"upLoad acea-row row-center-wrapper\",\n                                on: {\n                                  click: function($event) {\n                                    return _vm.modalPicTap(\"duo\")\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"Icon\", {\n                                  attrs: {\n                                    type: \"ios-camera-outline\",\n                                    size: \"26\"\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          : _vm._e()\n                      ],\n                      2\n                    ),\n                    _c(\"div\", { staticClass: \"tips\" }, [\n                      _vm._v(\n                        \"\\n            因企业微信限制，图片长宽建议不超过1440x1080，大小不超过10M\\n          \"\n                      )\n                    ])\n                  ])\n                : _vm._e(),\n              _vm.descType == 1\n                ? _c(\n                    \"FormItem\",\n                    [\n                      _vm.upload_type\n                        ? _c(\n                            \"Upload\",\n                            {\n                              staticStyle: { display: \"inline-block\" },\n                              attrs: {\n                                \"show-upload-list\": false,\n                                action: _vm.fileUrl2,\n                                \"before-upload\": _vm.videoSaveToUrl,\n                                data: _vm.uploadData,\n                                headers: _vm.header,\n                                multiple: true\n                              }\n                            },\n                            [\n                              _c(\"div\", { staticClass: \"videbox\" }, [\n                                _vm._v(\"\\n\\t\\t\\t\\t      +\\n\\t\\t\\t\\t    \")\n                              ])\n                            ]\n                          )\n                        : _c(\"Input\", {\n                            staticClass: \"input-add\",\n                            model: {\n                              value: _vm.videoObj.video.url,\n                              callback: function($$v) {\n                                _vm.$set(_vm.videoObj.video, \"url\", $$v)\n                              },\n                              expression: \"videoObj.video.url\"\n                            }\n                          }),\n                      _c(\"div\", { staticClass: \"tips\" }, [\n                        _vm._v(\"建议时长：9～30秒，大小10M以内\")\n                      ])\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.descType == 2\n                ? _c(\n                    \"FormItem\",\n                    { attrs: { label: \"图文链接\" } },\n                    [\n                      _c(\"Input\", {\n                        staticClass: \"input-add\",\n                        attrs: { placeholder: \"链接地址请以http或https开头\" },\n                        on: {\n                          \"on-blur\": function($event) {\n                            return _vm.linkBlur()\n                          }\n                        },\n                        model: {\n                          value: _vm.linkObj.link.url,\n                          callback: function($$v) {\n                            _vm.$set(_vm.linkObj.link, \"url\", $$v)\n                          },\n                          expression: \"linkObj.link.url\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.descType == 2\n                ? _c(\n                    \"FormItem\",\n                    { attrs: { label: \"链接标题\" } },\n                    [\n                      _c(\"Input\", {\n                        staticClass: \"input-add\",\n                        attrs: { placeholder: \"请输入链接标题\" },\n                        on: {\n                          \"on-blur\": function($event) {\n                            return _vm.titleBlur()\n                          }\n                        },\n                        model: {\n                          value: _vm.linkObj.link.title,\n                          callback: function($$v) {\n                            _vm.$set(_vm.linkObj.link, \"title\", $$v)\n                          },\n                          expression: \"linkObj.link.title\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"发送方式\", required: \"\" } },\n                [\n                  _c(\n                    \"RadioGroup\",\n                    {\n                      model: {\n                        value: _vm.formItem.send_type,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formItem, \"send_type\", $$v)\n                        },\n                        expression: \"formItem.send_type\"\n                      }\n                    },\n                    [\n                      _c(\"Radio\", { attrs: { label: \"0\" } }, [\n                        _vm._v(\"立即发送\")\n                      ]),\n                      _c(\"Radio\", { attrs: { label: \"1\" } }, [\n                        _vm._v(\"定时发送\")\n                      ])\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm.formItem.send_type == 1\n                ? _c(\n                    \"FormItem\",\n                    { attrs: { label: \"定时发送时间\", prop: \"send_time\" } },\n                    [\n                      _c(\"DatePicker\", {\n                        staticClass: \"input-add\",\n                        attrs: { type: \"datetime\", placeholder: \"Select date\" },\n                        on: { \"on-change\": _vm.snedChangeTime },\n                        model: {\n                          value: _vm.formItem.send_time,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formItem, \"send_time\", $$v)\n                          },\n                          expression: \"formItem.send_time\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"Card\",\n        {\n          staticClass: \"fixed-card\",\n          attrs: { bordered: false, \"dis-hover\": \"\" }\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"acea-row row-center-wrapper\" },\n            [\n              _c(\n                \"Button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.submit()\n                    }\n                  }\n                },\n                [_vm._v(\"提交\")]\n              )\n            ],\n            1\n          )\n        ]\n      ),\n      _c(\n        \"Modal\",\n        {\n          attrs: {\n            width: \"960px\",\n            scrollable: \"\",\n            \"footer-hide\": \"\",\n            closable: \"\",\n            title: \"上传商品图\",\n            \"mask-closable\": false,\n            \"z-index\": 1\n          },\n          model: {\n            value: _vm.modalPic,\n            callback: function($$v) {\n              _vm.modalPic = $$v\n            },\n            expression: \"modalPic\"\n          }\n        },\n        [\n          _vm.modalPic\n            ? _c(\"uploadPictures\", {\n                attrs: {\n                  isChoice: _vm.isChoice,\n                  gridBtn: _vm.gridBtn,\n                  gridPic: _vm.gridPic\n                },\n                on: { getPicD: _vm.getPicD }\n              })\n            : _vm._e()\n        ],\n        1\n      ),\n      _c(\"department\", {\n        ref: \"department\",\n        attrs: {\n          \"active-department\": _vm.activeDepartment,\n          \"is-site\": _vm.isSite,\n          userList: _vm.userList,\n          \"only-department\": _vm.onlyDepartment\n        },\n        on: { changeMastart: _vm.changeMastart }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}