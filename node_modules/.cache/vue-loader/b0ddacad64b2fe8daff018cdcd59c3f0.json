{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/product/productAttr/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/product/productAttr/index.vue","mtime":1662605836000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\nimport addAttr from \"./addAttr\";\nimport { ruleListApi } from \"@/api/product\";\nexport default {\n  name: \"productAttr\",\n  components: { addAttr },\n  data() {\n    return {\n      loading: false,\n      artFrom: {\n        page: 1,\n        limit: 10,\n        rule_name: \"\",\n      },\n      columns4: [\n        // {\n        //     type: 'selection',\n        //     minWidth: 60\n        // },\n        {\n          width: 60,\n          align: \"center\",\n          renderHeader: (h, params) => {\n            return h(\n              \"div\",\n              {\n                class: {\n                  \"select-panel\": true,\n                },\n                on: {\n                  mouseenter: (e) => {\n                    this.display = \"block\";\n                  },\n                  mouseleave: (e) => {\n                    this.display = \"none\";\n                  },\n                },\n              },\n              [\n                h(\"Checkbox\", {\n                  props: {\n                    value: this.checkBox,\n                  },\n                  on: {\n                    \"on-change\": (e) => {\n                      this.checkBox = e;\n\t\t\t\t\t\t\t\t\t\t\tthis.$refs.selection.selectAll(this.checkBox);\n                      this.isAll = e ? 0 : -1;\n                    },\n                  },\n                }),\n                h(\n                  \"div\",\n                  {\n                    style: {\n                      position: \"absolute\",\n                      top: 0,\n                      zIndex: 2,\n                      display: this.display,\n                      width: \"80px\",\n                      padding: \"5px\",\n                      borderRadius: \"4px\",\n                      backgroundColor: \"#fff\",\n                      boxShadow: \"0 0px 5px rgba(0, 0, 0, 0.2)\",\n                      transform: \"translateX(25%)\",\n                    },\n                  },\n                  [\n                    h(\n                      \"div\",\n                      {\n                        class: {\n                          \"select-item\": true,\n                          on: this.isAll === 0,\n                        },\n                        style: {\n                          padding: \"1px 6px\",\n                          cursor: \"pointer\",\n                          height: \"50%\",\n                        },\n                        on: {\n                          click: (e) => {\n                            if (this.isAll === 0) {\n                              this.isAll = -1;\n                              this.checkBox = false;\n                              this.$refs.selection.selectAll(this.checkBox);\n                            } else {\n                              this.isAll = 0;\n                              if (!this.selectionList.length) {\n                                this.checkBox = true;\n                                this.$refs.selection.selectAll(this.checkBox);\n                              }\n                            }\n                            this.display = \"none\";\n                          },\n                        },\n                      },\n                      // \"选择当页\"\n                    ),\n                    h(\n                      \"div\",\n                      {\n                        class: {\n                          \"select-item\": true,\n                          on: this.isAll === 1,\n                        },\n                        style: {\n                          padding: \"4px\",\n                          cursor: \"pointer\",\n                        },\n                        on: {\n                          click: (e) => {\n                            if (this.isAll === 1) {\n                              this.isAll = -1;\n                              this.checkBox = false;\n                            } else {\n                              this.isAll = 1;\n                              this.checkBox = true;\n                            }\n                            this.$refs.selection.selectAll(this.checkBox);\n                            this.display = \"none\";\n                          },\n                        },\n                      },\n                      \"选择全部\"\n                    ),\n                  ]\n                ),\n              ]\n            );\n          },\n          render: (h, params) => {\n            return h(\"Checkbox\", {\n              props: {\n                value: params.row.checkBox,\n              },\n              on: {\n                \"on-change\": (e) => {\n                  if (e) {\n                    this.selectionList.push(params.row);\n                  } else {\n                    this.checkBox = false;\n                    this.selectionList.forEach((item, index) => {\n                      if (item.id === params.row.id) {\n                        this.selectionList.splice(index, 1);\n                      }\n                    });\n                  }\n                  this.isAll = this.selectionList.length ? 0 : -1;\n                  // this.responseData为查询出的结果数据\n                  // params.row.checkBox = e;\n                  params.row.checkBox = e;\n                  this.tableList[params.index].checkBox = e;\n                },\n              },\n              ref: \"checkbox\",\n              refInFor: true,\n            });\n          },\n        },\n        {\n          title: \"ID\",\n          key: \"id\",\n          width: 80,\n        },\n        {\n          title: \"分类\",\n          key: \"rule_name\",\n          minWidth: 150,\n        },\n        {\n          title: \"规格名\",\n          key: \"attr_name\",\n          minWidth: 250,\n        },\n        {\n          title: \"规格值\",\n          slot: \"attr_value\",\n          minWidth: 300,\n        },\n        {\n          title: \"操作\",\n          slot: \"action\",\n          fixed: \"right\",\n          minWidth: 120,\n        },\n      ],\n      tableList: [],\n      total: 0,\n      ids: \"\",\n      selectionList: [],\n      selectionCopy: [],\n      display: \"none\",\n      isAll: 0,\n      checkBox: false,\n    };\n  },\n  watch: {\n    tableList: {\n      deep: true,\n      handler(value) {\n        value.forEach((item) => {\n          this.selectionList.forEach((itm) => {\n            if (itm.id === item.id) {\n              item.checkBox = true;\n            }\n          });\n        });\n        const arr = this.tableList.filter((item) => item.checkBox);\n        if (this.tableList.length) {\n          this.checkBox = this.tableList.length === arr.length;\n        } else {\n          this.checkBox = false;\n        }\n      },\n    },\n    selectionList: {\n      deep: true,\n      handler(value) {\n        let arr = value.map((item) => item.id);\n        this.ids = arr.join();\n      },\n    },\n  },\n  computed: {\n    ...mapState(\"admin/layout\", [\"isMobile\"]),\n    ...mapState(\"admin/order\", [\"orderChartType\"]),\n    labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    },\n  },\n  created() {\n    this.getDataList();\n  },\n  methods: {\n    selectAll(row) {\n      if (row.length) {\n        this.selectionList = row;\n        this.selectionCopy = row;\n      }\n\n      this.selectionCopy.forEach((item, index) => {\n        item.checkBox = this.checkBox;\n        this.$set(this.tableList, index, item);\n      });\n    },\n    // 全选\n    onSelectTab(selection) {\n      this.selectionList = selection;\n      let data = [];\n      this.selectionList.map((item) => {\n        data.push(item.id);\n      });\n      this.ids = data.join(\",\");\n    },\n    // 删除\n    del(row, tit) {\n      let data = {};\n      if (tit === \"批量删除规格\") {\n        if (this.selectionList.length === 0)\n          return this.$Message.warning(\"请选择要删除的规格！\");\n        data = { all: this.isAll };\n        if (this.isAll === 0) {\n          data.ids = this.ids;\n        } else if (this.isAll === 1) {\n          // data.where = this.artFrom;\n          data.where = {\n            rule_name: this.artFrom.rule_name,\n          };\n        }\n      } else {\n        data = {\n          ids: row.id.toString(),\n        };\n      }\n      let delfromData = {\n        title: tit,\n        num: 0,\n        url: `product/product/rule/delete`,\n        method: \"DELETE\",\n        ids: data,\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          let ids = data.ids.split(',');\n          if(ids.length === this.selectionList.length){\n            this.selectionList = [];\n          }\n          this.$Message.success(res.msg);\n          this.artFrom.page = 1\n          this.getDataList();\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    addAttr() {\n      this.$refs.addattr.ids = 0;\n      this.$refs.addattr.modal = true;\n    },\n    // 编辑\n    edit(row) {\n      // this.$refs.addattr.ids = row.id;\n      this.$refs.addattr.modal = true;\n      this.$refs.addattr.getIofo(row);\n    },\n    // 列表；\n    getDataList() {\n      this.loading = true;\n      ruleListApi(this.artFrom)\n        .then((res) => {\n          let data = res.data;\n\t\t\t\t\tdata.list.forEach(item => {\n\t\t\t\t\t    item.checkBox = false;\n\t\t\t\t\t})\n\t\t  this.tableList = data.list\n\t\t  if(this.isAll == 1){\n\t\t\t  this.tableList = data.list.map((item) => {\n\t\t\t\titem.checkBox = true;\n\t\t\t\treturn item;\n\t\t\t  });\n\t\t  }\n          this.total = res.data.count;\n          // this.isAll = -1;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    pageChange(status) {\n      this.artFrom.page = status;\n      this.getDataList();\n    },\n    // 表格搜索\n    userSearchs() {\n      this.artFrom.page = 1;\n      this.selectionList = [];\n      this.getDataList();\n    },\n  },\n};\n",null]}