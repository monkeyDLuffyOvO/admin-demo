{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/layouts/basic-layout/menu-head/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/layouts/basic-layout/menu-head/index.vue","mtime":1654674167000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import iMenuHeadTitle from './title';\n    import { mapState, mapGetters } from 'vuex';\n    import { getStyle } from 'view-design/src/utils/assist';\n    import { on, off } from 'view-design/src/utils/dom';\n    import { throttle } from 'lodash';\n\n    export default {\n        name: 'iMenuHead',\n        components: { iMenuHeadTitle },\n        computed: {\n            ...mapState('admin/layout', [\n                'isMobile'\n            ]),\n            ...mapState('admin/menu', [\n                'headerName'\n            ]),\n            ...mapGetters('admin/menu', [\n                'filterHeader'\n            ])\n        },\n        data () {\n            return {\n                handleResize: () => {},\n                isMenuLimit: false,\n                menuMaxWidth: 0 // 达到这个值后，menu 就显示不下了\n            }\n        },\n        methods: {\n            handleGetMenuHeight () {\n                const menuWidth = parseInt(getStyle(this.$el, 'width'));\n                const $menu = this.$refs.menu;\n                if ($menu) {\n                    const menuHeight = parseInt(getStyle(this.$refs.menu.$el, 'height'));\n                    if (menuHeight > 64) {\n                        if (!this.isMenuLimit) {\n                            this.menuMaxWidth = menuWidth;\n                        }\n                        this.isMenuLimit = true;\n                    }\n                } else if (menuWidth > this.menuMaxWidth) {\n                    this.isMenuLimit = false;\n                }else{\n\t\t\t\t\t\t\t\t\tthis.isMenuLimit = true;\n\t\t\t\t\t\t\t\t}\n            }\n        },\n        watch: {\n            filterHeader () {\n                this.handleGetMenuHeight();\n            },\n            isMobile () {\n                this.handleGetMenuHeight();\n            }\n        },\n        mounted () {\n            this.handleResize = throttle(this.handleGetMenuHeight, 100, { leading: false });\n            on(window, 'resize', this.handleResize);\n            this.handleGetMenuHeight();\n        },\n        beforeDestroy () {\n            off(window, 'resize', this.handleResize);\n        }\n    }\n",null]}