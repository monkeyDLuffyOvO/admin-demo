{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/kefu/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/kefu/index.vue","mtime":1664816773128},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { AccountLogin,getSanCodeKey,scanStatus,kefuConfig,kefuCopy } from '@/api/kefu';\nimport mixins from '../account/mixins';\nimport Setting from '@/setting';\nimport util from '@/libs/util';\nimport QRCode from 'qrcodejs2'\nexport default {\n    mixins: [mixins],\n    data () {\n        return {\n            fullWidth: document.documentElement.clientWidth,\n            swiperOption: {\n                pagination: '.swiper-pagination',\n                autoplay: true\n            },\n            modals: false,\n            autoLogin: true,\n            copyrightContext: '',\n            copyrightImage: '',\n            imgcode: '',\n            formInline: {\n                username: '',\n                password: '',\n                code: ''\n            },\n            ruleInline: {\n                username: [\n                    { required: true, message: '请输入客服账号', trigger: 'blur' }\n                ],\n                password: [\n                    { required: true, message: '请输入客服密码', trigger: 'blur' }\n                ],\n                code: [\n                    { required: true, message: '请输入验证码', trigger: 'blur' }\n                ]\n            },\n            errorNum: 0,\n            jigsaw: null,\n            login_logo: '',\n            swiperList: [],\n            defaultSwiperList: require('@/assets/images/sw.jpg'),\n            loginType:0, // 0 账号 1 扫码\n            codeKey:'',\n            scanTime:'',\n            rxpired:false, // 扫码是否过期\n            isMobile:false,\n            version:'', //版本号\n            isScan:false,\n            timeNum:0\n        }\n    },\n    created () {\n        kefuConfig().then(res=>{\n            this.version = res.data.version\n            if(res.data.site_name){\n                document.title = res.data.site_name;\n            }\n        })\n        this.isMobile = this.$store.state.admin.layout.isMobile\n        var _this = this;\n        top != window && (top.location.href = location.href);\n        document.onkeydown = function (e) {\n            if (_this.$route.name === 'login') {\n                let key = window.event.keyCode;\n                if (key === 13) {\n                    _this.handleSubmit('formInline');\n                }\n            }\n        };\n        window.addEventListener('resize', this.handleResize)\n        this.getKefuCopy()\n    },\n    watch: {\n        fullWidth (val) {\n            // 为了避免频繁触发resize函数导致页面卡顿，使用定时器\n            if (!this.timer) {\n                // 一旦监听到的screenWidth值改变，就将其重新赋给data里的screenWidth\n                this.screenWidth = val\n                this.timer = true\n                let that = this\n                setTimeout(function () {\n                    // 打印screenWidth变化的值\n                    that.timer = false\n                }, 400)\n            }\n        },\n        $route (n) {\n            this.captchas();\n        },\n    },\n    mounted: function () {\n        this.captchas();\n    },\n    methods: {\n        // 版权\n        getKefuCopy(){\n            kefuCopy().then(res=>{\n                this.copyrightContext = res.data.copyrightContext;\n                this.copyrightImage = res.data.copyrightImage || require('@/assets/images/logo-dark.png');\n            })\n        },\n        // 切换扫码\n        bindScan(){\n            if(!this.isScan){\n                this.isScan = true\n                this.getSanCodeKey()\n            }\n            this.loginType = 1\n        },\n        // 生成二维码\n        creatQrCode() {\n            let url= `${window.location.protocol}//${window.location.host}/pages/users/scan_login/index?key=${this.codeKey}`;\n            var qrcode = new QRCode(this.$refs.qrCodeUrl, {\n                text: url, // 需要转换为二维码的内容\n                width: 160,\n                height: 160,\n                colorDark: '#000000',\n                colorLight: '#ffffff',\n                correctLevel: QRCode.CorrectLevel.H\n            })\n        },\n        // 关闭模态框\n        closeModel () {\n            let msg = this.$Message.loading({\n                content: '登录中...',\n                duration: 0\n            });\n            AccountLogin({\n                account: this.formInline.username,\n                password: this.formInline.password,\n                imgcode: this.formInline.code\n            }).then(async res => {\n                msg();\n                let expires = this.getExpiresTime(res.data.exp_time);\n                // 记录用户登陆信息\n                util.cookies.setKefu('uuid', res.data.kefuInfo.uid, {\n                    expires: expires\n                });\n                util.cookies.setKefu('token', res.data.token, {\n                    expires: expires\n                });\n                util.cookies.setKefu('expires_time', res.data.exp_time, {\n                    expires: expires\n                });\n                util.cookies.setKefu('kefuInfo', res.data.kefuInfo, {\n                    expires: expires\n                });\n                const db = await this.$store.dispatch('admin/db/database', {\n                    user: true\n                });\n                if(this.$store.state.admin.layout.isMobile){\n                    //手机页面\n                    return this.$router.replace({ path: this.$route.query.redirect || '/kefu/mobile_list' });\n                }else{\n                    // pc页面\n                   return this.$router.replace({ path: this.$route.query.redirect || '/kefu/pc_list' });\n                }\n            }).catch(res => {\n\n                msg();\n                let data = res === undefined ? {} : res;\n                this.errorNum++;\n                this.captchas();\n                this.$Message.error(data.msg || '登录失败');\n                if (this.jigsaw) this.jigsaw.reset();\n            });\n        },\n        getExpiresTime (expiresTime) {\n            let nowTimeNum = Math.round(new Date() / 1000);\n            let expiresTimeNum = expiresTime - nowTimeNum;\n            return parseFloat(parseFloat(parseFloat(expiresTimeNum / 60) / 60) / 24);\n        },\n        closefail () {\n            if (this.jigsaw) this.jigsaw.reset();\n            this.$Message.error('校验错误');\n        },\n        handleResize (event) {\n            this.fullWidth = document.documentElement.clientWidth\n\n        },\n        captchas: function () {\n            this.imgcode = Setting.apiBaseURL + '/captcha_pro?' + Date.parse(new Date());\n        },\n        handleSubmit (name) {\n            this.$refs[name].validate((valid) => {\n                if (valid) {\n                    this.closeModel();\n                }\n            })\n        },\n        // 获取客服扫码key\n        getSanCodeKey(){\n            getSanCodeKey().then(res=>{\n                this.codeKey = res.data.key\n                this.creatQrCode()\n                this.scanTime = setInterval(()=>{\n                    this.timeNum++\n                    if(this.timeNum>=60){\n                        this.timeNum = 0\n                        window.clearInterval(this.scanTime)\n                        this.rxpired = true\n                    }else{\n                        this.getScanStatus()\n                    }\n                },1000)\n            }).catch(error=>{\n                this.timeNum = 0\n                window.clearInterval(this.scanTime)\n                this.rxpired = true\n                this.$Message.error(error.msg)\n            })\n        },\n        // 扫码登录情况\n        getScanStatus(){\n            scanStatus(this.codeKey).then(async res=>{\n                // 0 = 二维码过期需要重新获取授权凭证\n                if(res.data.status == 0){\n                    this.timeNum = 0\n                    window.clearInterval(this.scanTime)\n                    this.rxpired = true\n                }\n                // 1=正在扫描\n                if(res.data.status == 1){\n\n                }\n                // 3 扫描成功正在登录\n                if(res.data.status == 3){\n                    window.clearInterval(this.scanTime)\n                    let expires = this.getExpiresTime(res.data.exp_time);\n                    // 记录用户登陆信息\n                    util.cookies.setKefu('uid', res.data.kefuInfo.uid, {\n                        expires: expires\n                    });\n                    util.cookies.setKefu('token', res.data.token, {\n                        expires: expires\n                    });\n                    util.cookies.setKefu('expires_time', res.data.exp_time, {\n                        expires: expires\n                    });\n                    util.cookies.setKefu('kefuInfo', JSON.stringify(res.data.kefuInfo), {\n                        expires: expires\n                    });\n                    const db = await this.$store.dispatch('admin/db/database', {\n                        user: true\n                    });\n                    // 保存菜单信息\n                    // db.set('menus', res.data.menus).set('unique_auth', res.data.unique_auth).set('user_info', res.data.user_info).write();\n                    if(this.$store.state.admin.layout.isMobile){\n                        //手机页面\n                        return this.$router.replace({ path: this.$route.query.redirect || '/kefu/mobile_list' });\n                    }else{\n                        // pc页面\n                        return this.$router.replace({ path: this.$route.query.redirect || '/kefu/pc_list' });\n                    }\n                }\n            }).catch(error=>{\n                this.$Modal.error({\n                    title: '提示',\n                    content: error.msg\n                });\n                this.timeNum = 0\n                window.clearInterval(this.scanTime)\n                this.rxpired = true\n            })\n        },\n        // 刷新二维码\n        bindRefresh(){\n            this.$refs.qrCodeUrl.innerHTML = ''\n            this.rxpired = false\n            this.getSanCodeKey()\n        }\n    },\n    beforeCreate () {\n\n    },\n    beforeDestroy: function () {\n        this.timeNum = 0\n        this.$refs.qrCodeUrl.innerHTML = ''\n        window.clearInterval(this.scanTime)\n        window.removeEventListener('resize', this.handleResize);\n        // document.getElementsByTagName('canvas')[0].removeAttribute('class', 'index_bg');\n    }\n};\n",null]}