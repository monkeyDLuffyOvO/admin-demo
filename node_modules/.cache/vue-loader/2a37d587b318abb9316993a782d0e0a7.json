{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/kefu/mobile/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/kefu/mobile/index.vue","mtime":1661152956000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import Setting from '@/setting';\n    import words from '../components/words';\n    import { Socket } from '@/libs/socket';\n    import util from '@/libs/util';\n    import emojiList from '@/utils/emoji'\n    import { serviceList, transferList, serviceTransfer } from '@/api/kefu'\n    var mp3 = require('@/assets/video/notice.mp3');\n    var mp3 = new Audio(mp3);\n\n    const chunk = function (arr, num) {\n        num = num * 1 || 1;\n        var ret = [];\n        arr.forEach(function (item, i) {\n            if (i % num === 0) {\n                ret.push([]);\n            }\n            ret[ret.length - 1].push(item);\n        });\n        return ret;\n    };\n\n    export default {\n        name: 'adminChat_index',\n        data () {\n            return {\n                ops: {\n                    vuescroll: {\n                        mode: 'native',\n                        enable: false,\n                        tips: {\n                            deactive: 'Push to Load',\n                            active: 'Release to Load',\n                            start: 'Loading...',\n                            beforeDeactive: 'Load Successfully!'\n                        },\n                        auto: false,\n                        autoLoadDistance: 0,\n                        pullRefresh: {\n                            enable: false\n                        },\n                        pushLoad: {\n                            enable: true,\n                            auto: true,\n                            autoLoadDistance: 10\n                        }\n                    },\n                    bar: {\n                        background: '#393232',\n                        opacity: '.5',\n                        size: '5px'\n                    }\n                },\n                swiperOptions: {},\n                status: false,\n                loading: false,\n                isTool: false,\n                isSwiper: false,\n                isWords: false,\n                autoplay: false,\n                circular: true,\n                interval: 3000,\n                duration: 500,\n                emojiGroup: chunk(emojiList, 21),\n                con: '',\n                toUid: '',\n                limit: 15,\n                upperId: 0,\n                chatList: [],\n                kefuInfo: {},\n                scrollTop: 0,\n                active: true,\n                isScroll: true,\n                oldHeight: 0,\n                selector: '',\n                transferList: [], // 转接列表\n                isTransfer: false,\n                uploadData: {}, // 上传参数\n                header: {},\n                fileUrl: '',\n                tourist: 0,\n                activeKF: '',\n                pageWs:''\n            }\n        },\n        components: {\n            words\n        },\n        computed: {\n            isSend () {\n                if (this.con.length == 0) {\n                    return false\n                } else {\n                    return true\n                }\n            },\n            records () {\n                return this.chatList.map((item, index) => {\n                    item.time = this.$moment(item.add_time * 1000).format('MMMDo h:mm')\n                    if (index) {\n                        if (\n                            item.add_time -\n                            this.chatList[index - 1].add_time >=\n                            300\n                        ) {\n                            item.show = true;\n                        } else {\n                            item.show = false;\n                        }\n                    } else {\n                        item.show = true;\n                    }\n                    return item;\n                });\n            }\n        },\n        created () {\n            this.fileUrl = Setting.apiBaseURL.replace('adminapi', 'kefuapi') + '/upload'\n            this.toUid = this.$route.query.toUid || ''\n            this.nickname = this.$route.query.nickname || ''\n            this.kefuInfo = JSON.parse(util.cookies.kefuGet('kefuInfo'))\n            Promise.all([this.getChatList(), this.getTransferList()])\n\n\n        },\n        mounted () {\n            window.document.title = `${this.$route.query.nickname || ''} - 对话详情`\n            // 上传头部token\n            this.header['Authori-zation'] = 'Bearer ' + util.cookies.kefuGet('token');\n            this.bus.pageWs = Socket(true)\n            this.$nextTick(() => {\n                if(typeof this.bus.pageWs == 'undefined'){\n                    this.wsLogin()\n                }else{\n                    this.wsStart()\n                }\n\n            })\n        },\n        beforeDestroy () {\n            this.bus.pageWs.then(ws => {\n                ws.send({\n                    data: {\n                        id: 0\n                    },\n                    type: 'to_chat'\n                })\n            });\n        },\n        methods: {\n            goBack(){\n                this.$router.go(-1);\n            },\n            wsLogin(){\n                let token = util.cookies.kefuGet('token')\n                this.bus.pageWs.then(ws => {\n                    ws.send({\n                        type: 'kefu_login',\n                        data: token\n                    })\n                    // 消息接收\n                    ws.$on('success', data => {\n                        this.wsStart()\n                    });\n                }).catch(error=>{\n                    setTimeout(res=>{\n                        this.wsRestart()\n                    },2000)\n                })\n\n            },\n            wsStart(){\n                let that = this;\n                this.bus.pageWs.then(ws => {\n                    ws.send({\n                        data: {\n                            id: this.toUid\n                        },\n                        type: 'to_chat'\n                    })\n                    // 消息接收\n                    ws.$on(['reply', 'chat'], data => {\n                        if (data.msn_type == 1 || data.msn_type == 2) {\n                            data.msn = this.replace_em(data.msn)\n                        }\n                        if (data.msn_type == 5){\n                            if(data.uid != this.toUid) return\n                        }\n                        this.chatList.push(data)\n                        this.$refs['scrollBox'].refresh();\n                        this.$nextTick(() => {\n                            this.scrollBom()\n                        })\n                    });\n                    ws.$on('reply', data => {\n                        // mp3.play();\n                    });\n                    ws.$on('socket_error', () => {\n                        this.$util.Tips({\n                            title: '连接失败'\n                        })\n                    });\n                    ws.$on('timeout', data => {\n                        setTimeout(()=>{\n                            this.wsRestart()\n                        },2000)\n                    })\n                }).catch(error=>{\n                    setTimeout(()=>{\n                        this.wsRestart()\n                    },2000)\n                });\n            },\n            wsRestart(){\n                this.bus.pageWs = Socket(true)\n                this.wsLogin()\n            },\n            handleFormatError (file) {\n                this.$Message.error('上传图片只能是 jpg、jpg、jpeg、gif 格式!');\n            },\n            // 用户详情\n            goUserInfo (item, status) {\n                if (!status) {\n                    this.$router.push({\n                        path: `/kefu/user/index/${item.uid}/${item.type}`\n                    })\n                }\n            },\n            // 上传之前\n            beforeUpload () {\n\n            },\n            // 上传成功\n            handleSuccess (res, file, fileList) {\n                if (res.status === 200) {\n                    this.$Message.success(res.msg);\n                    this.sendMsg(res.data.url, 3)\n                } else {\n                    this.$Message.error(res.msg);\n                }\n            },\n            // 滚动到底部\n            scrollBom () {\n                setTimeout(res => {\n                    let num = parseFloat(document.getElementById('chatBox').offsetHeight)\n                    if (this.$refs['scrollBox']) {\n                        this.$refs['scrollBox'].scrollTo(\n                            {\n                                y: num\n                            },\n                            300\n                        );\n                    }\n                }, 30)\n            },\n            // 订单详情\n            goOrderDetail (item) {\n\t\t\t\t\t\t\tif(item.msn_type == 7){\n\t\t\t\t\t\t\t\tthis.$router.push({\n\t\t\t\t\t\t\t\t    path: `/kefu/orderDetail/${item.orderInfo.id}/1`\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tthis.$router.push({\n\t\t\t\t\t\t\t\t    path: `/kefu/orderDetail/${item.orderInfo.id}`\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n                // uni.navigateTo({\n                //     url: `/pages/admin/orderDetail/index?id=${item.msn}`\n                // })\n            },\n            // 底部功能区打开\n            openBox (key) {\n                if (key == 1) {\n                    this.isTool = false\n                    this.isSwiper = !this.isSwiper\n                } else {\n                    this.isSwiper = false\n                    this.isTool = !this.isTool\n                }\n                this.$refs['scrollBox'].refresh();\n                this.$nextTick(() => {\n                    this.scrollBom();\n                })\n            },\n            showWords () {\n                this.isWords = true\n            },\n\n            // 转接\n            goTransfer () {\n                this.isTransfer = true\n            },\n            // 转接关闭\n            closeTransfer () {\n                this.transferList.forEach((el, index) => {\n                    el.isCheck = false\n                })\n                this.isTransfer = false\n            },\n            // 转接确认\n            confirm () {\n                if (this.activeKF) {\n                    serviceTransfer({\n                        uid: this.toUid,\n                        kefuToUid: this.activeKF\n                    }).then(res => {\n                        this.transferList.forEach((el, index) => {\n                            el.isCheck = false\n                        })\n                        this.$Message.success(res.msg)\n                        this.isTransfer = false\n                    }).catch(error => {\n                        this.$Message.error(error.msg)\n                    })\n                } else {\n                    this.$Message.error('请选择转接客服')\n                }\n            },\n            // 商品信息\n            goodsInfo () {\n                this.$router.push({\n                    path: '/kefu/goods/list?toUid=' + this.toUid\n                })\n            },\n            // 表情点击\n            addEmoji (item) {\n                let val = `[${item}]`\n                this.con += val\n            },\n            // 聊天表情转换\n            replace_em (str) {\n                str = str.replace(/\\[em-([\\s\\S]*)\\]/g, \"<span class='em em-$1'/></span>\");\n                return str;\n            },\n            // 获取聊天列表\n            getChatList () {\n                let self = this\n                serviceList({\n                    limit: this.limit,\n                    uid: this.toUid,\n                    upperId: this.upperId,\n                    is_tourist: this.$route.query.is_tourist\n                }).then(res => {\n                    var sH = 0\n                    res.data.forEach(el => {\n                        if (el.msn_type == 1 || el.msn_type == 2) {\n                            el.msn = this.replace_em(el.msn)\n                        }\n                    })\n                    let selector = ''\n                    if (this.upperId == 0) {\n                        selector = `chat_${res.data[res.data.length - 1].id}`;\n                    } else {\n                        selector = `chat_${this.chatList[0].id}`;\n                    }\n                    this.selector = selector\n                    this.chatList = [...res.data, ...this.chatList];\n                    this.loading = false\n                    this.isScroll = res.data.length >= this.limit\n                    this.$nextTick(() => {\n                        this.$emit('change', true)\n                        this.$refs['scrollBox'].refresh();\n                        if (this.upperId == 0) {\n                            setTimeout(res => {\n                                let num = parseFloat(document.getElementById(selector).offsetTop) - 60\n                                this.$refs['scrollBox'].scrollTo(\n                                    {\n                                        y: num\n                                    },\n                                    0\n                                );\n                            }, 600)\n                        }\n                    })\n                })\n            },\n            // 发送消息\n            sendText () {\n                if (!this.isSend) {\n                    return this.$Message.error('请输入内容')\n                }\n                this.sendMsg(this.con, 1);\n                this.con = ''\n            },\n            // ws发送\n            sendMsg (msn, type) {\n                let obj = {\n                    type: 'chat',\n                    data: {\n                        msn,\n                        type,\n                        to_uid: this.toUid\n                    }\n                }\n                this.bus.pageWs.then(ws => {\n                    ws.send(obj)\n                })\n            },\n            // 图片上传\n            uploadImg () {\n                let self = this\n                self.$util.uploadImageOne('upload/image', function (res) {\n                    if (res.status == 200) {\n                        self.sendMsg(res.data.url, 3)\n                    }\n                });\n            },\n            // 常用于选择\n            selectWords (item) {\n                this.isWords = false\n                this.sendMsg(item.message, 1)\n            },\n            //  商品详情页\n            goProduct (item) {\n                this.$router.push({\n                    path: '/kefu/goods/detail?goodsId=' + item.msn\n                })\n            },\n            // 管理员订单\n            goAdminOrder () {\n                this.$router.push({\n                    path: '/kefu/orderList/0/' + this.toUid\n                })\n            },\n            // 滚动到底部\n            height () {\n                let self = this\n                var scrollTop = 0\n                let info = uni.createSelectorQuery().select('.chat');\n                setTimeout(res => {\n                    info.boundingClientRect(function (data) { // data - 各种参数\n                        scrollTop = data.height\n                        if (self.active) {\n                            self.scrollTop = parseInt(scrollTop) + 500\n                        } else {\n                            self.scrollTop = parseInt(scrollTop) + 100\n                        }\n                    }).exec()\n                }, 1000)\n            },\n            // 转接列表\n            getTransferList () {\n                transferList({\n                    uid: this.toUid\n                }).then(res => {\n                    res.data.list.forEach((item, index) => {\n                        item.isCheck = false\n                    })\n                    this.transferList = res.data.list\n                })\n            },\n            // 关闭常用语\n            closeBox () {\n                this.isWords = false\n            },\n            // 选择话术\n            selectMsg (data) {\n                this.con += data\n                this.isWords = false\n            },\n            handleActivate (vm, refreshDom) {\n                this.upperId = this.chatList[0].id\n            },\n            handleStart (vm, refreshDom, done) {\n                setTimeout(() => {\n                    // load finished\n                    done();\n                }, 2000)\n            },\n            handleBeforeDeactivate (vm, refreshDom, done) {\n                this.getChatList()\n\n                this.$on('change', data => {\n                    if (data) done();\n                })\n            },\n            handleDeactivate (vm, refreshDom) {\n                let num = parseFloat(document.getElementById(this.selector).offsetTop) - 60\n                this.$refs['scrollBox'].scrollTo(\n                    {\n                        y: num\n                    },\n                    0\n                );\n            }\n        }\n    }\n",null]}