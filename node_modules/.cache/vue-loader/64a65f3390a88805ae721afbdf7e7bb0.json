{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/supplier/components/tableList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/supplier/components/tableList.vue","mtime":1655777970000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Template from '../../setting/devise/template.vue'\nimport Supplierdetails from './supplierDetails.vue'\nimport orderSend from '@/pages/order/orderList/handle/orderSend.vue'\nimport orderRecord from '@/pages/order/orderList/handle/orderRecord.vue'\nimport orderRemark from '@/pages/order/orderList/handle/orderRemark.vue'\nimport Distribution from '@/pages/order/orderList/components/distribution.vue'\nimport expandRow from \"@/pages/order/orderList/components/tableExpand.vue\";\n// import editFrom from '@/components/from/from'\nimport userDetails from '@/pages/user/list/handle/userDetails'\nimport { orderInfo, getRefundFrom, deliverRemind } from '@/api/supplier'\nimport { erpConfig } from '@/api/erp'\nexport default {\n  name: '',\n\n  components: {\n    Template,\n    Supplierdetails,\n    orderSend,\n    orderRemark,\n    Distribution,\n    // editFrom,\n    expandRow,\n    userDetails,\n    orderRecord,\n  },\n  props: {\n    orderList: {\n      type: Array,\n      default: [],\n    },\n    columns: {\n      type: Array,\n      default: [],\n    },\n    page: {\n      type: Object,\n      default: {},\n    },\n  },\n  data() {\n    return {\n      delfromData: {},\n      FromData: {},\n      rowActive: {},\n      orderDatalist: null,\n      orderId: 0,\n      remind: 1,\n      openErp: false,\n    }\n  },\n  computed: {},\n  watch: {},\n  created() {\n    this.getErpConfig()\n  },\n  mounted() {},\n  methods: {\n    pageChange(index) {\n      this.page.pageNum = index\n      this.$emit('getList')\n    },\n    limitChange(limit) {\n      this.page.pageSize = limit\n      this.$emit('getList')\n    },\n\n    //erp配置\n    getErpConfig() {\n      erpConfig()\n        .then((res) => {\n          this.openErp = res.data.open_erp\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg)\n        })\n    },\n\n    // 修改成功\n    submitFail(type) {\n      this.status = 0\n      this.$emit('getList')\n      if (this.orderConNum != 1) {\n        this.getData(this.orderId, 1)\n      } else {\n        this.$refs.detailss.getSplitOrder(this.orderConId)\n      }\n      if (type) {\n        this.$emit('changeGetTabs')\n      }\n    },\n\n    showUserInfo(row) {\n      this.$refs.userDetails.modals = true\n      this.$refs.userDetails.activeName = 'info'\n      this.$refs.userDetails.getDetails(row.uid)\n    },\n\n    // 提醒发货\n    btnClick(row) {\n      let data = {\n        supplier_id: row.supplier_id,\n        id: row.id,\n      }\n      deliverRemind(data)\n        .then(async (res) => {\n          this.$Message.success(res.msg)\n          this.$emit('getList')\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg)\n          if (res.status == '400') {\n            row.remind = 2\n          }\n        })\n    },\n    \n    // 打印\n    distributionInfo(id) {\n      distributionInfo(id).then(async(res)=>{\n\n      }).catch()\n\n    },\n\n    // 小票打印\n    changeMenu(row, name, num) {\n      this.orderId = row.id\n      this.orderConId = row.pid>0?row.pid:row.id;\n      this.orderConNum = num\n      switch (name) {\n        // 立即支付\n        case '1':\n          this.delfromData = {\n            title: '修改立即支付',\n            url: `/supplier/order/pay_offline/${row.id}`,\n            method: 'post',\n            ids: '',\n          }\n          this.$modalSure(this.delfromData)\n            .then((res) => {\n              this.$Message.success(res.msg)\n              // this.$emit(\"changeGetTabs\");\n              this.getData(row.id, 1)\n              this.$emit('getList')\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg)\n            })\n          break\n\n        // 详情\n        case '2':\n          this.rowActive = row\n          this.getData(row.id)\n          break\n\n        // 订单记录\n        case '3':\n          this.$refs.record.modals = true\n          this.$refs.record.getList(row.id)\n          break\n\n        // 订单备注\n        case '4':\n          this.$refs.remarks.formValidate.remark = row.remark\n          this.$refs.remarks.modals = true\n           this.$emit('getList')\n          break\n\n        // 立即退款\n        case '5':\n          this.getOnlyRefundData(row.id, row.refund_type)\n          break\n\n        // 同意退货\n        case '55':\n          this.getRefundData(row.id, row.refund_type)\n          break\n\n        // 打印\n        case '7':\n          this.distributionInfo(row.id)\n          break\n          \n        // 配货单\n        case '9':\n          this.getRefundData(row.id, row.refund_type)\n          break\n\n        // 已收货\n        case '8':\n          this.delfromData = {\n            title: '修改确认收货',\n            url: `/supplier/order/take/${row.id}`,\n            method: 'put',\n            ids: '',\n          }\n          this.$modalSure(this.delfromData)\n            .then((res) => {\n              this.$Message.success(res.msg)\n              this.$emit('changeGetTabs')\n              this.$emit('getList')\n              if (num) {\n                this.$refs.detailss.getSplitOrder(row.pid)\n              } else {\n                this.getData(row.id, 1)\n              }\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg)\n            })\n          // this.modalTitleSs = '修改确认收货';\n          break\n        case \"12\":\n          let pathInfo = this.$router.resolve({\n            path:'/admin/supplier/order/distribution',\n            query:{\n              id:row.id,\n              status: 1\n            }\n          });\n          window.open(pathInfo.href, '_blank');\n          break;\n        // 小票打印\n        case '10':\n          this.delfromData = {\n            title: '立即打印订单',\n            info: '您确认打印此订单吗?',\n            url: `/supplier/order/print/${row.id}`,\n            method: 'get',\n            ids: '',\n          }\n          this.$modalSure(this.delfromData)\n            .then((res) => {\n              this.$Message.success(res.msg)\n              this.$emit('getList')\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg)\n            })\n          break\n      }\n    },\n\n    // 仅退款\n    getOnlyRefundData(id, refund_type) {\n      this.$modalForm(getRefundFrom(id)).then(() => {\n        this.$emit('getList')\n        this.$emit('changeGetTabs')\n        this.$refs.detailss.modals = false\n      })\n    },\n\n    // 退货退款\n    getRefundData(id, refund_type) {\n      this.delfromData = {\n        title: '是否立即退货退款',\n        url: `/supplier/refund/agree/${id}`,\n        method: 'get',\n      }\n      this.$modalSure(this.delfromData)\n        .then((res) => {\n          this.$Message.success(res.msg)\n          this.$emit('getList')\n          this.$emit('changeGetTabs')\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg)\n        })\n    },\n\n    // 获取详情表单数据\n    getData(id, type) {\n      orderInfo(id)\n        .then(async (res) => {\n          if (!type) {\n            this.$refs.detailss.modals = true\n          }\n          this.$refs.detailss.activeName = 'detail'\n          this.orderDatalist = res.data\n          if (this.orderDatalist.orderInfo.refund_reason_wap_img) {\n            try {\n              this.orderDatalist.orderInfo.refund_reason_wap_img = JSON.parse(\n                this.orderDatalist.orderInfo.refund_reason_wap_img\n              )\n            } catch (e) {\n              this.orderDatalist.orderInfo.refund_reason_wap_img = []\n            }\n          }\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg)\n        })\n    },\n  },\n}\n",null]}