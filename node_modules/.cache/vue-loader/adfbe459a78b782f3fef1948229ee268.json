{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/components/mobileConfigRight/c_goods.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/components/mobileConfigRight/c_goods.vue","mtime":1640264908000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport vuedraggable from 'vuedraggable'\nimport goodsList from '@/components/goodsList'\nexport default {\n    name: 'c_goods',\n    props: {\n        configObj: {\n            type: Object\n        }\n    },\n    components: {\n        goodsList,\n        draggable: vuedraggable\n    },\n    watch: {\n        configObj: {\n            handler (nVal, oVal) {\n                this.defaults = nVal\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    data () {\n        return {\n            modals: false,\n            goodsList: [],\n            tempGoods: {},\n            defaults:{}\n        }\n    },\n    created () {\n        this.defaults = this.configObj\n    },\n    methods: {\n        //对象数组去重；\n        unique(arr) {\n            const res = new Map();\n            return arr.filter((arr) => !res.has(arr.id) && res.set(arr.id, 1))\n        },\n        getProductId (data) {\n            // this.tempGoods = data\n            this.modals = false;\n            let list = this.defaults.goodsList.list.concat(data);\n            this.defaults.goodsList.list = this.unique(list);\n        },\n        cancel () {\n            this.modals = false;\n            // this.tempGoods = {}\n        },\n        ok () {\n            this.defaults.goodsList.list.push(this.tempGoods)\n        },\n        bindDelete (index) {\n            this.defaults.goodsList.list.splice(index, 1)\n        }\n    }\n}\n",null]}