{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/user/list/handle/userForm.vue?vue&type=template&id=63fa2d35&scoped=true&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/user/list/handle/userForm.vue","mtime":1662690806000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"Form\", { attrs: { model: _vm.formData, \"label-width\": 76 } }, [\n        _c(\"div\", { staticClass: \"section\" }, [\n          _c(\"div\", { staticClass: \"section-hd\" }, [_vm._v(\"基本信息\")]),\n          _c(\n            \"div\",\n            { staticClass: \"section-bd\" },\n            [\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"用户编号：\" } },\n                [\n                  _c(\"Input\", {\n                    attrs: { disabled: \"\" },\n                    model: {\n                      value: _vm.formData.uid,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"uid\", $$v)\n                      },\n                      expression: \"formData.uid\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"真实姓名：\" } },\n                [\n                  _c(\"Input\", {\n                    attrs: { placeholder: \"请输入\" },\n                    model: {\n                      value: _vm.formData.real_name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"real_name\", $$v)\n                      },\n                      expression: \"formData.real_name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"手机号码：\" } },\n                [\n                  _c(\"Input\", {\n                    attrs: { placeholder: \"请输入\" },\n                    model: {\n                      value: _vm.formData.phone,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"phone\", $$v)\n                      },\n                      expression: \"formData.phone\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"生日：\" } },\n                [\n                  _c(\"DatePicker\", {\n                    attrs: { value: _vm.formData.birthday },\n                    on: { \"on-change\": _vm.dateChange }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"性别：\" } },\n                [\n                  _c(\n                    \"Select\",\n                    {\n                      model: {\n                        value: _vm.formData.sex,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"sex\", $$v)\n                        },\n                        expression: \"formData.sex\"\n                      }\n                    },\n                    [\n                      _c(\"Option\", { attrs: { value: 0 } }, [_vm._v(\"保密\")]),\n                      _c(\"Option\", { attrs: { value: 1 } }, [_vm._v(\"男\")]),\n                      _c(\"Option\", { attrs: { value: 2 } }, [_vm._v(\"女\")])\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"省市区：\" } },\n                [\n                  _c(\"Cascader\", {\n                    attrs: { data: _vm.addresData, \"load-data\": _vm.loadData },\n                    on: { \"on-change\": _vm.addchack },\n                    model: {\n                      value: _vm.addressSelect,\n                      callback: function($$v) {\n                        _vm.addressSelect = $$v\n                      },\n                      expression: \"addressSelect\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"身份证号：\" } },\n                [\n                  _c(\"Input\", {\n                    attrs: { placeholder: \"请输入\" },\n                    model: {\n                      value: _vm.formData.card_id,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"card_id\", $$v)\n                      },\n                      expression: \"formData.card_id\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"详细地址：\" } },\n                [\n                  _c(\"Input\", {\n                    attrs: { placeholder: \"请输入\" },\n                    model: {\n                      value: _vm.formData.addres,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"addres\", $$v)\n                      },\n                      expression: \"formData.addres\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ]),\n        _c(\"div\", { staticClass: \"section\" }, [\n          _c(\"div\", { staticClass: \"section-hd\" }, [_vm._v(\"密码设置\")]),\n          _c(\n            \"div\",\n            { staticClass: \"section-bd\" },\n            [\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"登录密码：\" } },\n                [\n                  _c(\"Input\", {\n                    attrs: {\n                      type: \"password\",\n                      password: \"\",\n                      placeholder: \"请输入\"\n                    },\n                    model: {\n                      value: _vm.formData.pwd,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"pwd\", $$v)\n                      },\n                      expression: \"formData.pwd\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"确认密码：\" } },\n                [\n                  _c(\"Input\", {\n                    attrs: {\n                      type: \"password\",\n                      password: \"\",\n                      placeholder: \"请输入\"\n                    },\n                    model: {\n                      value: _vm.formData.true_pwd,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"true_pwd\", $$v)\n                      },\n                      expression: \"formData.true_pwd\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ]),\n        _c(\"div\", { staticClass: \"section\" }, [\n          _c(\"div\", { staticClass: \"section-hd\" }, [_vm._v(\"用户设置\")]),\n          _c(\n            \"div\",\n            { staticClass: \"section-bd\" },\n            [\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"推广资格：\" } },\n                [\n                  _c(\n                    \"i-switch\",\n                    {\n                      attrs: {\n                        \"true-value\": 1,\n                        \"false-value\": 0,\n                        size: \"large\"\n                      },\n                      model: {\n                        value: _vm.formData.spread_open,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"spread_open\", $$v)\n                        },\n                        expression: \"formData.spread_open\"\n                      }\n                    },\n                    [\n                      _c(\"span\", { attrs: { slot: \"open\" }, slot: \"open\" }, [\n                        _vm._v(\"启用\")\n                      ]),\n                      _c(\"span\", { attrs: { slot: \"close\" }, slot: \"close\" }, [\n                        _vm._v(\"禁用\")\n                      ])\n                    ]\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"用户状态：\" } },\n                [\n                  _c(\n                    \"i-switch\",\n                    {\n                      attrs: {\n                        \"true-value\": 1,\n                        \"false-value\": 0,\n                        size: \"large\"\n                      },\n                      model: {\n                        value: _vm.formData.status,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"status\", $$v)\n                        },\n                        expression: \"formData.status\"\n                      }\n                    },\n                    [\n                      _c(\"span\", { attrs: { slot: \"open\" }, slot: \"open\" }, [\n                        _vm._v(\"开启\")\n                      ]),\n                      _c(\"span\", { attrs: { slot: \"close\" }, slot: \"close\" }, [\n                        _vm._v(\"锁定\")\n                      ])\n                    ]\n                  )\n                ],\n                1\n              ),\n              _c(\"FormItem\", { attrs: { label: \"用户标签：\" } }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"flex-add\" },\n                  [\n                    _c(\n                      \"div\",\n                      {\n                        staticClass: \"labelInput acea-row row-between-wrapper\",\n                        on: { click: _vm.openLabel }\n                      },\n                      [\n                        _c(\"div\", { staticClass: \"width-add\" }, [\n                          _vm.dataLabel.length\n                            ? _c(\n                                \"div\",\n                                _vm._l(_vm.dataLabel, function(item, index) {\n                                  return _c(\n                                    \"Tag\",\n                                    {\n                                      attrs: { closable: \"\" },\n                                      on: {\n                                        \"on-close\": function($event) {\n                                          return _vm.closeLabel(item)\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(_vm._s(item.label_name))]\n                                  )\n                                }),\n                                1\n                              )\n                            : _c(\"span\", { staticClass: \"span\" }, [\n                                _vm._v(\"选择用户关联标签\")\n                              ])\n                        ]),\n                        _c(\"div\", { staticClass: \"iconfont iconxiayi\" })\n                      ]\n                    ),\n                    _c(\n                      \"Button\",\n                      {\n                        attrs: { type: \"text\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.add(1)\n                          }\n                        }\n                      },\n                      [_vm._v(\"添加标签\")]\n                    )\n                  ],\n                  1\n                )\n              ]),\n              _c(\"FormItem\", { attrs: { label: \"用户分组：\" } }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"flex-add\" },\n                  [\n                    _c(\n                      \"Select\",\n                      {\n                        attrs: { placeholder: \"请选择\", transfer: true },\n                        model: {\n                          value: _vm.formData.group_id,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"group_id\", $$v)\n                          },\n                          expression: \"formData.group_id\"\n                        }\n                      },\n                      _vm._l(_vm.groupList, function(item) {\n                        return _c(\n                          \"Option\",\n                          { key: item.id, attrs: { value: item.id } },\n                          [_vm._v(_vm._s(item.group_name))]\n                        )\n                      }),\n                      1\n                    ),\n                    _c(\n                      \"Button\",\n                      {\n                        attrs: { type: \"text\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.add(2)\n                          }\n                        }\n                      },\n                      [_vm._v(\"添加分组\")]\n                    )\n                  ],\n                  1\n                )\n              ]),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"用户等级：\" } },\n                [\n                  _c(\n                    \"Select\",\n                    {\n                      model: {\n                        value: _vm.formData.level,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"level\", $$v)\n                        },\n                        expression: \"formData.level\"\n                      }\n                    },\n                    _vm._l(_vm.levelOptions, function(item) {\n                      return _c(\n                        \"Option\",\n                        { key: item.id, attrs: { value: item.id } },\n                        [_vm._v(_vm._s(item.name))]\n                      )\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"推广人：\" } },\n                [\n                  _c(\"Input\", {\n                    attrs: {\n                      clearable: \"\",\n                      placeholder: \"请选择\",\n                      icon: \"ios-arrow-down\"\n                    },\n                    on: {\n                      \"on-clear\": _vm.clearSpread,\n                      \"on-focus\": _vm.editSpread\n                    },\n                    model: {\n                      value: _vm.formData.spread_uid_nickname,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"spread_uid_nickname\", $$v)\n                      },\n                      expression: \"formData.spread_uid_nickname\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ])\n      ]),\n      _c(\n        \"Modal\",\n        {\n          attrs: {\n            scrollable: \"\",\n            title: \"请选择商城用户\",\n            closable: false,\n            width: \"50%\"\n          },\n          model: {\n            value: _vm.customerShow,\n            callback: function($$v) {\n              _vm.customerShow = $$v\n            },\n            expression: \"customerShow\"\n          }\n        },\n        [\n          _vm.customerShow\n            ? _c(\"customerInfo\", { on: { imageObject: _vm.imageObject } })\n            : _vm._e()\n        ],\n        1\n      ),\n      _c(\n        \"Modal\",\n        {\n          attrs: {\n            scrollable: \"\",\n            title: \"请选择用户标签\",\n            closable: false,\n            width: \"320\",\n            \"footer-hide\": true,\n            \"mask-closable\": false\n          },\n          model: {\n            value: _vm.labelShow,\n            callback: function($$v) {\n              _vm.labelShow = $$v\n            },\n            expression: \"labelShow\"\n          }\n        },\n        [\n          _c(\"userLabel\", {\n            ref: \"userLabel\",\n            on: { activeData: _vm.activeData, close: _vm.labelClose }\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}