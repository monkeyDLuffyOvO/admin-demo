{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/system/group/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/system/group/list.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex'\nimport editFrom from '@/components/from/from'\nimport { groupDataListApi, groupDataAddApi, groupDataEditApi, groupDataHeaderApi, groupDataSetApi, groupAllApi } from '@/api/system'\nexport default {\n    name: 'list',\n    components: { editFrom },\n    data () {\n        return {\n            grid: {\n                xl: 7,\n                lg: 7,\n                md: 12,\n                sm: 24,\n                xs: 24\n            },\n            formValidate: {\n                status: '',\n                page: 1,\n                limit: 20,\n                gid: 0\n            },\n            total: 0,\n            tabList: [],\n            columns1: [],\n            FromData: null,\n            loading: false,\n            titleType: 'group',\n            groupAll: [],\n            theme3: 'light',\n            labelSort: [],\n            sortName: null,\n            current: 0\n        }\n    },\n    computed: {\n        ...mapState('admin/layout', [\n            'isMobile'\n        ]),\n        labelWidth () {\n            return this.isMobile ? undefined : 96;\n        },\n        labelPosition () {\n            return this.isMobile ? 'top' : 'right';\n        }\n    },\n    watch: {\n        $route (to, from) {\n            if (this.$route.params.id) {\n                this.getList();\n                this.getListHeader()\n            } else {\n                this.getGroupAll();\n            }\n            // this.getListHeader();\n            // this.getList();\n        }\n    },\n    mounted () {\n        if (this.$route.params.id) {\n            this.getList();\n            this.getListHeader()\n        } else {\n            this.getGroupAll();\n        }\n        // this.getListHeader();\n        // this.getList();\n    },\n    methods: {\n        bindMenuItem (name, index) {\n            this.current = index;\n            this.formValidate.gid = name.id\n            this.getListHeader();\n            this.getList();\n        },\n        getGroupAll () {\n            groupAllApi().then(async res => {\n                this.groupAll = res.data;\n                this.sortName = res.data[0].id\n                this.formValidate.gid = res.data[0].id\n                this.getListHeader()\n                this.getList()\n            }).catch(res => {\n                this.$Message.error(res.msg)\n            })\n        },\n        // 返回\n        back () {\n            this.$router.push({ path: '/admin/system/config/system_group/index' });\n        },\n        getUrl (type) {\n            let url = 'setting/group_data' + type;\n            if (this.$route.params.id) {\n                let arr = {\n                    'setting_groupDataSign': 'setting/sign_data' + type,\n                    'setting_groupDataOrder': 'setting/order_data' + type,\n                    'setting_groupDataUser': 'setting/usermenu_data' + type,\n                    'setting_groupDataPoster': 'setting/poster_data' + type,\n                    'marketing_storeSeckillData': 'setting/seckill_data' + type\n                };\n                if (arr[this.$route.name] === undefined) return url\n                return arr[this.$route.name]\n            } else {\n                return url\n            }\n        },\n        // 列表\n        getList () {\n            this.loading = true\n            this.formValidate.gid = this.$route.params.id ? this.$route.params.id : this.formValidate.gid\n            this.formValidate.status = this.formValidate.status || ''\n            groupDataListApi(this.formValidate, this.getUrl('')).then(async res => {\n                let data = res.data\n                this.tabList = data.list\n                this.total = data.count\n                this.loading = false\n            }).catch(res => {\n                this.loading = false\n                this.$Message.error(res.msg)\n            })\n            // this.loading = true;\n            // this.formValidate.gid = this.$route.params.id;\n            // this.formValidate.status = this.formValidate.status || '';\n            // groupDataListApi(this.formValidate).then(async res => {\n            //     let data = res.data;\n            //     this.tabList = data.list;\n            //     this.total = data.count;\n            //     this.loading = false;\n            // }).catch(res => {\n            //     this.loading = false;\n            //     this.$Message.error(res.msg);\n            // })\n        },\n        // 表格头部\n        getListHeader () {\n            this.loading = true\n            let data = {\n                gid: this.$route.params.id ? this.$route.params.id : this.formValidate.gid\n            }\n            groupDataHeaderApi(data, this.getUrl('/header')).then(async res => {\n                let data = res.data\n                let header = data.header\n                let index = []\n                header.forEach(function (item, i) {\n                    if (item.type === 'img') {\n                        index.push(i)\n                    }\n                })\n                index.forEach(function (item) {\n                    header[item].render = (h, params) => {\n                        let arr = params.row[header[item].key]\n                        let newArr = []\n                        if (arr !== undefined && arr.length) {\n                            arr.forEach(function (e, i) {\n                                newArr.push(h('div', {\n                                    style: {\n                                        width: '36px',\n                                        height: '36px',\n                                        'border-radius': '4px',\n                                        cursor: 'pointer',\n                                        display: 'inline-block'\n                                    }\n                                }, [\n                                    h('img', {\n                                        attrs: {\n                                            src: params.row[header[item].key][i]\n                                        },\n                                        style: {\n                                            width: '100%',\n                                            height: '100%'\n                                        }\n                                    })\n                                ]))\n                            })\n                        }\n                        return h('viewer', newArr)\n                    }\n                })\n                this.columns1 = header\n                this.loading = false\n            }).catch(res => {\n                this.loading = false\n                this.$Message.error(res.msg)\n            })\n        },\n        pageChange (index) {\n            this.formValidate.page = index\n            this.getList()\n        },\n        // 表格搜索\n        userSearchs () {\n            this.formValidate.page = 1\n            this.getList()\n        },\n        // 添加表单\n        groupAdd () {\n            this.$modalForm(groupDataAddApi({ gid: this.$route.params.id ? this.$route.params.id : this.formValidate.gid }, this.getUrl('/create'))).then(() => this.getList())\n        },\n        // 修改是否显示\n        onchangeIsShow (row) {\n            groupDataSetApi(this.getUrl(`/set_status/${row.id}/${row.status}`)).then(async res => {\n                this.$Message.success(res.msg)\n                this.getList()\n            }).catch(res => {\n                this.$Message.error(res.msg)\n            })\n            // let data = {\n            //     id: row.id,\n            //     status: row.status\n            // }\n            // groupDataSetApi(data).then(async res => {\n            //     this.$Message.success(res.msg);\n            // }).catch(res => {\n            //     this.$Message.error(res.msg);\n            // })\n        },\n        // 编辑\n        edit (row) {\n            let data = {\n                gid: row.gid\n            }\n            this.$modalForm(groupDataEditApi(data, this.getUrl(`/${row.id}/edit`))).then(() => this.getList())\n        },\n        // 删除\n        del (row, tit, num) {\n            let delfromData = {\n                title: tit,\n                num: num,\n                url: this.getUrl(`/${row.id}`),\n                method: 'DELETE',\n                ids: ''\n            }\n            this.$modalSure(delfromData).then((res) => {\n                this.$Message.success(res.msg)\n                this.tabList.splice(num, 1)\n            }).catch(res => {\n                this.$Message.error(res.msg)\n            })\n            // let delfromData = {\n            //     title: tit,\n            //     num: num,\n            //     url: `setting/group_data/${row.id}`,\n            //     method: 'DELETE',\n            //     ids: ''\n            // }\n            // this.$modalSure(delfromData).then((res) => {\n            //     this.$Message.success(res.msg);\n            //     this.tabList.splice(num, 1);\n            // }).catch(res => {\n            //     this.$Message.error(res.msg);\n            // });\n        }\n    }\n}\n",null]}