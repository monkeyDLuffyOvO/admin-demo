{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/store/storeMenus/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/store/storeMenus/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\nimport {\n  getTable,\n  menusDetailsApi,\n  isShowApi,\n  editMenus,\n} from \"@/api/systemMenus\";\nimport formCreate from \"@form-create/iview\";\nimport menusFrom from \"./components/menusFrom\";\nexport default {\n  name: \"systemMenus\",\n  data() {\n    return {\n      spinShow: false,\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      roleData: {\n        is_show: \"\",\n        keyword: \"\",\n      },\n      loading: false,\n      tableData: [],\n      FromData: null,\n      icons: \"\",\n      formValidate: {},\n      titleFrom: \"\",\n      modalTitleSs: \"\",\n    };\n  },\n  components: { menusFrom, formCreate: formCreate.$form() },\n  computed: {\n    ...mapState(\"admin/layout\", [\"isMobile\"]),\n    labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    },\n  },\n  mounted() {\n    // this.formValidate.auth_type = '1';\n    this.getData();\n  },\n  methods: {\n    // 修改规则状态\n    onchangeIsShow(row) {\n      let data = {\n        id: row.id,\n        is_show: row.is_show,\n      };\n      isShowApi(data)\n        .then(async (res) => {\n          this.$Message.success(res.msg);\n          this.$store.dispatch(\"admin/menus/getMenusNavList\");\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 请求列表\n    getList() {\n      this.formValidate = Object.assign({}, this.$options.data().formValidate);\n      this.getData();\n    },\n    selectRule(data) {\n      this.formValidate.menu_name = data.real_name;\n      this.formValidate.methods = data.method;\n      this.formValidate.api_url = data.rule;\n    },\n    // 清除表单数据\n    clearFrom() {\n      this.formValidate = Object.assign({}, this.$options.data().formValidate);\n    },\n    // 添加子菜单\n    addE(row, title) {\n      this.formValidate = {};\n\n      let pid = row.id.toString();\n      if (pid) {\n        menusDetailsApi(row.id, 2)\n          .then(async (res) => {\n            this.formValidate.path = res.data.path;\n            this.formValidate.path.push(row.id);\n            this.formValidate.pid = pid;\n            this.$refs.menusFrom.modals = true;\n            this.$refs.menusFrom.valids = false;\n            this.titleFrom = title;\n            this.formValidate.auth_type = 1;\n            this.formValidate.is_show = \"0\";\n          })\n          .catch((res) => {\n            this.$Message.error(res.msg);\n          });\n      } else {\n        this.formValidate.pid = pid;\n        this.$refs.menusFrom.modals = true;\n        this.$refs.menusFrom.valids = false;\n        this.titleFrom = title;\n        this.formValidate.auth_type = 1;\n        this.formValidate.is_show = \"0\";\n      }\n      // this.formValidate.pid = row.id.toString();\n      // this.$refs.menusFrom.modals = true;\n      // this.$refs.menusFrom.valids = false;\n      // this.titleFrom = title;\n      // this.formValidate.auth_type = 1;\n      // this.formValidate.is_show = '0';\n    },\n    // 删除\n    del(row, tit) {\n      let delfromData = {\n        title: tit,\n        url: `/setting/menus/${row.id}`,\n        method: \"DELETE\",\n        ids: \"\",\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.getData();\n          this.$store.dispatch(\"admin/menus/getMenusNavList\");\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 规则详情\n    menusDetails(id) {\n      menusDetailsApi(id, 2)\n        .then(async (res) => {\n          this.formValidate = res.data;\n          this.$refs.menusFrom.modals = true;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 编辑\n    edit(row, title, index) {\n      this.formValidate = {};\n      this.menusDetails(row.id);\n      this.titleFrom = title;\n      this.$refs.menusFrom.valids = false;\n      this.$refs.menusFrom.getAddFrom(row.id);\n    },\n    // 添加\n    menusAdd(title) {\n      this.formValidate = {};\n      this.$refs.menusFrom.modals = true;\n      this.$refs.menusFrom.valids = false;\n      // this.formValidate = Object.assign(this.$data, this.$options.formValidate());\n      this.titleFrom = title;\n      this.formValidate.auth_type = 1;\n      this.formValidate.is_show = 0;\n      this.formValidate.is_show_path = 0;\n      this.$refs.menusFrom.getAddFrom();\n    },\n    // 列表\n    getData() {\n      this.loading = true;\n      this.roleData.is_show = this.roleData.is_show || \"\";\n      getTable(this.roleData, 2)\n        .then(async (res) => {\n          this.tableData = res.data;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    // 关闭按钮\n    cancel() {\n      this.$emit(\"onCancel\");\n    },\n  },\n};\n",null]}