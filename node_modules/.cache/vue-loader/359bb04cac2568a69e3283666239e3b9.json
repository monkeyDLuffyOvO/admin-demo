{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/notify/smsConfig/components/forgetPhone.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/notify/smsConfig/components/forgetPhone.vue","mtime":1640264908000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { captchaApi, configApi, serveModifyApi, updateHoneApi, serveInfoApi} from '@/api/setting';\nexport default {\n    name: 'forgetPhone',\n    props: {\n        isIndex: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data () {\n        const validatePhone = (rule, value, callback) => {\n            if (!value) {\n                return callback(new Error('请填写手机号'));\n            } else if (!/^1[3456789]\\d{9}$/.test(value)) {\n                callback(new Error('手机号格式不正确!'));\n            } else {\n                callback();\n            }\n        };\n        var validatePass = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入密码'));\n            } else {\n                if (this.formInline.checkPass !== '') {\n                    this.$refs.formInline.validateField('checkPass');\n                }\n                callback();\n            }\n        };\n\n        return {\n            cutNUm: '获取验证码',\n            canClick: true,\n            current: 0,\n            formInline: {\n                account: '',\n                account_show: '',\n                phone: '',\n                verify_code: '',\n                password: '',\n            },\n            ruleInline: {\n                phone: [\n                    { required: true, validator: validatePhone, trigger: 'blur' }\n                ],\n                verify_code: [\n                    { required: true, message: '请输入验证码', trigger: 'blur' }\n                ],\n                password: [\n                    { required: true, message: '请输入密码', trigger: 'blur' }\n                ],\n                account: [\n                    { required: true, validator: validatePhone, trigger: 'blur' }\n                ],\n            }\n        }\n    },\n    methods: {\n        // 短信验证码\n        cutDown () {\n            if (this.formInline.phone) {\n                if (!this.canClick) return;\n                this.canClick = false;\n                this.cutNUm = 60;\n                let data = {\n                    phone: this.formInline.phone\n                };\n                captchaApi(data).then(async res => {\n                    this.$Message.success(res.msg);\n                }).catch(res => {\n                    this.$Message.error(res.msg);\n                })\n                let time = setInterval(() => {\n                    this.cutNUm--;\n                    if (this.cutNUm === 0) {\n                        this.cutNUm = '获取验证码';\n                        this.canClick = true;\n                        clearInterval(time)\n                    }\n                }, 1000)\n            } else {\n                this.$Message.warning('请填写手机号!');\n            }\n        },\n        handleSubmit1 (name) {\n            this.$refs[name].validate((valid) => {\n                if (valid) {\n                    this.handleSubmit(name,1);\n                } else {\n                    return false;\n                }\n            })\n        },\n        handleSubmit2(name) {\n            this.$refs[name].validate((valid) => {\n                if (valid) {\n                    updateHoneApi(this.formInline).then(async res => {\n                        this.$Message.success(res.msg)\n                        this.current = 2;\n                    }).catch(res => {\n                        this.$Message.error(res.msg);\n                    })\n                } else {\n                    return false;\n                }\n            })\n        },\n        //登录\n        handleSubmit (name,num) {\n            this.$refs[name].validate((valid) => {\n                if (valid) {\n                    configApi({\n                        account: this.formInline.account,\n                        password: this.formInline.password\n                    }).then(async res => {\n                        num===1?this.$Message.success(\"原手机号密码正确\"):this.$Message.success(\"登录成功\");\n                        num===1?this.current = 1:this.$emit('on-Login');\n                    }).catch(res => {\n                        this.$Message.error(res.msg);\n                    })\n                } else {\n                    return false;\n                }\n            })\n        },\n        returns () {\n            this.current === 0 ? this.$emit('gobackPhone'): this.current = 0\n        }\n    },\n    mounted() {\n        serveInfoApi().then((res) => {\n            this.formInline.account = res.data.phone;\n            this.formInline.account_show = res.data.phone.replace(/(\\d{3})\\d{4}(\\d{4})/, '$1****$2');\n        });\n    },\n}\n",null]}