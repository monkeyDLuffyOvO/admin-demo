{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/kefu/mobile/user/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/kefu/mobile/user/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import userLabels from \"./userLabel\";\n    import { userInfo, userGroupApi, putGroupApi, userLabel } from '@/api/kefu';\n    import vuePickers from 'vue-pickers';\n\t\timport dayjs from \"dayjs\";\n    export default {\n        name: \"index\",\n        components: {\n            userLabels,\n            vuePickers\n        },\n\t\t\t\tfilters:{\n\t\t\t\t\tgetDay(val) {\n\t\t\t\t\t  if (val) {\n\t\t\t\t\t    return dayjs.unix(val).format(\"YYYY年M月D日\");\n\t\t\t\t\t  }\n\t\t\t\t\t},\n\t\t\t\t\ttypeFilters(value) {\n\t\t\t\t\t  const statusMap = {\n\t\t\t\t\t    h5: \"H5\",\n\t\t\t\t\t    wechat: \"公众号\",\n\t\t\t\t\t    routine: \"小程序\",\n\t\t\t\t\t    pc: \"PC\",\n\t\t\t\t\t  };\n\t\t\t\t\t  return statusMap[value];\n\t\t\t\t\t},\n\t\t\t\t},\n        data() {\n            return {\n                change: false, //模态框显示隐藏\n                activeUserInfo: '',\n                pickerVisible: false, //分组选择\n                groupList: [], //分组\n                labelList: [] //标签\n            }\n        },\n        mounted() {\n            this.getGroup();\n            this.getUserInfo();\n        },\n        methods: {\n            //获取用户标签\n            getList(){\n                userLabel(this.$route.params.uid).then(res=>{\n                    this.labelList =res.data || [];\n                    if(this.labelList.length){\n                        this.change = true;\n                    }else{\n                        this.$dialog.error('暂无标签');\n                    }\n                }).catch(err => {\n                    this.$dialog.error(err.msg);\n                })\n            },\n            //获取用户详情\n            getUserInfo(){\n                userInfo(this.$route.params.uid).then(res=>{\n                    this.activeUserInfo = res.data;\n                }).catch(err => {\n                    this.$dialog.error(err.msg);\n                })\n            },\n            //获取用户分组\n            getGroup(){\n                let obj = {\n                    id: 0,\n                    group_name: \"无\"\n                }\n                userGroupApi().then(res=>{\n                    res.data.unshift(obj)\n                    let tdata = []\n                    res.data.map(item => {\n                        tdata.push({\n                            label: item.group_name,\n                            value: item.id\n                        })\n                    });\n                    this.groupList = [tdata];\n                }).catch(err => {\n                    this.$dialog.error(err.msg);\n                })\n            },\n            editLabel(){\n                this.change = false;\n                this.getUserInfo();\n            },\n            onShowLabel() {\n                this.getList();\n            },\n            showName(){\n                this.pickerVisible=true;\n            },\n            cancel() {},\n            // 选择分组\n            confirm(res) {\n                putGroupApi(this.$route.params.uid, res[0].value).then(res=>{\n                    this.$Message.success(res.msg)\n                    this.getUserInfo();\n                }).catch(err => {\n                    this.$dialog.error(err.msg);\n                })\n            },\n            closeChange(msg){\n                this.change = msg;\n            },\n        }\n    }\n",null]}