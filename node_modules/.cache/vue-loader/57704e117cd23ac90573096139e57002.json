{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/kefu/components/PriceChange.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/kefu/components/PriceChange.vue","mtime":1640264908000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import {required, num} from \"@/utils/validate\";\n    import {validatorDefaultCatch} from \"@/libs/dialog\";\n    import { orderRemark, editPriceApi, orderRefundApi, putRefund } from '@/api/kefu';\n    export default {\n        name: \"PriceChange\",\n        components: {},\n        props: {\n            change: Boolean,\n            orderInfo: {\n                type: Object,\n                default: null\n            },\n            status: {\n                type: Number,\n                default: 0\n            }\n        },\n        data: function () {\n            return {\n                focus: false,\n                price: 0,\n                refund_price: 0,\n                remark: \"\"\n            };\n        },\n        watch: {\n            orderInfo: function () {\n                this.price = this.orderInfo.pay_price;\n                this.refund_price = this.orderInfo.pay_price;\n                this.remark = this.orderInfo.remark;\n            }\n        },\n        methods: {\n            priceChange: function () {\n                this.focus = true;\n            },\n            close: function () {\n                this.price = this.orderInfo.pay_price;\n                this.$emit(\"closeChange\", false);\n            },\n            save() {\n                this.savePrice({\n                    price: this.price,\n                    refund_price: this.refund_price,\n                    type: 1,\n                    remark: this.remark,\n                    id: this.orderInfo.id,\n                    order_id: this.orderInfo.order_id\n                })\n            },\n            async savePrice(opt) {\n                let that = this,\n                    data = {},\n                    price = opt.price,\n                    refund_price = opt.refund_price,\n                    refund_status = that.orderInfo.refund_status,\n                    remark = opt.remark;\n                if (that.status == 0) {\n                    try {\n                        await this.$validator({\n                            price: [\n                                required(required.message(\"金额\")),\n                                num(num.message(\"金额\"))\n                            ]\n                        }).validate({price});\n                    } catch (e) {\n                        return validatorDefaultCatch(e);\n                    }\n                    data.total_price = this.orderInfo.total_price\n                    data.total_postage = this.orderInfo.total_price\n                    data.pay_postage = this.orderInfo.pay_postage\n                    data.gain_integral = this.orderInfo.gain_integral\n                    data.pay_price = opt.price;\n                    data.order_id = opt.order_id;\n                    editPriceApi(opt.id, data).then(() => {\n                        this.$emit(\"closechange\", false);\n                        that.$dialog.success(\"改价成功\");\n                    }).catch((error) => {\n                        that.$dialog.error(error.msg);\n                    });\n                } else if (that.status == 2) {\n                    try {\n                        await this.$validator({\n                            refund_price: [\n                                required(required.message(\"金额\")),\n                                num(num.message(\"金额\"))\n                            ]\n                        }).validate({refund_price});\n                    } catch (e) {\n                        return validatorDefaultCatch(e);\n                    }\n\t\t\t\t\t\t\t\t\t\t\n                    data.refund_price = parseFloat(opt.refund_price);\n                    data.type = opt.type;\n\t\t\t\t\t\t\t\t\t\tif(data.refund_price<=0){\n\t\t\t\t\t\t\t\t\t\t\treturn that.$dialog.error('请输入退款金额');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif(data.refund_price > parseFloat(that.orderInfo.pay_price)){\n\t\t\t\t\t\t\t\t\t\t\treturn that.$dialog.error('退款应小于支付金额');\n\t\t\t\t\t\t\t\t\t\t}\n                    // data.order_id = opt.order_id;\n                    putRefund(opt.id,data).then(\n                        res => {\n                            this.$emit(\"closechange\", false);\n                            that.$dialog.success('操作成功');\n                        },\n                        err => {\n                            this.$emit(\"closechange\", false);\n                            that.$dialog.error(err.msg);\n                        }\n                    );\n                } else if(that.status == 1) {\n                    try {\n                        await this.$validator({\n                            remark: [required(required.message(\"备注\"))]\n                        }).validate({remark});\n                    } catch (e) {\n                        return validatorDefaultCatch(e);\n                    }\n                    data.remark = remark;\n                    data.order_id = opt.order_id;\n                    orderRemark(data).then(\n                        res => {\n                            this.$emit(\"closechange\", false);\n                            that.$dialog.success('提交成功');\n                        },\n                        err => {\n                            this.$emit(\"closechange\", false);\n                            that.$dialog.error(err.msg);\n                        }\n                    );\n                }\n            },\n            refuse () {\n                this.savePrice({\n                    price: this.price,\n                    refund_price: this.refund_price,\n                    type: 2,\n                    remark: this.remark,\n                    id: this.orderInfo.id,\n                    order_id: this.orderInfo.order_id\n                })\n            }\n        }\n    };\n",null]}