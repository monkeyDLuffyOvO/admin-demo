{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/setting/membershipLevel/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/setting/membershipLevel/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\n// import createLevel from \"./components/createLevel\";\nimport {\n  membershipDataAddApi,\n  membershipDataListApi,\n  membershipDataEditApi,\n  membershipSetApi,\n  levelTaskSetApi,\n  levelTaskListDataAddApi,\n  levelTaskDataEditApi,\n  levelTaskDataAddApi,\n} from \"@/api/membershipLevel\";\nexport default {\n  name: \"list\",\n  // components: { createLevel },\n  data() {\n    return {\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      modal1: false,\n      modal2: false,\n      formValidate: {\n        status: \"\",\n        page: 1,\n        limit: 20,\n        gid: 0,\n      },\n      taskData: {\n        keyword: \"\",\n        page: 1,\n        limit: 20,\n        status: \"\",\n      },\n      total: 0,\n      taskTotal: 0,\n      tabList: [],\n      taskTabList: [],\n      columns1: [\n        {\n          key: \"id\",\n          width: 80,\n          title: \"ID\",\n        },\n        {\n          slot: \"image\",\n          minWidth: 100,\n          title: \"背景图\",\n        },\n        {\n          key: \"name\",\n          minWidth: 100,\n          title: \"名称\",\n        },\n        {\n          key: \"grade\",\n          minWidth: 80,\n          title: \"等级\",\n        },\n        {\n          key: \"one_brokerage\",\n          minWidth: 120,\n          title: \"一级返佣上浮比例(%)\",\n        },\n        {\n          key: \"two_brokerage\",\n          minWidth: 120,\n          title: \"二级返佣上浮比例(%)\",\n        },\n        {\n          slot: \"status\",\n          minWidth: 80,\n          title: \"是否显示\",\n        },\n        {\n          fixed: \"right\",\n          minWidth: 160,\n          slot: \"action\",\n          title: \"操作\",\n        },\n      ],\n      columns2: [\n        {\n          key: \"id\",\n          minWidth: 35,\n          title: \"ID\",\n        },\n        {\n          key: \"name\",\n          minWidth: 35,\n          title: \"名称\",\n        },\n        {\n          key: \"type_name\",\n          minWidth: 35,\n          title: \"任务类型\",\n        },\n        {\n          key: \"number\",\n          minWidth: 35,\n          title: \"限定数量\",\n        },\n        {\n          slot: \"status\",\n          minWidth: 35,\n          title: \"是否显示\",\n        },\n        {\n          key: \"sort\",\n          minWidth: 35,\n          title: \"排序\",\n        },\n        {\n          // fixed: \"right\",\n          minWidth: 120,\n          slot: \"action\",\n          title: \"操作\",\n        },\n      ],\n      FromData: null,\n      loading: false,\n      taskLoading: false,\n      titleType: \"group\",\n      groupAll: [],\n      theme3: \"light\",\n      labelSort: [],\n      sortName: null,\n      current: 0,\n      model1: \"\",\n      value1: \"\",\n    };\n  },\n  computed: {\n    ...mapState(\"admin/layout\", [\"isMobile\"]),\n    labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    },\n  },\n  watch: {\n    $route(to, from) {\n      if (this.$route.params.id) {\n      } else {\n      }\n    },\n  },\n  mounted() {\n    this.getList();\n  },\n  methods: {\n    bindMenuItem(name, index) {\n      this.current = index;\n      this.formValidate.gid = name.id;\n      this.getListHeader();\n      this.getList();\n    },\n    // 列表\n    getList() {\n      this.loading = true;\n      membershipDataListApi(this.formValidate)\n        .then(async (res) => {\n          let data = res.data;\n          this.tabList = data.list;\n          this.total = data.count;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    // 列表\n    getTaskList() {\n      this.taskLoading = true;\n      levelTaskListDataAddApi(this.taskData)\n        .then(async (res) => {\n          let data = res.data;\n          this.taskTabList = data.list;\n          this.taskTotal = data.count;\n          this.taskLoading = false;\n        })\n        .catch((res) => {\n          this.taskLoading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    pageChange(index) {\n      this.formValidate.page = index;\n      this.getList();\n    },\n    pageTaskChange(index) {\n      this.taskData.page = index;\n      this.getList();\n    },\n    // 表格搜索\n    search() {\n      this.formValidate.page = 1;\n      this.getList();\n    },\n    searchTask() {\n      this.taskData.page = 1;\n      this.getTaskList();\n    },\n    // 添加表单\n    groupAdd() {\n      this.$modalForm(\n        membershipDataAddApi({}, \"/agent/level/create\")\n      ).then(() => this.getList());\n    },\n    taskAdd() {\n      this.$modalForm(\n        levelTaskDataAddApi(\n          {},\n          \"/agent/level_task/create?level_id=\" + this.taskData.id\n        )\n      ).then(() => this.getTaskList());\n    },\n    // 修改是否显示\n    onchangeIsShow(row) {\n      membershipSetApi(`agent/level/set_status/${row.id}/${row.status}`)\n        .then(async (res) => {\n          this.$Message.success(res.msg);\n          this.getList();\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 修改是否显示\n    onchangeTaskIsShow(row) {\n      levelTaskSetApi(`agent/level_task/set_status/${row.id}/${row.status}`)\n        .then(async (res) => {\n          this.$Message.success(res.msg);\n          this.getList();\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    //添加等级任务\n    addTask(row) {\n      this.id = row.id;\n      this.modal2 = true;\n      this.taskData.id = row.id;\n      this.getTaskList();\n    },\n    // 编辑\n    edit(row) {\n      let data = {\n        gid: row.gid,\n      };\n      this.$modalForm(\n        membershipDataEditApi(data, `agent/level/${row.id}/edit`)\n      ).then(() => this.getList());\n    },\n    // 编辑\n    editTask(row) {\n      let data = {\n        gid: row.gid,\n      };\n      this.$modalForm(\n        levelTaskDataEditApi(data, `agent/level_task/${row.id}/edit`)\n      ).then(() => this.getTaskList());\n    },\n    // 删除\n    del(row, tit, num) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `agent/level/${row.id}`,\n        method: \"DELETE\",\n        ids: \"\",\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.tabList.splice(num, 1);\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 删除\n    delTask(row, tit, num) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `agent/level_task/${row.id}`,\n        method: \"DELETE\",\n        ids: \"\",\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.taskTabList.splice(num, 1);\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n  },\n};\n",null]}