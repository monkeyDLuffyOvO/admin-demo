{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/marketing/storeCouponIssue/create.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/marketing/storeCouponIssue/create.vue","mtime":1652232731000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\nimport goodsList from \"@/components/goodsList/index\";\nimport {\n  couponCategoryApi,\n  couponSaveApi,\n  couponDetailApi,\n} from \"@/api/marketing\";\n// import { formatDate } from '@/utils/validate';\nexport default {\n  name: \"storeCouponCreate\",\n  components: {\n    goodsList,\n  },\n  data() {\n    return {\n      couponType: [\n        { name: \"满减券\", title: \"满N元减N元\", id: 1 },\n        { name: \"折扣券\", title: \"满N元打N折\", id: 2 },\n      ],\n      disabled: false,\n      formData: {\n        coupon_title: \"\",\n        coupon_price: 0,\n        type: 0,\n        use_min_price: 0,\n        coupon_time: 1,\n        start_use_time: 0,\n        end_use_time: 0,\n        start_time: 0,\n        end_time: 0,\n        receive_type: 1,\n        is_permanent: 1,\n        total_count: 1,\n        sort: 0,\n        status: 1,\n        product_id: \"\",\n        category_id: [],\n        coupon_type: 1,\n      },\n      categoryList: [],\n      productList: [],\n      isMinPrice: 0,\n      isCouponTime: 1,\n      isReceiveTime: 0,\n      modals: false,\n      datetime1: [],\n      datetime2: [],\n    };\n  },\n  computed: {\n    ...mapState(\"admin/layout\", [\"isMobile\", \"menuCollapse\"]),\n  },\n  created() {\n    this.getCategoryList();\n    if (this.$route.params.id) {\n      this.getCouponDetail();\n    }\n  },\n  methods: {\n    couponTypeTap(item) {\n      this.formData.coupon_price = 0;\n      this.formData.coupon_type = item.id;\n    },\n    // 品类\n    getCategoryList() {\n      couponCategoryApi(1).then(async (res) => {\n        res.data.forEach((val) => {\n          val.cate_name = `${val.html}${val.cate_name}`;\n        });\n        this.categoryList = res.data;\n      });\n    },\n    // 优惠券\n    getCouponDetail() {\n      couponDetailApi(this.$route.params.id)\n        .then((res) => {\n          let data = res.data;\n          this.formData.coupon_title = data.coupon_title;\n          this.formData.coupon_type = data.coupon_type;\n          this.formData.type = data.type;\n          this.formData.category_id = data.category_id;\n          this.formData.coupon_price = parseFloat(data.coupon_price);\n          this.formData.use_min_price = parseFloat(data.use_min_price);\n          this.formData.coupon_time = data.coupon_time;\n          this.formData.receive_type = data.receive_type;\n          this.formData.is_permanent = data.is_permanent;\n          this.formData.status = data.status;\n          this.formData.product_id = data.product_id;\n          this.formData.start_time = data.start_time;\n          this.formData.end_time = data.end_time;\n          this.formData.total_count = data.total_count;\n          this.formData.sort = data.sort;\n          if (\"productInfo\" in data) {\n            this.productList = data.productInfo;\n          }\n          if (!data.coupon_time) {\n            this.isCouponTime = 0;\n            this.datetime1 = [\n              data.start_use_time * 1000,\n              data.end_use_time * 1000,\n            ];\n            this.formData.start_use_time = this.makeDate(\n              data.start_use_time * 1000\n            );\n            this.formData.end_use_time = this.makeDate(\n              data.end_use_time * 1000\n            );\n          }\n          if (data.start_time) {\n            this.isReceiveTime = 1;\n            this.datetime2 = [data.start_time * 1000, data.end_time * 1000];\n            this.formData.start_time = this.makeDate(data.start_time * 1000);\n            this.formData.end_time = this.makeDate(data.end_time * 1000);\n          }\n          if (data.use_min_price !== \"0.00\") {\n            this.isMinPrice = 1;\n          }\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n    makeDate(data) {\n      let date = new Date(data);\n      let YY = date.getFullYear() + \"-\";\n      let MM =\n        (date.getMonth() + 1 < 10\n          ? \"0\" + (date.getMonth() + 1)\n          : date.getMonth() + 1) + \"-\";\n      let DD = date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\n      let hh =\n        (date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours()) + \":\";\n      let mm =\n        (date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes()) +\n        \":\";\n      let ss =\n        date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds();\n      return YY + MM + DD + \" \" + hh + mm + ss;\n    },\n    // 创建\n    save() {\n      if (!this.formData.coupon_title) {\n        return this.$Message.error(\"请输入优惠券名称\");\n      }\n      if (this.formData.type === 2) {\n        if (!this.formData.product_id) {\n          return this.$Message.error(\"请选择商品\");\n        }\n      }\n      if (this.formData.type === 1) {\n        if (!this.formData.category_id) {\n          return this.$Message.error(\"请选择品类\");\n        }\n      }\n      if (this.formData.coupon_price <= 0) {\n        return this.$Message.error(\"优惠券面值不能小于0\");\n      }\n      if (!this.isMinPrice) {\n        this.formData.use_min_price = 0;\n      } else {\n        if (this.formData.use_min_price < 1) {\n          return this.$Message.error(\"优惠券最低消费不能小于0\");\n        }\n      }\n      if (this.isCouponTime) {\n        this.formData.start_use_time = 0;\n        this.formData.end_use_time = 0;\n        if (this.formData.coupon_time < 1) {\n          return this.$Message.error(\"使用有效期限不能小于1天\");\n        }\n      } else {\n        this.formData.coupon_time = 0;\n        if (!this.formData.start_use_time) {\n          return this.$Message.error(\"请选择使用有效期限\");\n        }\n      }\n      if (this.isReceiveTime) {\n        if (!this.formData.start_time) {\n          return this.$Message.error(\"请选择领取时间\");\n        }\n      } else {\n        this.formData.start_time = 0;\n        this.formData.end_time = 0;\n      }\n      if (this.formData.is_permanent) {\n        this.formData.total_count = 0;\n      } else {\n        if (this.formData.total_count < 1) {\n          return this.$Message.error(\"发布数量不能小于1\");\n        }\n      }\n      this.disabled = false;\n      couponSaveApi(this.formData)\n        .then((res) => {\n          this.disabled = true;\n          this.$Message.success(res.msg);\n          setTimeout(() => {\n            this.$router.push({\n              path: \"/admin/marketing/store_coupon_issue/index\",\n            });\n          }, 1000);\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n    // 使用有效期--时间段\n    dateChange(time) {\n      this.formData.start_use_time = time[0];\n      this.formData.end_use_time = time[1];\n    },\n    // 限时\n    timeChange(time) {\n      this.formData.start_time = time[0];\n      this.formData.end_time = time[1];\n    },\n    //对象数组去重；\n    unique(arr) {\n      const res = new Map();\n      return arr.filter(\n        (arr) => !res.has(arr.product_id) && res.set(arr.product_id, 1)\n      );\n    },\n    // 选择的商品\n    getProductId(productList) {\n      this.modals = false;\n      this.productList = this.unique(this.productList.concat(productList));\n      this.formData.product_id = \"\";\n      this.productList.forEach((value) => {\n        if (this.formData.product_id) {\n          this.formData.product_id += `,${value.product_id}`;\n        } else {\n          this.formData.product_id += `${value.product_id}`;\n        }\n      });\n    },\n    cancel() {\n      this.modals = false;\n    },\n    // 删除商品\n    remove(productId) {\n      for (let index = 0; index < this.productList.length; index++) {\n        if (this.productList[index].product_id == productId) {\n          this.productList.splice(index, 1);\n        }\n      }\n      this.formData.product_id = \"\";\n      this.productList.forEach((value) => {\n        if (this.formData.product_id) {\n          this.formData.product_id += `,${value.product_id}`;\n        } else {\n          this.formData.product_id += `${value.product_id}`;\n        }\n      });\n    },\n  },\n};\n",null]}