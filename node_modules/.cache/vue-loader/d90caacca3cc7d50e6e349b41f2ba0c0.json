{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/product/productList/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/product/productList/index.vue","mtime":1662448309000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport goodsDetail from \"@/pages/kefu/pc/components/goods_detail\";\nimport stockEdit from \"../components/stockEdit.vue\";\nimport expandRow from \"./tableExpand.vue\";\nimport attribute from \"./attribute\";\nimport toExcel from \"../../../utils/Excel.js\";\nimport { mapState } from \"vuex\";\nimport taoBao from \"./taoBao\";\nimport dayjs from \"dayjs\";\nimport Setting from \"@/setting\";\nimport util from \"@/libs/util\";\nimport { staffListInfo } from \"@/api/store\";\nimport {\n  getGoodHeade,\n  getGoods,\n  PostgoodsIsShow,\n  treeListApi,\n  productShowApi,\n  productUnshowApi,\n  storeProductApi,\n  cascaderListApi,\n  productCache,\n  cacheDelete,\n  setDeliveryType,\n  productReviewApi,\n  forcedRemovalApi\n} from \"@/api/product\";\nimport { getSupplierList } from \"@/api/supplier\";\nimport { erpConfig, erpProduct } from \"@/api/erp\";\nimport exportExcel from \"@/utils/newToExcel.js\";\n\nexport default {\n  name: \"product_productList\",\n  components: { expandRow, attribute, taoBao, goodsDetail, stockEdit },\n  filters: {\n    timeFormat: (value) => dayjs(value * 1000).format(\"YYYY-MM-DD HH:mm\"),\n  },\n  computed: {\n    ...mapState(\"admin/layout\", [\"isMobile\"]),\n    ...mapState(\"admin/userLevel\", [\"categoryId\"]),\n    labelWidth() {\n      return this.isMobile ? undefined : 75;\n    },\n    labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    },\n  },\n  data() {\n    return {\n      supplierList: [],\n      header: {}, //请求头部信息\n      erpUrl: Setting.apiBaseURL + \"/file/upload/1\",\n      template: false,\n      modals: false,\n      modalsType: false,\n      delivery_type: [],\n      grid: {\n        xl: 7,\n        lg: 8,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      // 订单列表\n      orderData: {\n        page: 1,\n        limit: 10,\n        type: 6,\n        status: \"\",\n        time: \"\",\n        real_name: \"\",\n        store_id: \"\",\n      },\n      artFrom: {\n        page: 1,\n        limit: 15,\n        cate_id: \"\",\n        type: \"1\",\n        store_name: \"\",\n        excel: 0,\n        supplier_id: \"\",\n        store_id:\"\"\n      },\n      list: [],\n      tableList: [],\n      headeNum: [],\n      treeSelect: [],\n      isProductBox: false,\n      loading: false,\n      columns: [\n        {\n          type: \"expand\",\n          width: 50,\n          render: (h, params) => {\n            return h(expandRow, {\n              props: {\n                row: params.row,\n              },\n            });\n          },\n        },\n        {\n          width: 60,\n          align: \"center\",\n          renderHeader: (h, params) => {\n            return h(\n              \"div\",\n              {\n                class: {\n                  \"select-panel\": true,\n                },\n                on: {\n                  mouseenter: (e) => {\n                    this.display = \"block\";\n                  },\n                  mouseleave: (e) => {\n                    this.display = \"none\";\n                  },\n                },\n              },\n              [\n                h(\"Checkbox\", {\n                  props: {\n                    value: this.checkBox,\n                  },\n                  on: {\n                    \"on-change\": (e) => {\n                      this.checkBox = e;\n                      this.$refs.table.selectAll(this.checkBox);\n                      this.isAll = e ? 0 : -1;\n                    },\n                  },\n                }),\n                h(\n                  \"div\",\n                  {\n                    style: {\n                      position: \"absolute\",\n                      top: 0,\n                      zIndex: 2,\n                      display: this.display,\n                      width: \"80px\",\n                      padding: \"5px\",\n                      borderRadius: \"4px\",\n                      backgroundColor: \"#fff\",\n                      boxShadow: \"0 0px 5px rgba(0, 0, 0, 0.2)\",\n                      transform: \"translateX(25%)\",\n                    },\n                  },\n                  [\n                    h(\n                      \"div\",\n                      {\n                        class: {\n                          \"select-item\": true,\n                          on: this.isAll === 0,\n                        },\n                        style: {\n                          padding: \"1px 6px\",\n                          cursor: \"pointer\",\n                          height: \"50%\",\n                        },\n                        on: {\n                          click: (e) => {\n                            if (this.isAll === 0) {\n                              this.isAll = -1;\n                              this.checkBox = false;\n                              this.$refs.table.selectAll(this.checkBox);\n                            } else {\n                              this.isAll = 0;\n                              if (!this.formSelection.length) {\n                                this.checkBox = true;\n                                this.$refs.table.selectAll(this.checkBox);\n                              }\n                            }\n                            this.display = \"none\";\n                          },\n                        },\n                      }\n                      // \"选择当页\"\n                    ),\n                    h(\n                      \"div\",\n                      {\n                        class: {\n                          \"select-item\": true,\n                          on: this.isAll === 1,\n                        },\n                        style: {\n                          padding: \"4px\",\n                          cursor: \"pointer\",\n                        },\n                        on: {\n                          click: (e) => {\n                            if (this.isAll === 1) {\n                              this.isAll = -1;\n                              this.checkBox = false;\n                            } else {\n                              this.isAll = 1;\n                              this.checkBox = true;\n                            }\n                            this.$refs.table.selectAll(this.checkBox);\n                            this.display = \"none\";\n                          },\n                        },\n                      },\n                      \"选择全部\"\n                    ),\n                  ]\n                ),\n              ]\n            );\n          },\n          render: (h, params) => {\n            return h(\"Checkbox\", {\n              props: {\n                value: params.row.checkBox,\n              },\n              on: {\n                \"on-change\": (e) => {\n                  if (e) {\n                    this.formSelection.push(params.row);\n                  } else {\n                    this.checkBox = false;\n                    this.formSelection.forEach((item, index) => {\n                      if (item.id === params.row.id) {\n                        this.formSelection.splice(index, 1);\n                      }\n                    });\n                  }\n                  this.ids = this.formSelection.map((item) => item.id);\n                  this.isAll = this.formSelection.length ? 0 : -1;\n                  // this.responseData为查询出的结果数据\n                  // params.row.checkBox = e;\n                  params.row.checkBox = e;\n                  this.tableList[params.index].checkBox = e;\n                },\n              },\n              ref: \"checkbox\",\n              refInFor: true,\n            });\n          },\n        },\n        {\n          title: \"商品ID\",\n          slot: \"id\",\n          width: 80,\n        },\n        {\n          title: \"商品图\",\n          slot: \"image\",\n          width: 60,\n        },\n        {\n          title: \"商品名称\",\n          slot: \"store_name\",\n          minWidth: 250,\n        },\n        {\n          title: \"商品来源\",\n          key: \"plate_name\",\n          minWidth: 100,\n        },\n        {\n          title: \"商品类型\",\n          slot: \"product_type\",\n          minWidth: 100,\n        },\n        {\n          title: \"商品售价\",\n          key: \"price\",\n          minWidth: 90,\n        },\n        {\n          title: \"销量\",\n          key: \"sales\",\n          minWidth: 90,\n        },\n        {\n          title: \"库存\",\n          key: \"stock\",\n          minWidth: 80,\n        },\n        {\n          title: \"排序\",\n          key: \"sort\",\n          minWidth: 70,\n        },\n        {\n          title: \"状态\",\n          slot: \"state\",\n          width: 120,\n        },\n        {\n          title: \"操作\",\n          slot: \"action\",\n          fixed: \"right\",\n          minWidth: 150,\n        },\n      ],\n      data: [],\n      total: 0,\n      props: { emitPath: false, multiple: true },\n      attrTemplate: false,\n      ids: [],\n      display: \"none\",\n      formSelection: [],\n      selectionCopy: [],\n      checkBox: false,\n      isAll: -1,\n      data1: [],\n      value1: [],\n      alertShow: false,\n      goodsId: \"\",\n      columns3: [],\n      openErp: false,\n      staffData:[]\n      // activeKey:1\n    };\n  },\n  watch: {\n    $route() {\n      if (this.$route.fullPath === \"/admin/product/product_list?type=5\") {\n        this.getPath();\n      }\n    },\n    formSelection(value) {\n      // this.checkBox = value.length === this.tableList.length;\n    },\n    tableList: {\n      deep: true,\n      handler(value) {\n        value.forEach((item) => {\n          this.formSelection.forEach((itm) => {\n            if (itm.id === item.id) {\n              item.checkBox = true;\n            }\n          });\n        });\n        const arr = this.tableList.filter((item) => item.checkBox);\n        if (this.tableList.length) {\n          this.checkBox = this.tableList.length === arr.length;\n        } else {\n          this.checkBox = false;\n        }\n      },\n    },\n  },\n  created() {\n    // this.artFrom.type = this.$route.query.key || 1\n    // this.columns2 = [...this.columns];\n    // if (name !== '1' && name !== '2') {\n    //     this.columns2.shift({\n    //         type: 'selection',\n    //         width: 60,\n    //         align: 'center'\n    //     })\n    // }\n    this.getToken();\n    this.staffList();\n    productCache()\n      .then((res) => {\n        const info = res.data.info;\n        if (!Array.isArray(info)) {\n          this.alertShow = true;\n        }\n      })\n      .catch((err) => {\n        this.$Message.error(err.msg);\n      });\n    this.getErpConfig();\n  },\n  mounted() {\n    this.goodHeade();\n    this.goodsCategory();\n    this.getSupplierList();\n    if (this.$route.fullPath === \"/admin/product/product_list?type=5\") {\n      this.getPath();\n    } else {\n      this.getDataList();\n    }\n    // this.getDataList();\n  },\n  activated() {\n    this.getDataList();\n  },\n  beforeRouteEnter(to, from, next) {\n    next((vm) => {\n      if (from.path.indexOf(\"/admin/product/add_product\") != -1) {\n        document.documentElement.scrollTop = to.meta.scollTopPosition;\n      }\n    });\n  },\n  beforeRouteLeave(to, from, next) {\n    if (from.meta.keepAlive) {\n      from.meta.scollTopPosition = document.documentElement.scrollTop;\n    }\n    next();\n  },\n  methods: {\n    //获取供应商列表；\n    getSupplierList() {\n      getSupplierList()\n        .then(async (res) => {\n          this.supplierList = res.data;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 审核\n    auditGoods (row) {\n        this.$modalForm(productReviewApi(row.id)).then(() => {\n          this.getDataList();\n          this.goodHeade();\n        })\n    },\n    // 强制下架\n    forcedRemoval (row) {\n      console.log('强制下架');\n        this.$modalForm(forcedRemovalApi(row.id)).then(() => this.getDataList())\n    },\n    frontDownload() {\n      let a = document.createElement(\"a\"); //创建一个<a></a>标签\n      a.href = \"/statics/ERP商品导入模板.xlsx\"; // 给a标签的href属性值加上地址，注意，这里是绝对路径，不用加 点.\n      a.download = \"ERP商品导入模板.xlsx\"; //设置下载文件文件名，这里加上.xlsx指定文件类型，pdf文件就指定.fpd即可\n      a.style.display = \"none\"; // 障眼法藏起来a标签\n      document.body.appendChild(a); // 将a标签追加到文档对象中\n      a.click(); // 模拟点击了a标签，会触发a标签的href的读取，浏览器就会自动下载了\n      a.remove(); // 一次性的，用完就删除a标签\n    },\n    handleFormatError(file) {\n      return this.$Message.error(\"必须上传xlsx格式文件\");\n    },\n    // 上传头部token\n    getToken() {\n      this.header[\"Authori-zation\"] = \"Bearer \" + util.cookies.get(\"token\");\n    },\n    upFile(res) {\n      erpProduct({ path: res.data.src })\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.getDataList();\n        })\n        .catch((err) => {\n          return this.$Message.error(err.msg);\n        });\n    },\n    beforeUpload() {\n      let promise = new Promise((resolve) => {\n        this.$nextTick(function () {\n          resolve(true);\n        });\n      });\n      return promise;\n    },\n    //erp配置\n    getErpConfig() {\n      erpConfig()\n        .then((res) => {\n          this.openErp = res.data.open_erp;\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n    stockChange(stock) {\n      this.tableList.forEach((item) => {\n        if (this.goodsId == item.id) {\n          item.stock = stock;\n        }\n      });\n    },\n    // 库存管理\n    stockControl(row) {\n      this.goodsId = row.id;\n      this.$refs.stock.modals = true;\n      this.$refs.stock.productAttrs(row);\n    },\n    cancelDelivery() {\n      this.modalsType = false;\n      this.delivery_type = [];\n      // this.isAll = 0;\n      // this.$refs.table.selectAll(this.isAll);\n      // this.getDataList();\n    },\n    deliveryType() {\n      this.modalsType = true;\n    },\n    putDelivery() {\n      if (this.delivery_type.length === 0) {\n        this.$Message.error(\"请选择要配送的商品\");\n      } else {\n        let data = {\n          all: this.isAll,\n          delivery_type: this.delivery_type,\n        };\n        if (this.isAll === 0) {\n          data.ids = this.ids;\n        }\n        setDeliveryType(data)\n          .then((res) => {\n            this.$Message.success(res.msg);\n            this.modalsType = false;\n            this.delivery_type = [];\n            this.isAll = 0;\n            // this.$refs.table.selectAll(this.isAll);\n            this.getDataList();\n          })\n          .catch((res) => {\n            this.$Message.error(res.msg);\n          });\n      }\n    },\n    // 商品详情\n    lookGoods(id) {\n      this.goodsId = id;\n      this.isProductBox = true;\n    },\n    closeAlert() {\n      cacheDelete()\n        .then((res) => {\n          this.$Message.success(res.msg);\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n    selectAll(row) {\n      if (row.length) {\n        this.formSelection = row;\n        this.selectionCopy = row;\n      }\n      this.selectionCopy.forEach((item, index) => {\n        item.checkBox = this.checkBox;\n        this.$set(this.tableList, index, item);\n      });\n    },\n    getPath() {\n      this.columns2 = [...this.columns];\n      if (name !== \"1\" && name !== \"2\") {\n        this.columns2.shift();\n      }\n      this.artFrom.page = 1;\n      this.artFrom.type = this.$route.query.type.toString();\n      this.getDataList();\n    },\n    changeMenu(row, name, index) {\n      switch (name) {\n        case \"1\":\n          this.$router.push({ path: \"/admin/product/product_reply/\" + row.id });\n          break;\n        case \"2\":\n          this.del(row, \"恢复商品\", index);\n          break;\n        case \"3\":\n          this.del(row, \"移入回收站\", index);\n          break;\n        case \"4\":\n          this.stockControl(row);\n          break;\n        case \"5\":\n          this.$modalForm(forcedRemovalApi(row.id)).then(() => {\n            this.getDataList();\n            this.goodHeade();\n            })\n            break;\n      }\n    },\n    // 数据导出；\n    async exports() {\n      let [th, filekey, data, fileName] = [[], [], [], \"\"];\n      let formValidate = this.artFrom;\n      let excelData = {};\n      if (this.isAll === 0) {\n        excelData.ids = this.ids.join();\n      } else if (this.isAll === 1) {\n        excelData.cate_id = formValidate.cate_id;\n        excelData.type = formValidate.type;\n        excelData.store_name = formValidate.store_name;\n      }\n      excelData.page = 1;\n      for (let i = 0; i < excelData.page + 1; i++) {\n        let lebData = await this.getExcelData(excelData);\n        if (!fileName) fileName = lebData.filename;\n        if (!filekey.length) {\n          filekey = lebData.filekey;\n        }\n        if (!th.length) th = lebData.header;\n        if (lebData.export.length) {\n          data = data.concat(lebData.export);\n          excelData.page++;\n        } else {\n          exportExcel(th, filekey, fileName, data);\n          return;\n        }\n      }\n    },\n    getExcelData(excelData) {\n      return new Promise((resolve, reject) => {\n        storeProductApi(excelData).then((res) => {\n          return resolve(res.data);\n        });\n      });\n    },\n    changeTemplate(e) {\n      // this.template = e;\n    },\n    freight() {\n      this.$refs.template.isTemplate = true;\n    },\n    // 批量上架\n    onShelves() {\n      if (this.ids.length === 0) {\n        this.$Message.warning(\"请选择要上架的商品\");\n      } else {\n        let data = {\n          all: this.isAll,\n        };\n        if (this.isAll === 0) {\n          data.ids = this.ids;\n        } else if (this.isAll === 1) {\n          data.where = {\n            cate_id: this.artFrom.cate_id,\n            excel: this.artFrom.excel,\n            store_name: this.artFrom.store_name,\n            type: this.artFrom.type,\n          };\n        }\n        productShowApi(data)\n          .then((res) => {\n            this.$Message.success(res.msg);\n            this.goodHeade();\n            this.getDataList();\n          })\n          .catch((res) => {\n            this.$Message.error(res.msg);\n          });\n      }\n    },\n    // 批量下架\n    onDismount() {\n      if (this.ids.length === 0) {\n        this.$Message.warning(\"请选择要下架的商品\");\n      } else {\n        let data = {\n          all: this.isAll,\n        };\n        if (this.isAll === 0) {\n          data.ids = this.ids;\n        } else if (this.isAll === 1) {\n          data.where = {\n            cate_id: this.artFrom.cate_id,\n            excel: this.artFrom.excel,\n            store_name: this.artFrom.store_name,\n            type: this.artFrom.type,\n          };\n        }\n        productUnshowApi(data)\n          .then((res) => {\n            this.$Message.success(res.msg);\n            this.goodHeade();\n            this.getDataList();\n          })\n          .catch((res) => {\n            this.$Message.error(res.msg);\n          });\n      }\n    },\n    // 全选\n    onSelectTab(selection) {\n      this.formSelection = selection;\n      let data = [];\n      selection.map((item) => {\n        data.push(item.id);\n      });\n      this.ids = data;\n    },\n    // 添加淘宝商品成功\n    onClose() {\n      this.modals = false;\n    },\n    // 复制淘宝\n    onCopy() {\n      this.$router.push({\n        path: \"/admin/product/add_product\",\n        query: { type: -1 },\n      });\n      // this.modals = true;\n    },\n    // tab选择\n    onClickTab(name) {\n      this.artFrom.type = name;\n      this.columns2 = [...this.columns];\n      if (name !== \"1\" && name !== \"2\") {\n        this.columns2.shift();\n      }\n      let obj = [...this.columns];\n      obj.shift();\n      obj.splice(8, 1);\n      this.columns3 = obj;\n      this.checkBox = false;\n      this.artFrom.page = 1;\n      this.getDataList();\n    },\n    // 下拉树\n    handleCheckChange(data) {\n      let value = \"\";\n      let title = \"\";\n      this.list = [];\n      this.artFrom.cate_id = 0;\n      data.forEach((item, index) => {\n        value += `${item.id},`;\n        title += `${item.title},`;\n      });\n      value = value.substring(0, value.length - 1);\n      title = title.substring(0, title.length - 1);\n      this.list.push({\n        value,\n        title,\n      });\n      this.artFrom.cate_id = value;\n      this.getDataList();\n    },\n    // 获取商品表单头数量\n    goodHeade() {\n      let data = {\n        store_name: this.artFrom.store_name,\n        cate_id: this.artFrom.cate_id || \"\",\n        supplier_id: this.artFrom.supplier_id || \"\",\n        store_id: this.artFrom.store_id || \"\"\n      };\n      getGoodHeade(data)\n        .then((res) => {\n          this.headeNum = res.data.list;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 商品分类；\n    goodsCategory() {\n      // treeListApi(1).then(res => {\n      //     this.treeSelect = res.data;\n      // }).catch(res => {\n      //     this.$Message.error(res.msg);\n      // })\n      cascaderListApi(1)\n        .then((res) => {\n          this.data1 = res.data;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 商品列表；\n    getDataList() {\n      this.loading = true;\n      this.artFrom.cate_id = this.artFrom.cate_id || \"\";\n      getGoods(this.artFrom)\n        .then((res) => {\n          let data = res.data;\n          this.tableList = data.list.map((item) => {\n            if (this.isAll === 1) {\n              item.checkBox = true;\n            } else {\n              item.checkBox = false;\n            }\n            return item;\n          });\n          this.total = res.data.count;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    pageChange(status) {\n      this.artFrom.page = status;\n      this.getDataList();\n      this.$refs.table.clearCurrentRow();\n    },\n    cascaderSearchs(value, selectedData) {\n      this.artFrom.cate_id = value[value.length - 1];\n      this.userSearchs();\n    },\n    // 表格搜索\n    userSearchs() {\n      this.artFrom.page = 1;\n      this.formSelection = [];\n      this.goodHeade();\n      this.getDataList();\n    },\n    // 上下架\n    changeSwitch(row) {\n      PostgoodsIsShow(row.id, row.is_show)\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.goodHeade();\n          this.getDataList();\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n          this.goodHeade();\n          this.getDataList();\n        });\n    },\n    // 数据导出；\n    exportData: function () {\n      let th = [\n        \"商品名称\",\n        \"商品简介\",\n        \"商品分类\",\n        \"价格\",\n        \"库存\",\n        \"销量\",\n        \"收藏人数\",\n      ];\n      let filterVal = [\n        \"store_name\",\n        \"store_info\",\n        \"cate_name\",\n        \"price\",\n        \"stock\",\n        \"sales\",\n        \"collect\",\n      ];\n      this.where.page = \"nopage\";\n      getGoods(this.where).then((res) => {\n        let data = res.data.map((v) => filterVal.map((k) => v[k]));\n        let fileTime = Date.parse(new Date());\n        let [fileName, fileType, sheetName] = [\n          \"商户数据_\" + fileTime,\n          \"xlsx\",\n          \"商户数据\",\n        ];\n        toExcel({ th, data, fileName, fileType, sheetName });\n      });\n    },\n    // 属性弹出；\n    attrTap() {\n      this.attrTemplate = true;\n    },\n    changeTemplate(msg) {\n      this.attrTemplate = msg;\n    },\n    // 编辑\n    edit(row) {\n      this.$router.push({ path: \"/admin/product/add_product/\" + row.id });\n    },\n    // 确认\n    del(row, tit, num) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `product/product/${row.id}`,\n        method: \"DELETE\",\n        ids: \"\",\n        tips: \"确定要移入回收站吗？\",\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.tableList.splice(num, 1);\n          this.goodHeade();\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 删除成功\n    // submitModel () {\n    //     this.tableList.splice(this.delfromData.num, 1);\n    //     this.goodHeade();\n    // }\n    // 店员列表\n    staffList() {\n      staffListInfo()\n        .then((res) => {\n          this.staffData = res.data;\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n  },\n};\n",null]}