{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/marketing/storeDiscounts/create.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/marketing/storeDiscounts/create.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\nimport goodsList from \"@/components/goodsList/index\";\nimport uploadPictures from \"@/components/uploadPictures\";\nimport {\n  lotteryDetailApi,\n  discountsSave,\n  discountsGetDetails,\n} from \"@/api/discounts\"; //详情 创建 编辑\nimport { discountsFrom } from \"./formRule/discountsFrom\";\nimport {\n  // labelListApi,\n  generateIdGetAttrApi,\n  getProductAttr,\n} from \"@/api/product\";\nimport { productAttrsApi } from \"@/api/marketing\";\nimport { formatDate } from \"@/utils/validate\";\nimport userLabel from \"@/components/labelList\";\n\nexport default {\n  name: \"lotteryCreate\",\n  components: { goodsList, uploadPictures, userLabel },\n  data() {\n    return {\n\t\t\tdataLabel:[],\n\t\t\tlabelShow:false,\n      ggModel: false,\n      modals: false,\n      loading: false,\n      manyFormValidate: [],\n      selectProductAttrList: [],\n      header: [\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\",\n        },\n        {\n          title: \"图片\",\n          slot: \"image\",\n          width: 120,\n          align: \"center\",\n        },\n        {\n          title: \"规格\",\n          key: \"value\",\n          align: \"center\",\n          minWidth: 120,\n        },\n        {\n          title: \"售价\",\n          key: \"p_price\",\n          align: \"center\",\n          minWidth: 120,\n        },\n        {\n          title: \"优惠价\",\n          key: \"price\",\n          align: \"center\",\n          minWidth: 120,\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\"InputNumber\", {\n                props: {\n                  min: 0,\n                  // max: params.row.cart_num,\n                  value: params.row.price,\n                },\n                on: {\n                  \"on-change\": (e) => {\n                    params.row.price = e;\n                    this.manyFormValidate[params.index] = params.row;\n                    this.selectProductAttrList.forEach((v, index) => {\n                      if (v.value === params.row.value) {\n                        this.selectProductAttrList.splice(index, 1, params.row);\n                      }\n                    });\n                  },\n                },\n              }),\n            ]);\n          },\n        },\n      ],\n      // userLabelList: [], //用户标签列表\n      userLevelListApi: [], //用户等级列表\n      submitOpen: false,\n      spinShow: false,\n      addGoodsModel: false,\n      editData: {},\n      myConfig: {\n        autoHeightEnabled: false, // 编辑器不自动被内容撑高\n        initialFrameHeight: 500, // 初始容器高度\n        initialFrameWidth: \"100%\", // 初始容器宽度\n        UEDITOR_HOME_URL: \"/admin/UEditor/\",\n        serverUrl: \"\",\n      },\n      isChoice: \"单选\",\n      current: 0,\n      modalPic: false,\n      modal_loading: false,\n      images: [],\n      templateList: [\n        { id: 0, name: \"非付费会员\" },\n        { id: 1, name: \"付费会员\" },\n      ],\n      columns: [\n        {\n          title: \"商品名称\",\n          slot: \"store_name\",\n          width: 300,\n          align: \"center\",\n        },\n        {\n          title: \"参与规格\",\n          slot: \"attr\",\n          align: \"center\",\n          minWidth: 120,\n        },\n        {\n          title: \"操作\",\n          slot: \"setting\",\n          align: \"center\",\n          width: 180,\n        },\n      ],\n      goodsAddType: \"\",\n      specsMainData: [],\n      specsData: [],\n      formValidate: {\n        title: \"\", //套餐名称\n        type: 0, //套餐类型\n        image: \"\", //套餐主图\n        is_time: 0, //是否限时\n        is_limit: 0, //限量1/不限量0\n        limit_num: 0, //限量\n        link_ids: [], //参与用户标签\n        time: [], //套餐时间\n        sort: 0, //排序\n        free_shipping: 1, //是否包邮\n        status: 1,\n        products: [],\n      },\n      ruleValidate: discountsFrom,\n      currentid: \"\",\n      picTit: \"\",\n      tableIndex: 0,\n      copy: 0,\n      editIndex: null,\n      id: \"\",\n      rate_price: 0,\n    };\n  },\n  filters: {\n    typeName(type) {\n      if (type == 1) {\n        return \"未中奖\";\n      } else if (type == 2) {\n        return \"积分\";\n      } else if (type == 3) {\n        return \"余额\";\n      } else if (type == 4) {\n        return \"红包\";\n      } else if (type == 5) {\n        return \"优惠券\";\n      } else if (type == 6) {\n        return \"商品\";\n      }\n    },\n  },\n  computed: {\n    ...mapState(\"admin/layout\", [\"isMobile\",\"menuCollapse\"]),\n    labelWidth() {\n      return this.isMobile ? undefined : 135;\n    },\n    labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    },\n  },\n  mounted() {\n    if (this.$route.query.id) {\n      this.id = this.$route.query.id;\n      this.current = 0;\n      this.copy = this.$route.query.copy || 0;\n      this.getInfo();\n    }\n    // this.labelListApi();\n  },\n  methods: {\n\t\tcloseLabel(label){\n\t\t\tlet index = this.dataLabel.indexOf(this.dataLabel.filter(d=>d.id == label.id)[0]);\n\t\t\tthis.dataLabel.splice(index,1);\n\t\t},\n\t\tactiveData(dataLabel){\n\t\t\tthis.labelShow = false;\n\t\t\tthis.dataLabel = dataLabel;\n\t\t},\n\t\topenLabel(row) {\n\t\t  this.labelShow = true;\n\t\t\tthis.$refs.userLabel.userLabel(JSON.parse(JSON.stringify(this.dataLabel)));\n\t\t},\n\t\t// 标签弹窗关闭\n\t\tlabelClose() {\n\t\t  this.labelShow = false;\n\t\t},\n    //勾选规格\n    selectOne(data) {\n      this.selectProductAttrList = data;\n    },\n    //提交选中规格\n    getAttr() {\n      if (!this.selectProductAttrList.length)\n        return this.$Message.warning(\"请先选择规格\");\n      let type;\n      this.goodsAddType === \"Main\"\n        ? (type = this.specsMainData)\n        : (type = this.specsData);\n\n      this.$set(type[this.tabIndex], \"attr\", this.selectProductAttrList);\n      this.$set(\n        type[this.tabIndex],\n        \"items\",\n        this.selectProductAttrList[0].items\n      );\n      this.ggModel = false;\n    },\n    clearOne(data) {\n    },\n    //修改优惠价格\n    changeRatePrice() {\n      for (let val of this.manyFormValidate) {\n        this.$set(val, \"price\", this.rate_price);\n        let list = this.selectProductAttrList;\n        for (let i = 0; i < list.length; i++) {\n          if (val.value === list[i].value) {\n            this.$set(val, \"_checked\", true);\n          }\n        }\n      }\n    },\n    // 规格列表\n    generate(id, type) {\n      productAttrsApi(id, type)\n        .then((res) => {\n          let info = JSON.parse(JSON.stringify(res.data.info.attrs));\n          let items = JSON.parse(JSON.stringify(res.data.info.items));\n          for (let k = 0; k < info.length; k++) {\n            const element = info[k];\n            element.items = items;\n          }\n          let data =\n            this.goodsAddType === \"Main\"\n              ? this.specsMainData[this.tabIndex].attr || []\n              : this.specsData[this.tabIndex].attr || [];\n          this.selectProductAttrList = [];\n          if (data.length) {\n            for (let i = 0; i < data.length; i++) {\n              const element = data[i];\n              for (let j = 0; j < info.length; j++) {\n                if (element.value === info[j].value) {\n                  this.$set(info[j], \"price\", element.price);\n                  this.$set(info[j], \"_checked\", true);\n                  this.selectProductAttrList.push(info[j]);\n                }\n              }\n            }\n          }\n\n          this.manyFormValidate = info;\n          this.ggModel = true;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 选择的商品\n    getProductId(productList) {\n      if (\n        this.goodsAddType === \"Main\" &&\n        (productList.length > 1 || this.specsMainData.length > 0)\n      ) {\n        this.$Message.warning(\"最多添加一个商品\");\n        return;\n      }\n\n      let pData = JSON.parse(JSON.stringify(productList));\n      for (let i = 0; i < pData.length; i++) {\n        pData[i].attr = [];\n      }\n      this.$nextTick((e) => {\n        if (this.goodsAddType === \"Main\") {\n          let arr = this.concat_arr(this.specsData, pData);\n          if (arr.length) {\n            return this.$Message.warning(\"已存在搭配商品\");\n          }\n          this.specsMainData = this.specsMainData.concat(pData);\n        } else {\n          let arr = this.concat_arr(this.specsData, pData);\n          let mainArr = this.concat_arr(this.specsMainData, pData);\n          if (arr.length || mainArr.length) {\n            return this.$Message.warning(\"已存在相同主商品/搭配商品\");\n          }\n          this.specsData = this.specsData.concat(pData);\n        }\n        this.modals = false;\n      });\n    },\n    //用户标签列表\n    // labelListApi() {\n    //   labelListApi().then((res) => {\n    //     this.userLabelList = res.data.list;\n    //     this.userLabelList.map((i) => {\n    //       i.id = i.id + \"\";\n    //     });\n    //   });\n    // },\n    // 具体日期\n    onchangeTime(e) {\n      this.$nextTick(() => {\n        this.$set(this.formValidate, \"time\", e);\n        // this.formValidate.time = e;\n      });\n    },\n    // 详情\n    getInfo() {\n      this.spinShow = true;\n      discountsGetDetails(this.id).then((res) => {\n        this.spinShow = false;\n        this.formValidate = res.data;\n        // this.formValidate.link_ids = res.data.link_ids || [];\n\t\t\t\tthis.dataLabel = res.data.link_ids || [];\n        this.formValidate.time = res.data.time || [];\n        for (let i = 0; i < res.data.products.length; i++) {\n          const element = res.data.products[i];\n          if (element.type == 1) {\n            this.specsMainData.push(element);\n          } else {\n            this.specsData.push(element);\n          }\n        }\n      });\n    },\n    // 下一步\n    next(name) {\n      if (this.formValidate.type === 1 && !this.specsMainData.length) {\n        return this.$Message.warning(\"请选择主商品\");\n      } else if (this.formValidate.type === 0 && !this.specsData.length) {\n        return this.$Message.warning(\"请选择套餐商品\");\n      }\n      this.specsMainData.forEach((v) => {\n        v.type = 1;\n      });\n      this.specsData.forEach((v) => {\n        v.type = 0;\n      });\n      let productData;\n      if (this.formValidate.type == 1) {\n        productData = this.specsMainData.concat(this.specsData);\n      } else {\n        productData = this.specsData;\n      }\n\n      if (productData.length < 2) {\n        return this.$Message.warning(\"套餐内商品不能少于2个\");\n      }\n      for (let i = 0; i < productData.length; i++) {\n        const element = productData[i];\n        if (!element.items) {\n          return this.$Message.warning(`请选择 ${element.store_name} 的规格`);\n        }\n      }\n      this.formValidate.products = productData;\n\t\t\tlet activeIds = [];\n\t\t\tthis.dataLabel.forEach((item)=>{\n\t\t\t\tactiveIds.push(item.id)\n\t\t\t});\n\t\t\tthis.formValidate.link_ids = activeIds\n      if (this.submitOpen) return false;\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          this.submitOpen = true;\n          if (this.id && !this.copy) {\n            discountsSave(this.formValidate)\n              .then(async (res) => {\n                this.$Message.success(res.msg);\n                setTimeout(() => {\n                  this.submitOpen = false;\n                  this.$router.push({\n                    path: \"/admin/marketing/store_discounts/index\",\n                  });\n                }, 500);\n              })\n              .catch((res) => {\n                this.submitOpen = false;\n                this.$Message.error(res.msg);\n              });\n          } else {\n            discountsSave(this.formValidate)\n              .then(async (res) => {\n                this.$Message.success(res.msg);\n                setTimeout(() => {\n                  this.submitOpen = false;\n                  this.$router.push({\n                    path: \"/admin/marketing/store_discounts/index\",\n                  });\n                }, 500);\n              })\n              .catch((res) => {\n                this.submitOpen = false;\n                this.$Message.error(res.msg);\n              });\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    concat_arr(arr1, arr2) {\n      let result = [];\n      for (var i = 0; i < arr1.length; i++) {\n        var obj = arr1[i];\n        var num = obj.product_id;\n        var flag = false;\n        for (var j = 0; j < arr2.length; j++) {\n          var aj = arr2[j];\n          var n = aj.product_id;\n          if (n == num) {\n            flag = true;\n            break;\n          }\n        }\n        if (flag) {\n          result.push(obj);\n        }\n      }\n      return result;\n    },\n    // 点击商品图\n    modalPicTap(tit, picTit, index) {\n      this.modalPic = true;\n      this.isChoice = tit === \"dan\" ? \"单选\" : \"多选\";\n      this.picTit = picTit || \"\";\n      this.tableIndex = index;\n    },\n    // 获取单张图片信息\n    getPic(pc) {\n      switch (this.picTit) {\n        case \"danFrom\":\n          this.formValidate.image = pc.att_dir;\n          break;\n        default:\n          this.specsData[this.tableIndex].image = pc.att_dir;\n      }\n      this.modalPic = false;\n    },\n    handleRemove() {\n      this.formValidate.image = \"\";\n    },\n    // 表单验证\n    validate(prop, status, error) {\n      if (status === false) {\n        this.$Message.error(error);\n        return false;\n      } else {\n        return true;\n      }\n    },\n    cancel() {\n      this.modals = false;\n    },\n    //新增商品\n    addGoods(type) {\n      this.goodsAddType = type;\n      this.modals = true;\n    },\n    //编辑设置规格\n    editGoods(row, index, type) {\n      this.goodsAddType = type;\n      this.tabIndex = index;\n      this.generate(row.product_id, 0);\n    },\n    //删除商品\n    deleteGoods(index, type) {\n      if (type === \"Main\") {\n        this.specsMainData.splice(index, 1);\n      } else {\n        this.specsData.splice(index, 1);\n      }\n    },\n    //获取数组中某个字段之和\n    sumArr(arr, name) {\n      let arrData = [];\n      for (let i = 0; i < arr.length; i++) {\n        arrData.push(arr[i][name]);\n      }\n      return eval(arrData.join(\"+\"));\n    },\n    addGoodsData(data) {\n      this.editIndex != null\n        ? this.specsData.concat(data)\n        : this.specsData.length < 8\n        ? this.specsData.push(data)\n        : this.$Message.warning(\"最多添加8个奖品\");\n      this.addGoodsModel = false;\n      this.editIndex = null;\n    },\n    //修改排序\n    onDragDrop(a, b) {\n      this.specsData.splice(\n        b,\n        1,\n        ...this.specsData.splice(a, 1, this.specsData[b])\n      );\n    },\n    //时间格式转换\n    formatDate(time) {\n      if (time) {\n        let date = new Date(time * 1000);\n        return formatDate(date, \"yyyy-MM-dd hh:mm\");\n      } else {\n        return \"\";\n      }\n    },\n  },\n};\n",null]}