{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/work/customerBase/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/work/customerBase/list.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\nimport department from \"@/components/department/index.vue\";\nimport {\n  getWorkClientList,\n  workClientSynch,\n  workLabel,\n  workClientBatchLabel,\n  workClientEdit\n} from \"@/api/work\";\nimport { userList, userGroupApi, putUsersSetLabel,editOtherApi,giveLevelTimeApi } from \"@/api/user\";\nimport timeOptions from \"@/utils/timeOptions\";\nimport userDetails from \"../../user/list/handle/userDetails\";\nimport sendFrom from \"@/components/sendCoupons/index\";\nimport editFrom from \"@/components/from/from\";\nexport default {\n  name: \"\",\n  data() {\n    return {\n      loading: false,\n      formInline: {},\n      options: timeOptions,\n      columns1: [\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\",\n        },\n        {\n          title: \"客户信息\",\n          slot: \"avatar\",\n          minWidth: 120,\n        },\n        {\n          title: \"所属客服\",\n          slot: \"followOne\",\n          minWidth: 80,\n        },\n        {\n          title: \"客服所属部门\",\n          slot: \"external_userid\",\n          minWidth: 80,\n        },\n        {\n          title: \"标签\",\n          slot: \"corp_id\",\n          minWidth: 120,\n        },\n        {\n          title: \"性别\",\n          slot: \"gender\",\n          minWidth: 80,\n        },\n        {\n          title: \"客户类型\",\n          slot: \"type\",\n          minWidth: 80,\n        },\n        // {\n        //   title: \"职位\",\n        //   key: \"position\",\n        //   minWidth: 100,\n        // },\n        // {\n        //   title: \"所在企业主体名称\",\n        //   key: \"corp_full_name\",\n        //   minWidth: 100,\n        // },\n        {\n          title: \"备注\",\n          key: \"remark\",\n          minWidth: 110,\n        },\n        {\n          title: \"添加时间\",\n          key: \"create_time\",\n          minWidth: 110,\n        },\n        {\n          title: \"操作\",\n          slot: \"action\",\n          // fixed: \"right\",\n          minWidth: 120,\n        },\n      ],\n      columns2: [\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\",\n        },\n        {\n          title: \"客户信息\",\n          slot: \"avatars\",\n          minWidth: 120,\n        },\n        {\n          title: \"付费会员\",\n          slot: \"isMember\",\n          minWidth: 90,\n        },\n        {\n          title: \"用户等级\",\n          key: \"level\",\n          minWidth: 90,\n        },\n        {\n          title: \"分组\",\n          key: \"group_id\",\n          minWidth: 100,\n        },\n        {\n          title: \"手机号\",\n          key: \"phone\",\n          minWidth: 100,\n        },\n        {\n          title: \"用户类型\",\n          key: \"user_type\",\n          minWidth: 100,\n        },\n        {\n          title: \"内部联系人\",\n          slot: \"follow_list\",\n          minWidth: 100,\n        },\n        {\n          title: \"余额\",\n          key: \"now_money\",\n          minWidth: 100,\n        },\n        {\n          title: \"操作\",\n          slot: \"action\",\n          // fixed: \"right\",\n          minWidth: 80,\n        },\n      ],\n      tableData: [],\n      tableData1: [],\n      tabIndex: 0,\n      grid: {\n        xl: 7,\n        lg: 10,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      timeVal: [],\n      //客户标签列表\n      labelList: [],\n      labelShow: false,\n      activeLabel: {\n        add_tag: [],\n        removeTag: [],\n        userid: [],\n        is_all: 0,\n      },\n      activeLabel2: {\n        label_id: [],\n        uids: [],\n        all: 0,\n      },\n      tableFrom: {\n        userid: [],\n        label: [],\n        time: \"\",\n        name: \"\",\n        page: 1,\n        limit: 15,\n      },\n      labelIds:[],\n      usersName: \"\",\n      activeDepartment: {},\n      isSite: true,\n      onlyDepartment: false,\n      openType: \"\",\n      userList: [],\n      selectGroup: [],\n      selectUser: [],\n      groupList: [],\n      user_ids: \"\",\n      dataLabel: [],\n      setLabelIndex:null,\n      labelFormList:[],\n      markShow:false,\n      remark:\"\",\n      selectRow:{},\n      FromData: null,\n    };\n  },\n  components: { department, userDetails, sendFrom,editFrom },\n  filters: {\n    genderFilter(value) {\n      if (value == 0) {\n        return \"未知\";\n      } else if (value == 1) {\n        return \"男\";\n      } else if (value == 2) {\n        return \"女\";\n      }\n    },\n  },\n  watch: {\n    usersName(val, oldVal) {\n      if (!val) {\n        this.tableFrom.userid = [];\n      }\n    },\n  },\n  computed: {\n    ...mapState(\"admin/layout\", [\"isMobile\"]),\n    labelWidth() {\n      return this.isMobile ? undefined : 80;\n    },\n    labelPosition() {\n      return this.isMobile ? \"top\" : \"left\";\n    },\n  },\n  created() {\n    this.getList();\n    this.userGroup();\n    this.getWorkLabel();\n    this.getUserList();\n  },\n  methods: {\n    selectAll(row) {\n      if (row.length) {\n        this.selectGroup = row;\n      }\n    },\n    handleSelectRow(row) {\n      this.selectGroup = row;\n    },\n    userAll(row) {\n      if (row.length) {\n        this.selectUser = row;\n      }\n    },\n    userSelectRow(row) {\n      this.selectUser = row;\n    },\n    getList() {\n      this.loading = true;\n      getWorkClientList(this.tableFrom)\n        .then((res) => {\n          this.tableData = res.data;\n          this.loading = false;\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n          this.loading = false;\n        });\n    },\n    onchangeTime(e) {\n      this.timeVal = e;\n      this.tableFrom.time = this.timeVal.join(\"-\");\n    },\n    dateChange() {\n      this.tableFrom.page = 1;\n      this.getList();\n    },\n    clientSynch() {\n      workClientSynch().then((res) => {\n        this.$Message.success(res.msg);\n      });\n    },\n    searchData() {\n      this.tableFrom.page = 1;\n      if(this.tabIndex == 0){\n        this.tableFrom.label = this.labelFormList.map(item=>{\n          return item.value\n        })\n        this.getList();\n      }else{\n        this.getUserList();\n      }\n      \n    },\n    pageChange(index) {\n      this.tableFrom.page = index;\n      if (this.tabIndex == 0) {\n        this.getList();\n      } else {\n        this.getUserList();\n      }\n    },\n    //获取客户标签\n    getWorkLabel() {\n      workLabel().then((res) => {\n        this.labelList = res.data.map((org) => this.mapTree(org));\n      });\n    },\n    mapTree(org) {\n      const haveChildren =\n        Array.isArray(org.children) && org.children.length > 0;\n      return {\n        //分别将我们查询出来的值做出改变他的key\n        title: org.label,\n        expand: true,\n        value: org.value,\n        id:org.id,\n        selected: false,\n        checked: false,\n        children: haveChildren ? org.children.map((i) => this.mapTree(i)) : [],\n      };\n    },\n    addUser() {\n      this.$refs.department.memberStatus = true;\n    },\n    changeMastart(arr, type) {\n      this.tableFrom.userid = arr.map((item) => {\n        return item.userid;\n      });\n      let name = arr.map((item1) => {\n        return item1.name;\n      });\n      this.usersName = name.toString();\n    },\n    getUserList() {\n      this.loading = true;\n      userList({\n        page: this.tableFrom.page,\n        limit: this.tableFrom.limit,\n        user_time_type: \"all\",\n        user_time:this.tableFrom.time,\n        nickname:this.tableFrom.name,\n        label_ids: this.labelIds.toString()\n      })\n        .then((res) => {\n          let data = res.data;\n          this.tableData1 = data;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    changeMenu(row,name){\n      switch (name) {\n        case \"2\":\n          this.getOtherFrom(row.uid);\n          break;\n        case \"3\":\n          this.giveLevelTime(row.uid);\n          break;\n        default:\n          break;\n      }\n    },\n    // 获取积分余额表单\n    getOtherFrom(id) {\n      editOtherApi(id)\n        .then(async (res) => {\n          if (res.data.status === false) {\n            return this.$authLapse(res.data);\n          }\n          res.data.rules[1].props.max = 999999;\n          res.data.rules[1].props.precision = 0;\n          this.FromData = res.data;\n          this.$refs.edits.modals = true;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    submitFail(p) {\n      if (this.$refs.userDetails.modals) {\n        this.$refs.userDetails.getDetails(this.selectRow.uid); \n      }\n    },\n    giveLevelTime(id) {\n      giveLevelTimeApi(id)\n        .then(async (res) => {\n          if (res.data.status === false) {\n            return this.$authLapse(res.data);\n          }\n          this.FromData = res.data;\n          this.$refs.edits.modals = true;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    onChangeType() {\n      this.selectGroup = [];\n      this.selectUser = [];\n      this.dataLabel = [];\n      this.tableFrom.time = \"\";\n      this.tableFrom.name = \"\";\n    },\n    selectLabel(label) {\n      if (label.selected) {\n        let index = this.dataLabel.indexOf(\n          this.dataLabel.filter((d) => d.id == label.id)[0]\n        );\n        this.dataLabel.splice(index, 1);\n        this.activeLabel.removeTag.push(label.value)\n        label.selected = false;\n      } else {\n        this.dataLabel.push({\n          id:label.id,\n          value:label.value,\n          title:label.title\n        });\n        label.selected = true;\n      }\n    },\n    onSend() {\n      if (this.selectUser.length === 0) {\n        this.$Message.warning(\"请选择要发送优惠券的用户\");\n      } else {\n        let arr = this.selectUser.map((item) => item.uid);\n        this.user_ids = arr.join();\n        this.$refs.sends.modals = true;\n        this.$refs.sends.getList();\n      }\n    },\n    setLabel(index) {\n      this.setLabelIndex = index;\n      this.labelShow = true;\n    },\n    labeSet(row){\n      // this.getWorkLabel();\n      if(row.followOne && row.followOne.tags.length){\n        this.labelList.forEach(item1=>{\n          item1.children.forEach(item2=>{\n            row.followOne.tags.forEach(item=>{\n              if(item.tag_id == item2.value){\n                item2.selected = true;\n                this.dataLabel.push({\n                  id:item2.id,\n                  value:item2.value,\n                  title:item2.title\n                })\n              }\n            })\n          })\n        })\n      }\n      this.labelShow = true;\n      this.selectGroup[0] = row;\n\n    },\n    labelConfirm() {\n      if(this.setLabelIndex == 0){\n        //顶部卡片客户标签作为搜索条件时打开\n        this.labelFormList = this.dataLabel;\n        this.labelIds = this.labelFormList.map(item=>{\n          return item.id\n        })\n        //打开标签弹窗\n        this.labelShow = false;\n      }else{\n        if (this.tabIndex == 0) {\n          //企微客户设置标签\n          //selectGroup是选中的用户，可以是多个，也可以是单个\n        this.activeLabel.userid = this.selectGroup.map((item) => {\n          //将选中用户的user_id push到activeLabel.userid；\n          return item.external_userid;\n        });\n        //设置要添加的tab标签value\n        this.activeLabel.add_tag = this.dataLabel.map(item=>{\n          return item.value\n        })\n        //从add_tag标签中剔除要删除的标签，在编辑时使用\n        this.activeLabel.add_tag.forEach(i=>{\n          this.activeLabel.removeTag.forEach(j=>{\n            if(i == j){\n              this.activeLabel.add_tag.splice(i,1)\n            }\n          })\n        })\n        workClientBatchLabel(this.activeLabel)\n          .then((res) => {\n            this.$Message.success(res.msg);\n            this.labelShow = false;\n          })\n          .catch((err) => {\n            this.$Message.error(err.msg);\n            this.labelShow = false;\n          });\n      } else {\n        this.activeLabel2.uids = this.selectUser.map((item) => {\n          return item.uid;\n        });\n        this.activeLabel2.label_id = this.dataLabel.map(item=>{\n          return item.id\n        })\n        putUsersSetLabel(this.activeLabel2)\n          .then((res) => {\n            this.$Message.success(res.msg);\n            this.labelShow = false;\n          })\n          .catch((err) => {\n            this.$Message.error(err.msg);\n            this.labelShow = false;\n          });\n        }\n      }\n    },\n    labelCancel(){\n      this.labelShow = false;\n      if(this.tabIndex == 0){\n        this.getList()\n      }else{\n        this.getUserList();\n      }\n      this.getWorkLabel();\n    },\n    handleClose2(e,name){\n      let index = this.labelFormList.indexOf(name);\n      this.labelFormList.splice(index, 1);\n      this.tableFrom.label.splice(index,1);\n      this.labelIds.splice(index,1);\n    },\n    userGroup() {\n      let data = {\n        page: 1,\n        limit: \"\",\n      };\n      userGroupApi(data).then((res) => {\n        this.groupList = res.data.list;\n      });\n    },\n    changeInfo(row) {\n      this.$refs.userDetails.modals = true;\n      this.$refs.userDetails.activeName = \"info\";\n      this.$refs.userDetails.getDetails(row.uid);\n    },\n    workInfo(row){\n      this.selectRow = row;\n      this.$refs.userDetails.modals = true;\n      this.$refs.userDetails.activeName = \"info\";\n      this.$refs.userDetails.getDetails(row.uid);\n    },\n    editMark(row){\n      this.remark = row.remark;\n      this.selectRow = row;\n      this.markShow = true;\n    },\n    editMaekConfirm(){\n      workClientEdit(this.selectRow.id,{remark:this.remark}).then(res=>{\n        this.$Message.success(res.msg);\n        this.getList();\n      }).catch(err=>{\n        this.$Message.error(err.msg);\n      })\n    },\n    editMarkCancel(){\n      this.remark = \"\";\n    }\n  },\n};\n",null]}