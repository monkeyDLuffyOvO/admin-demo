{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/setting/devise/goodClass.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/setting/devise/goodClass.vue","mtime":1652232731000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { colorChange, getColorChange } from \"@/api/diy\";\nexport default {\n    name: 'goodClass',\n    props: {\n    },\n    data () {\n        return {\n            classList:[\n                {image:require('@/assets/images/sort01.jpg'),name:'样式1'},\n                {image:require('@/assets/images/sort02.jpg'),name:'样式2'},\n                {image:require('@/assets/images/sort03.jpg'),name:'样式3'}\n            ],\n            activeStyle:'-1'\n        }\n    },\n    created() {\n        this.getInfo();\n    },\n    methods: {\n        getInfo (){\n            getColorChange('category').then(res=>{\n                this.activeStyle = res.data.status?res.data.status-1:0\n            })\n        },\n        selectTap (index) {\n            this.activeStyle = index;\n        },\n        onSubmit (num){\n            this.$emit('parentFun',true)\n            this.activeStyle = num==1?0:this.activeStyle;\n            colorChange(num==1?1:this.activeStyle+1,'category').then(res=>{\n                this.$emit('parentFun',false)\n                this.$Message.success(res.msg);\n            }).catch((err)=>{\n                this.$Message.error(err.msg);\n                this.$emit('parentFun',false)\n            })\n        }\n    }\n}\n",null]}