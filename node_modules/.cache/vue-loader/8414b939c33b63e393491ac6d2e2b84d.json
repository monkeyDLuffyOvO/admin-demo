{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/components/mobileConfig/c_search_box.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/components/mobileConfig/c_search_box.vue","mtime":1659407670000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport toolCom from '@/components/mobileConfigRight/index.js'\nimport rightBtn from '@/components/rightBtn/index.vue';\nimport { mapMutations } from 'vuex'\nexport default {\n    name: 'c_search_box',\n    componentsName: 'search_box',\n    cname: '搜索',\n    props: {\n        activeIndex: {\n            type: null\n        },\n        num: {\n            type: null\n        },\n        index: {\n            type: null\n        }\n    },\n    components: {\n        ...toolCom,\n        rightBtn\n    },\n    data () {\n        return {\n            hotIndex: 1,\n            configObj: {}, // 配置对象\n            rCom: [\n                {\n                    components: toolCom.c_set_up,\n                    configNme: 'setUp'\n                }\n            ],// 当前页面组件\n            textBnt: [\n                {\n                    components: toolCom.c_tab,\n                    configNme: 'tabConfig'\n                },\n                {\n                    components: toolCom.c_input_item,\n                    configNme: 'titleConfig'\n                },\n                {\n                    components: toolCom.c_input_item,\n                    configNme: 'linkConfig'\n                },\n                {\n                    components: toolCom.c_hot_word,\n                    configNme: 'hotWords'\n                }\n            ],\n            mapBnt: [\n                {\n                    components: toolCom.c_tab,\n                    configNme: 'tabConfig'\n                },\n                {\n                    components: toolCom.c_hot_word,\n                    configNme: 'hotWords'\n                }\n            ],\n            searchBtn: [\n                {\n                    components: toolCom.c_tab,\n                    configNme: 'tabConfig'\n                },\n                {\n                    components: toolCom.c_radio,\n                    configNme: 'radioConfig'\n                },\n                {\n                    components: toolCom.c_upload_img,\n                    configNme: 'logoConfig'\n                },\n                {\n                    components: toolCom.c_hot_word,\n                    configNme: 'hotWords'\n                }\n\n            ],\n            mapRadio:[\n                {\n                    components: toolCom.c_tab,\n                    configNme: 'tabConfig'\n                },\n                {\n                    components: toolCom.c_radio,\n                    configNme: 'radioConfig'\n                },\n                {\n                    components: toolCom.c_hot_word,\n                    configNme: 'hotWords'\n                }\n            ],\n            textRadio:[\n                {\n                    components: toolCom.c_tab,\n                    configNme: 'tabConfig'\n                },\n                {\n                    components: toolCom.c_radio,\n                    configNme: 'radioConfig'\n                },\n                {\n                    components: toolCom.c_input_item,\n                    configNme: 'titleConfig'\n                },\n                {\n                    components: toolCom.c_input_item,\n                    configNme: 'linkConfig'\n                },\n                {\n                    components: toolCom.c_hot_word,\n                    configNme: 'hotWords'\n                }\n            ],\n            setUp: 0,\n            type: 0,\n            typeRadio:0\n        }\n    },\n    watch: {\n        num (nVal) {\n            // debugger;\n            let value = JSON.parse(JSON.stringify(this.$store.state.admin.mobildConfig.defaultArray[nVal]))\n            this.configObj = value;\n        },\n        configObj: {\n            handler (nVal, oVal) {\n                this.$store.commit('admin/mobildConfig/UPDATEARR', { num: this.num, val: nVal });\n            },\n            deep: true\n        },\n        'configObj.setUp.tabVal': {\n            handler (nVal, oVal) {\n                this.setUp = nVal;\n                var arr = [this.rCom[0]]\n                if (nVal == 0) {\n                    if(this.type === 0){\n                        this.rCom = arr.concat(this.textBnt)\n                    }else if(this.type === 1){\n                        this.rCom = arr.concat(this.mapBnt)\n                    }else {\n                        if(this.typeRadio === 0){\n                            this.rCom = arr.concat(this.textRadio)\n                        }else if(this.typeRadio === 1){\n                            this.rCom = arr.concat(this.mapRadio)\n                        }else {\n                            this.rCom = arr.concat(this.searchBtn)\n                        }\n                    }\n                } else {\n                    let tempArr = [\n                        {\n                            components: toolCom.c_bg_color,\n                            configNme: 'bgColor'\n                        },\n                        {\n                            components: toolCom.c_bg_color,\n                            configNme: 'textColor'\n                        },\n                        {\n                            components: toolCom.c_txt_tab,\n                            configNme: 'textStyle'\n                        },\n                        {\n                            components: toolCom.c_txt_tab,\n                            configNme: 'boxStyle'\n                        },\n                        {\n                            components: toolCom.c_txt_tab,\n                            configNme: 'txtStyle'\n                        },\n                        {\n                            components: toolCom.c_txt_tab,\n                            configNme: 'styleList'\n                        },\n                        {\n                            components: toolCom.c_slider,\n                            configNme: 'prConfig'\n                        },\n                        {\n                            components: toolCom.c_slider,\n                            configNme: 'mbConfig'\n                        }\n                    ]\n                    this.rCom = arr.concat(tempArr)\n                }\n            },\n            deep: true\n        },\n        'configObj.tabConfig.tabVal': {\n            handler (nVal, oVal) {\n                this.type = nVal;\n                var arr = [this.rCom[0]];\n                if(this.setUp === 0){\n                    if (nVal === 0) {\n                        this.rCom = arr.concat(this.textBnt)\n                    } else if(nVal === 1){\n                        this.rCom = arr.concat(this.mapBnt)\n                    }else {\n                        if(this.typeRadio == 0){\n                            this.rCom = arr.concat(this.textRadio)\n                        }else if(this.typeRadio == 1){\n                            this.rCom = arr.concat(this.mapRadio)\n                        }else {\n                            this.rCom = arr.concat(this.searchBtn)\n                        }\n                    }\n                }\n            },\n            deep: true\n        },\n        'configObj.radioConfig.tabVal':{\n            handler (nVal, oVal) {\n                this.typeRadio = nVal;\n                var arr = [this.rCom[0]];\n                if(this.setUp === 0 && this.type === 2){\n                    if (nVal === 0) {\n                        this.rCom = arr.concat(this.textRadio)\n                    } else if(nVal === 1){\n                        this.rCom = arr.concat(this.mapRadio)\n                    }else {\n                        this.rCom = arr.concat(this.searchBtn)\n                    }\n                }\n            },\n            deep: true\n        }\n    },\n    mounted () {\n        this.$nextTick(() => {\n            let value = JSON.parse(JSON.stringify(this.$store.state.admin.mobildConfig.defaultArray[this.num]))\n            this.configObj = value;\n        })\n    },\n    methods: {\n    }\n}\n",null]}