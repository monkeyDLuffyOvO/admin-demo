{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/setting/devise/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/setting/devise/list.vue","mtime":1662022393000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Setting from '@/setting'\nimport ClipboardJS from 'clipboard'\nimport { diyList, diyDel, setStatus, recovery, getRoutineCode } from '@/api/diy'\nimport { mapState } from 'vuex'\nimport QRCode from 'qrcodejs2'\nimport goodClass from './goodClass'\nimport newGoods from './newGoods'\nimport users from './users'\n\nexport default {\n  name: 'devise_list',\n  computed: {\n    ...mapState('admin/layout', ['menuCollapse', 'isMobile']),\n  },\n  components: {\n    goodClass,\n    newGoods,\n    users,\n  },\n  data() {\n    return {\n      grid: {\n        sm: 10,\n        md: 12,\n        lg: 19,\n      },\n      loading: false,\n      theme3: 'light',\n      menuList: [\n        {\n          name: '商城首页',\n          id: 1,\n        },\n        {\n          name: '商品分类',\n          id: 2,\n        },\n        {\n          name: '商品详情',\n          id: 3,\n        },\n        {\n          name: '个人中心',\n          id: 4,\n        },\n      ],\n      columns1: [\n        {\n          title: '页面ID',\n          key: 'id',\n          width: 80,\n        },\n        {\n          title: '模板名称',\n          key: 'name',\n          minWidth: 100,\n        },\n        {\n          title: '添加时间',\n          key: 'add_time',\n          minWidth: 100,\n        },\n        {\n          title: '更新时间',\n          key: 'update_time',\n          minWidth: 100,\n        },\n        {\n          title: '操作',\n          slot: 'action',\n          // fixed: \"right\",\n          width: 200,\n        },\n      ],\n      list: [],\n      imgUrl: '',\n      modal: false,\n      BaseURL: Setting.apiBaseURL.replace(/adminapi/, ''),\n      cardShow: 0,\n      loadingExist: false,\n      isDiy: 1,\n      qrcodeImg: '',\n      diyFrom: {\n        type: 1,\n        page: 1,\n        limit: 10,\n      },\n      total: 0,\n    }\n  },\n  created() {\n    this.getList()\n    // var storage = window.localStorage;\n    // storage.setItem('imgUrl',imgUrl)\n  },\n  mounted: function () {},\n  methods: {\n    getChildData(e) {\n      this.loadingExist = e\n    },\n    submit() {\n      switch (this.cardShow) {\n        case 1:\n          this.$refs.category.onSubmit()\n          break\n        case 2:\n          this.$refs.newGoods.onSubmit()\n          break\n        case 3:\n          this.$refs.users.onSubmit()\n          break\n      }\n      // if (this.cardShow == 1) {\n      // this.$refs.category.onSubmit()\n      // } else {\n      //   this.$refs.users.onSubmit()\n      // }\n    },\n    reast() {\n      if (this.cardShow == 1) {\n        this.$refs.category.onSubmit(1)\n      }\n    },\n    bindMenuItem(index) {\n      this.cardShow = index\n    },\n    onCopy() {\n      this.$Message.success('复制预览链接成功')\n    },\n    onError() {\n      this.$Message.error('复制预览链接失败')\n    },\n    //生成二维码\n    creatQrCode(id, status) {\n      this.$refs.qrCodeUrl.innerHTML = ''\n      let url = ''\n      if (status) {\n        url = `${this.BaseURL}pages/index/index`\n      } else {\n        url = `${this.BaseURL}pages/annex/special/index?id=${id}`\n      }\n      var qrcode = new QRCode(this.$refs.qrCodeUrl, {\n        text: url, // 需要转换为二维码的内容\n        width: 160,\n        height: 160,\n        colorDark: '#000000',\n        colorLight: '#ffffff',\n        correctLevel: QRCode.CorrectLevel.H,\n      })\n    },\n    //小程序二维码\n    routineCode(id) {\n      getRoutineCode(id)\n        .then((res) => {\n          this.qrcodeImg = res.data.image\n        })\n        .catch((err) => {\n          this.$Message.error(err)\n        })\n    },\n    preview(row) {\n      this.modal = true\n      this.creatQrCode(row.id, row.status)\n      this.routineCode(row.id)\n    },\n    // 获取列表\n    getList() {\n      let storage = window.localStorage\n      this.imgUrl = storage.getItem('imgUrl')\n      let that = this\n      this.loading = true\n      diyList(this.diyFrom).then((res) => {\n        this.loading = false\n        let data = res.data\n        this.list = data.list\n        this.total = data.count\n        data.list.forEach(function (e) {\n          if (e.status == 1) {\n            that.isDiy = e.is_diy\n            let imgUrl = `${that.BaseURL}pages/annex/special/index?id=${e.id}`\n            storage.setItem('imgUrl', imgUrl)\n            that.imgUrl = imgUrl\n            // let imgUrl = JSON.parse(storage.getItem('menuList'));\n            // that.imgUrl = `http://192.168.1.12:8080/pages/annex/special/index?id=${e.id}`;\n          }\n        })\n      })\n    },\n    pageChange(status) {\n      this.diyFrom.page = status\n      this.getList()\n    },\n    // 编辑\n    edit(row) {\n      if (row.is_diy) {\n        // this.$store.commit('userInfo/setPageName', row.template_name || 'moren');\n        this.$router.push({\n          path: '/admin/pages/diy',\n          query: { id: row.id, name: row.template_name || 'moren' },\n        })\n      } else {\n        let storage = window.localStorage\n        storage.setItem('pageName', row.template_name)\n        this.$store.dispatch('admin/user/getPageName')\n        this.$router.push({\n          path: '/admin/setting/pages/template',\n          query: { id: row.id, name: row.template_name },\n        })\n      }\n    },\n    // 添加\n    add() {\n      this.$router.push({\n        path: '/admin/pages/diy',\n        query: { id: 0, name: '首页', type: 1 },\n      })\n    },\n    // 删除\n    del(row) {\n      let delfromData = {\n        title: '删除',\n        num: 2000,\n        url: 'diy/del/' + row.id,\n        method: 'DELETE',\n        data: {\n          type: 1,\n        },\n      }\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.getList()\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg)\n        })\n    },\n    // 使用模板\n    async setStatus(row) {\n      this.$Modal.confirm({\n        title: '提示',\n        content: '<p>是否把该模板设为首页</p>',\n        onOk: () => {\n          setStatus(row.id, {\n            type: 1,\n          })\n            .then((res) => {\n              let that = this\n              if (res.data.status) {\n                this.$Message.success(res.data.msg)\n                this.$Modal.remove()\n                this.getList()\n              } else {\n                setTimeout((e) => {\n                  that.$Modal.confirm({\n                    title: '提示',\n                    content: '<p>尚未安装模板，请安装后再试！</p>',\n                    loading: false,\n                    //okText: \"点击购买\",\n                    // onOk: () => {\n                    //   window.open(\"http://s.crmeb.com/goods_cate\", `_blank`);\n                    // },\n                  })\n                }, 500)\n              }\n            })\n            .catch((res) => {\n              this.$Modal.remove()\n              this.$Message.error(res.msg)\n            })\n        },\n      })\n    },\n    recovery(row) {\n      recovery(row.id).then((res) => {\n        this.$Message.success(res.msg)\n        this.getList()\n      })\n    },\n  },\n}\n",null]}