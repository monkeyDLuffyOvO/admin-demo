{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/components/rightConfig/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/components/rightConfig/index.vue","mtime":1640264908000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getCategory, getByCategory, getProduct, diySave, storeStatus } from '@/api/diy'\nimport toolCom from '@/components/diyComponents/index.js'\nimport { mapMutations } from 'vuex'\nimport { mapState } from 'vuex'\nexport default {\n    name: \"rightConfig\",\n    components:{\n      ...toolCom\n    },\n    props:{\n        name: {\n            type: null,\n            default:''\n        },\n        pageId: {\n            type: Number,\n            default: 0\n        }\n    },\n    computed:{\n        // ...mapState({\n        //     defultArr:(state)=>state.goodSelect.component,\n        // })\n        defultArr(){\n            this.$store.dispatch('admin/user/getPageName');\n            let names = this.$store.state.admin.user.pageName;\n            return this.$store.state.admin[names].component;\n        }\n    },\n    watch:{\n        name:{\n            handler (nVal, oVal) {\n                this.rCom = [];\n                let diy = this.$store.state.admin.user.pageName;\n                this.configData = this.$store.state.admin[diy].defaultConfig[nVal];\n                this.rCom = this.$store.state.admin[diy].component[nVal].list;\n                if(this.configData.selectConfig){\n                    let type = this.configData.selectConfig.type?this.configData.selectConfig.type:'';\n                    this.configData.selectConfig.list = this.categoryList;\n                    if(type){\n                        this.getByCategory();\n                    }else {\n                        this.getCategory();\n                    }\n                }\n            },\n            deep: true\n        },\n        'defultArr': {\n            handler (nVal, oVal) {\n                this.rCom = []\n                let tempArr = this.objToArray(nVal)\n                this.rCom =nVal [this.name].list\n            },\n            deep: true\n        }\n    },\n    data(){\n        return {\n            rCom:[],\n            configData:{},\n            isShow:true,\n            categoryList:[],\n            status:0\n        }\n    },\n    mounted() {\n        this.storeStatus();\n    },\n    methods:{\n        storeStatus(){\n            storeStatus().then(res=>{\n                this.status = parseInt(res.data.store_status);\n            })\n        },\n        getCategory () {\n            getCategory().then(res => {\n                let data = [];\n                res.data.map(item => {\n                    data.push({ title: item.title, pid: item.pid, activeValue: item.id.toString() });\n                });\n                this.categoryList = data;\n                this.bus.$emit('upData',data)\n            })\n        },\n        //获取二级分类\n        getByCategory () {\n            getByCategory().then(res=>{\n                let data = [];\n                res.data.map(item => {\n                    data.push({ title: item.cate_name, pid: item.pid, activeValue: item.id.toString() });\n                });\n                this.categoryList = data;\n                this.bus.$emit('upData',data)\n            })\n        },\n        // 保存数据\n        saveConfig(){\n            let diy = this.$store.state.admin.user.pageName;\n            let data = this.$store.state.admin[diy].defaultConfig;\n            let periphery = this.$store.state.admin[diy].periphery;\n            if(this.name=='z_tabBar'){\n                if(!periphery||!this.status){\n                    let list = data.z_tabBar.tabBarList.list;\n                    for(let i = 0;i<list.length;i++){\n                        if(list[i].link=='/pages/storeList/index' || list[i].link=='pages/storeList/index'){\n                            return this.$Message.error('请先开启您的周边功能(/pages/storeList/index)');\n                        }\n                    }\n                }\n                if(data.z_tabBar.tabBarList.list.length<2){\n                    return this.$Message.error('您最少应添加2个导航');\n                }\n            }\n            diySave(this.pageId,{\n                value:data\n            }).then(res=>{\n                this.$Message.success('保存成功')\n            })\n        },\n        // 对象转数组\n        objToArray(array) {\n            var arr = []\n            for (var i in array) {\n                arr.push(array[i]);\n            }\n            return arr;\n        }\n    }\n}\n",null]}