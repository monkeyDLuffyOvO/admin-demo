{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/kefu/pc/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/kefu/pc/index.vue","mtime":1661152956000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Setting from \"@/setting\";\nimport { HappyScroll } from \"vue-happy-scroll\";\nimport baseHeader from \"./components/baseHeader\";\nimport chatList from \"./components/chatList\";\nimport rightMenu from \"./components/rightMenu\";\nimport emojiList from \"@/utils/emoji\";\nimport { Socket } from \"@/libs/socket\";\nimport util from \"@/libs/util\";\nimport msgWindow from \"./components/msgWindow\";\nimport transfer from \"./components/transfer\";\nimport { serviceList, uploadImg } from \"@/api/kefu\";\nimport goodsDetail from \"./components/goods_detail\";\nimport orderDetail from \"./components/order_detail\";\nimport { mapState } from \"vuex\";\nimport { serviceInfo } from \"@/api/kefu_mobile\";\nlet mp3require = require(\"../../../assets/video/notice.wav\");\nlet mp3 = new Audio(mp3require);\nconst chunk = function (arr, num) {\n  num = num * 1 || 1;\n  var ret = [];\n  arr.forEach(function (item, i) {\n    if (i % num === 0) {\n      ret.push([]);\n    }\n    ret[ret.length - 1].push(item);\n  });\n  return ret;\n};\n\nexport default {\n  name: \"index\",\n  components: {\n    baseHeader,\n    chatList,\n    rightMenu,\n    msgWindow,\n    transfer,\n    HappyScroll,\n    goodsDetail,\n    orderDetail,\n  },\n  // 指令粘贴指令定义\n  directives: {\n    paste: {\n      bind(el, binding, vnode) {\n        el.addEventListener(\"paste\", function (event) {\n          //这里直接监听元素的粘贴事件\n          binding.value(event);\n        });\n      },\n    },\n  },\n  data() {\n    return {\n      isEmoji: false,\n      chatCon: \"\",\n      emojiGroup: chunk(emojiList, 20), // 表情列表\n      emojiList: emojiList,\n      html: \"\",\n      userActive: {}, // 左侧用户列表选中信息\n      kefuInfo: {}, // 客服信息\n      isMsg: false,\n      isTransfer: false,\n      activeMsg: \"\", // 选中的话术\n      chatList: [],\n      text: \"\",\n      limit: 20,\n      upperId: 0,\n      online: true, // 当前客服在线状态\n      scrollTop: 0,\n      isScroll: true,\n      oldHeight: 0,\n      isLoad: false,\n      isProductBox: false,\n      goodsId: \"\",\n      isOrder: false,\n      orderId: \"\",\n      upload: \"\",\n      header: {},\n      uploadData: {\n        filename: \"file\",\n      },\n      userOnline: {},\n      newRecored: {}, // 新对话信息\n      searchData: \"\", // 搜索文字\n      scrollNum: 0, // 滚动次数\n      transferId: \"\", // 转接id\n      bodyClose: false,\n      tourist: 0,\n\t\t\ttouristLen:0,\n      pageWs: \"\",\n      isShow: false,\n\t  isReturen:false,\n      toChat:false,\n    };\n  },\n  computed: {\n    ...mapState({\n      socketStatus: (state) => state.admin.kefu.socketStatus,\n    }),\n    disabled() {\n      if (this.chatCon.length == 0) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    records() {\n      return this.chatList.map((item, index) => {\n        item.time = this.$moment(item.add_time * 1000).format(\"MMMDo H:mm\");\n        if (index) {\n          if (item.add_time - this.chatList[index - 1].add_time >= 300) {\n            item.show = true;\n          } else {\n            item.show = false;\n          }\n        } else {\n          item.show = true;\n        }\n        return item;\n      });\n    },\n  },\n  watch: {\n    // socketStatus:{\n    //     handler(nVal,Val){\n    //         if(nVal){\n    //             Socket.send({\n    //                 data: util.cookies.kefuGet('token'),\n    //                 type: \"kefu_login\"\n    //             });\n    //         }\n    //     },\n    //     deep:true\n    // }\n  },\n\n  created() {\n    this.upload = Setting.apiBaseURL.replace(\"adminapi\", \"kefuapi\") + \"/upload\";\n    serviceInfo().then((res) => {\n      this.kefuInfo = res.data;\n      if (this.kefuInfo.site_name) {\n        document.title = this.kefuInfo.site_name;\n      } else {\n        this.kefuInfo.site_name = \"\";\n      }\n    });\n  },\n  mounted() {\n    let self = this;\n    window.addEventListener(\"click\", function () {\n      self.isEmoji = false;\n    });\n    this.bus.pageWs = Socket(true, util.cookies.kefuGet(\"token\"));\n    this.wsAgain();\n    this.header[\"Authori-zation\"] = \"Bearer \" + util.cookies.kefuGet(\"token\");\n    this.text = this.replace_em(\"[em-smiling_imp]\");\n  },\n  methods: {\n    wsAgain() {\n      let that = this;\n      this.bus.pageWs\n        .then((ws) => {\n          ws.$on([\"reply\", \"chat\"], (data) => {\n            if (data.msn_type == 1) {\n              data.msn = this.replace_em(data.msn);\n            }\n            if (data.msn_type == 2) {\n              if (data.msn.indexOf(\"[\") == -1) {\n                data.msn = this.replace_em(`[${data.msn}]`);\n              }\n            }\n            this.chatList.push(data);\n            this.$nextTick(function () {\n              this.scrollTop = document.querySelector(\n                \"#chat_scroll\"\n              ).offsetHeight;\n            });\n          });\n          ws.$on(\"reply\", (data) => {\n            // mp3.play();\n          });\n          ws.$on(\"socket_error\", () => {\n            this.$Message.error(\"连接失败\");\n          });\n          ws.$on(\"err_tip\", (data) => {\n            this.$Message.error(data.msg);\n          });\n          // 用户上线提醒广播\n          ws.$on(\"user_online\", (data) => {\n            this.userOnline = data;\n          });\n          // 用户未读消息条数更改\n          ws.$on(\"mssage_num\", (data) => {\n            if (data.num > 0) {\n              mp3.play();\n            }\n            this.chatList.forEach((item) => {\n              if (item.to_uid == data.uid) {\n                item.mssage_num = data.num;\n              }\n            });\n            if (data.recored.id) {\n              this.newRecored = data.recored;\n            }\n          });\n          ws.$on(\"timeout\", (data) => {\n              this.isShow = false;\n              this.wsRestart();\n          });\n          ws.$on('close',() => {\n            this.toChat = false;\n            this.isShow = false;\n          })\n          // ws登录成功\n          ws.$on(\"success\", (data) => {\n            this.isShow = true;\n            if (!this.toChat && this.userActive.to_uid) {\n              ws.send({\n                data: {\n                  id: this.userActive.to_uid,\n                },\n                type: \"to_chat\",\n              });\n            }\n          });\n        })\n        .catch((error) => {\n          this.wsRestart();\n        });\n    },\n    //微信截图上传图片时触发\n    handleParse(e) {\n      let file = null;\n      if (\n        e.clipboardData &&\n        e.clipboardData.items[0] &&\n        e.clipboardData.items[0].type &&\n        e.clipboardData.items[0].type.indexOf(\"image\") > -1\n      ) {\n        //这里就是判断是否有粘贴进来的文件且文件为图片格式\n        file = e.clipboardData.items[0].getAsFile();\n      } else {\n        this.$message({\n          type: \"warning\",\n          message:\n            \"上传的文件必须为图片且无法复制本地图片且无法同时复制多张图片\",\n        });\n        return;\n      }\n      this.update(file);\n    },\n    update(e) {\n      // 上传照片\n      let file = e;\n      let param = new FormData(); // 创建form对象\n      param.append(\"filename\", \"file\"); // 通过append向form对象添加数据进去\n      param.append(\"file\", file); // 通过append向form对象添加数据进去\n      // 添加请求头\n      uploadImg(param).then((res) => {\n        this.sendMsg(res.data.url, 3);\n      });\n    },\n    beforeUpload() {},\n    wsRestart() {\n      if(!this.bus.pageWs){\n        this.bus.pageWs = Socket(true);\n        this.wsAgain();\n      }\n    },\n    handleFormatError(file) {\n      this.$Message.error(\"上传图片只能是 jpg、jpg、jpeg、gif 格式!\");\n    },\n    bindEnter(e) {\n      if (e.target.value == \"\") {\n        return this.$Message.error(\"请输入消息\");\n      }\n      this.sendMsg(e.target.value, 1);\n      this.chatCon = \"\";\n    },\n    // 上传成功\n    handleSuccess(res, file, fileList) {\n      if (res.status === 200) {\n        this.$Message.success(res.msg);\n        this.sendMsg(res.data.url, 3);\n      } else {\n        this.$Message.error(res.msg);\n      }\n    },\n    // 订单详情\n    lookOrder(item) {\n\t  this.isReturen = item.msn_type == 7\n      this.orderId = item.orderInfo.id;\n      this.isOrder = true;\n    },\n    setOnline(data) {\n      this.bus.pageWs.then((ws) => {\n        ws.send({\n          data: {\n            online: data,\n          },\n          type: \"online\",\n        });\n      });\n      this.online = data;\n    },\n    // 阻止浏览器默认换行操作\n    listen(e) {\n      if (e.keyCode == 13) {\n        e.preventDefault();\n        return false;\n      }\n    },\n    // 输入框选择表情\n    select(data) {\n      let val = `[${data}]`;\n      this.chatCon += val;\n      this.isEmoji = false;\n    },\n    // 聊天表情转换\n    replace_em(str) {\n      str = str.replace(/\\[em-([\\s\\S]*)\\]/g, \"<span class='em em-$1'/></span>\");\n      return str;\n    },\n\t\tchangeLen(len){\n\t\t\tthis.touristLen = len;\n\t\t},\n    // 获取是否游客\n    changeType(data) {\n      this.tourist = data;\n    },\n    // 获取列表用户信息\n    setDataId(data) {\n      this.userActive = data;\n      this.toChat = false;\n      this.chatList = [];\n      this.upperId = 0;\n      this.oldHeight = 0;\n      this.isScroll = true;\n      if (data) {\n        window.document.title = data.nickname\n          ? `正在和${data.nickname}对话中 - ${this.kefuInfo.site_name}`\n          : \"正在和游客对话中 - \" + this.kefuInfo.site_name;\n\n        if (this.isShow) {\n          this.bus.pageWs.then((ws) => {\n            ws.send({\n              data: {\n                id: this.userActive.to_uid,\n              },\n              type: \"to_chat\",\n            });\n            this.toChat = true;\n          });\n        }\n        this.getChatList();\n        this.$refs.textBox.focus();\n      } else {\n        window.document.title = this.kefuInfo.site_name;\n      }\n    },\n    msgClose() {\n      this.isTransfer = false;\n    },\n    // 话术选中\n    activeTxt(data) {\n      this.chatCon = data;\n      this.isMsg = false;\n    },\n    // 文本发送\n    sendText() {\n      this.sendMsg(this.chatCon, 1);\n      this.chatCon = \"\";\n    },\n\n    // 统一发送处理\n    sendMsg(msn, type) {\n      let obj = {\n        type: \"chat\",\n        data: {\n          msn,\n          type,\n          to_uid: this.userActive.to_uid,\n          is_tourist: this.tourist,\n        },\n      };\n      this.bus.pageWs.then((ws) => {\n        ws.send(obj);\n      });\n    },\n    send(type, data) {\n      Socket.send({\n        data,\n        type,\n      });\n    },\n    // 获取聊天列表\n    getChatList() {\n      serviceList({\n        limit: this.limit,\n        uid: this.userActive.to_uid,\n        upperId: this.upperId,\n        is_tourist: this.tourist,\n      }).then((res) => {\n        res.data.forEach((el) => {\n          if (el.msn_type == 1) {\n            el.msn = this.replace_em(el.msn);\n          } else if (el.msn_type == 2) {\n            el.msn = this.replace_em(`[${el.msn}]`);\n          }\n        });\n        let selector = \"\";\n        if (this.upperId == 0) {\n          selector = \"\";\n        } else {\n          selector = `chat_${this.chatList[0].id}`;\n        }\n\n        // this.chatList = res.data.concat(this.chatList)\n        this.chatList = [...res.data, ...this.chatList];\n        this.upperId = res.data.length > 0 ? res.data[0].id : 0;\n        this.isLoad = false;\n        this.$nextTick(() => {\n          // this.scrollToTop()\n          this.isScroll = res.data.length >= this.limit;\n          this.setPageScrollTo(selector);\n        });\n      });\n    },\n    // 设置页面滚动位置\n    setPageScrollTo(selector) {\n      this.$nextTick(() => {\n        if (selector) {\n          setTimeout(() => {\n            let num =\n              parseFloat(document.getElementById(selector).offsetTop) - 60;\n            this.scrollTop = num;\n          }, 0);\n        } else {\n          var container = document.querySelector(\"#chat_scroll\");\n          this.scrollTop = container.offsetHeight;\n          setTimeout((res) => {\n            if (this.scrollTop != this.$refs.scrollBox.offsetHeight) {\n              this.scrollTop = document.querySelector(\n                \"#chat_scroll\"\n              ).offsetHeight;\n            }\n          }, 300);\n        }\n      });\n    },\n    // 滚动到顶部\n    scrollHandler() {\n      let self = this;\n      if (this.isScroll && this.upperId) {\n        this.isLoad = true;\n        this.getChatList();\n      }\n    },\n    // 滚动条动画\n    scrollToTop(duration) {\n      var container = document.querySelector(\"#chat_scroll\");\n      this.scrollTop = container.offsetHeight - this.oldHeight;\n      setTimeout((res) => {\n        this.scrollTop = this.$refs.scrollBox.offsetHeight - this.oldHeight;\n      }, 300);\n    },\n    // 商品推送\n    bindPush(data) {\n      this.sendMsg(data, 5);\n    },\n    // 商品详情\n    lookGoods(item) {\n      this.goodsId = item.msn;\n      this.isProductBox = true;\n    },\n    // 搜索用户\n    bindSearch(data) {\n      this.searchData = data;\n      this.oldHeight = 0;\n      this.upperId = 0;\n      this.isScroll = false;\n    },\n    // 客服转接\n    transferPeople(data) {\n      this.transferId = data.id;\n      this.isTransfer = false;\n      this.$Message.success(\"转接成功\");\n      this.bus.pageWs.then((ws) => {\n        ws.send({\n          type: \"to_chat\",\n          data: { id: data.uid },\n        });\n      });\n    },\n    // 客服转接确定\n    transferOk() {},\n  },\n};\n",null]}