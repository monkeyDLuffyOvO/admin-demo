{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/setting/special/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/setting/special/list.vue","mtime":1640264908000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Setting from '@/setting';\nimport ClipboardJS from \"clipboard\";\nimport { diyList, diyDel, setStatus } from '@/api/diy'\nimport { mapState } from 'vuex';\nexport default {\n    name: 'devise_list',\n    data () {\n        return {\n            grid: {\n                xl: 7,\n                lg: 7,\n                md: 12,\n                sm: 24,\n                xs: 24\n            },\n            loading: false,\n            columns1: [\n                {\n                    title: '页面ID',\n                    key: 'id',\n                    minWidth: 120\n                },\n                {\n                    title: '专题页名称',\n                    key: 'title',\n                    minWidth: 120\n                },\n                {\n                    title: '专题链接',\n                    slot: 'link',\n                    minWidth: 300\n                },\n                {\n                    title: '添加时间',\n                    key: 'add_time',\n                    minWidth: 120\n                },\n                {\n                    title: '更新时间',\n                    key: 'update_time',\n                    minWidth: 120\n                },\n                {\n                    title: '操作',\n                    slot: 'action',\n                    fixed: 'right',\n                    minWidth: 300\n                }\n            ],\n            list: [],\n            total: 0,\n            page: 1,\n            limit: 15,\n            BaseURL: Setting.apiBaseURL.replace(/adminapi/, \"\")\n        }\n    },\n    created () {\n        this.getList()\n    },\n    mounted: function() {\n        this.$nextTick(function() {\n            const clipboard = new ClipboardJS('.copy-data');\n            clipboard.on(\"success\", () => {\n                this.$Message.success('复制预览链接成功');\n            });\n        });\n    },\n    methods: {\n        // 获取列表\n        getList () {\n            this.loading = true\n            diyList({\n                type:2,\n                page: this.page,\n                limit: this.limit\n            }).then(res => {\n                this.loading = false\n                this.list = res.data.list\n                this.total = res.data.count\n            })\n        },\n        // 编辑\n        edit (row) {\n            this.$router.push({ path: '/admin/pages/special/diy', query: { id: row.id, name: row.name, type: row.type } });\n        },\n        // 添加\n        add () {\n            this.$router.push({ path: '/admin/pages/special/diy', query: { id: 0, name: '首页', type: 2 } });\n        },\n        // 删除\n        del(row) {\n            let delfromData = {\n                title: \"删除\",\n                num: 2000,\n                url: \"diy/del/\" + row.id,\n                method: \"DELETE\",\n                data: {\n                    type: 2,\n                },\n            };\n            this.$modalSure(delfromData)\n                .then((res) => {\n                    this.getList();\n                })\n                .catch((res) => {\n                    this.$Message.error(res.msg);\n                });\n        },\n        // 使用模板\n        setStatus (row) {\n            setStatus(row.id).then(res => {\n                this.$Message.success(res.msg);\n                this.getList()\n            })\n        },\n        pageChange (index) {\n            this.page = index\n            this.getList()\n        }\n    }\n}\n",null]}