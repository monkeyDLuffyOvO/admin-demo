{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/store/order/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/store/order/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\nimport Distribution from \"./components/distribution.vue\";\nimport expandRow from \"./components/tableExpand.vue\";\nimport userDetails from \"@/pages/user/list/handle/userDetails\";\nimport editFrom from \"@/components/from/from\";\nimport orderSend from \"./components/orderSend\";\nimport detailsFrom from \"./components/orderDetails\";\nimport orderRecord from \"./components/orderRecord\";\nimport orderRemark from \"./components/orderRemark\";\nimport {\n  orderList,\n  orderChart,\n  orderHeader,\n  orderRecharge,\n  orderVip,\n  getOrdeDatas, //编辑表单数据\n  getDistribution,\n  writeUpdate,\n  getDataInfo,\n  orderExport,\n  staffListInfo,\n} from \"@/api/store\";\nimport { erpConfig } from \"@/api/erp\";\nimport timeOptions from \"@/utils/timeOptions\";\n// import {\n// \tstaffListInfo\n// } from '@/api/staff';\nexport default {\n  name: \"index\",\n  components: {\n    userDetails,\n    editFrom,\n    detailsFrom,\n    orderRecord,\n    orderRemark,\n    orderSend,\n    expandRow,\n    Distribution,\n  },\n  data() {\n    return {\n\t  openErp:false,\n      distshow: false, //分配的弹窗\n      delfromData: {},\n      pay_type: \"\",\n      status: 0, //发货状态判断\n      FromData: null,\n      orderDatalist: null,\n      orderId: 0,\n      treeSelect: [\n        {\n          id: \"free\",\n          label: \"试用\",\n        },\n        {\n          id: \"month\",\n          label: \"月卡\",\n        },\n        {\n          id: \"quarter\",\n          label: \"季卡\",\n        },\n        {\n          id: \"year\",\n          label: \"年卡\",\n        },\n        {\n          id: \"ever\",\n          label: \"永久\",\n        },\n        {\n          id: \"card\",\n          label: \"卡密激活\",\n        },\n      ],\n      staffData: [],\n      tablists: {},\n      orderChartType: {},\n      options: timeOptions,\n      timeVal: [],\n      // 订单列表\n      orderData: {\n        page: 1,\n        limit: 10,\n        type: 6,\n        status: \"\",\n        time: \"\",\n        real_name: \"\",\n        store_id: \"\",\n      },\n      // 充值订单搜索\n      rechargeData: {\n        nickname: \"\",\n        limit: 15,\n      },\n      // 会员订单搜索\n      vipData: {\n        member_type: \"\",\n        limit: 15,\n      },\n      currentTab: \"6\",\n      tableList: [],\n      total: 0,\n      loading: false,\n      rechargeColumns: [\n        {\n          title: \"ID\",\n          key: \"id\",\n          width: 60,\n        },\n        {\n          title: \"订单号\",\n          key: \"order_id\",\n          minWidth: 180,\n        },\n        {\n          title: \"用户信息\",\n          slot: \"userInfo\",\n          minWidth: 160,\n        },\n        {\n          title: \"支付金额\",\n          key: \"price\",\n          minWidth: 110,\n        },\n        {\n          title: \"充值类型\",\n          key: \"_recharge_type\",\n          minWidth: 100,\n        },\n        {\n          title: \"支付时间\",\n          key: \"_pay_time\",\n          minWidth: 130,\n        },\n        {\n          title: \"关联店员\",\n          key: \"_recharge_type\",\n          minWidth: 100,\n        },\n        {\n          title: \"操作\",\n          slot: \"action\",\n          fixed: \"right\",\n          minWidth: 200,\n          align: \"center\",\n        },\n      ],\n      vipColumns: [\n        {\n          title: \"订单号\",\n          key: \"order_id\",\n          minWidth: 180,\n        },\n        {\n          title: \"用户信息\",\n          slot: \"userInfo\",\n          minWidth: 180,\n        },\n        {\n          title: \"会员类型\",\n          key: \"member_type\",\n          minWidth: 100,\n        },\n        {\n          title: \"有效期限（天）\",\n          minWidth: 100,\n          render: (h, params) => {\n            return h(\n              \"span\",\n              params.row.vip_day === -1 ? \"永久\" : params.row.vip_day\n            );\n          },\n        },\n        {\n          title: \"支付金额\",\n          key: \"pay_price\",\n          minWidth: 100,\n        },\n        {\n          title: \"支付方式\",\n          key: \"pay_type\",\n          minWidth: 100,\n        },\n        {\n          title: \"购买时间\",\n          key: \"pay_time\",\n          minWidth: 130,\n        },\n        {\n          title: \"关联店员\",\n          key: \"pay_time\",\n          minWidth: 130,\n        },\n        {\n          title: \"操作\",\n          slot: \"action\",\n          fixed: \"right\",\n          minWidth: 200,\n          align: \"center\",\n        },\n      ],\n      columns: [\n        {\n          type: \"expand\",\n          width: 30,\n          render: (h, params) => {\n            return h(expandRow, {\n              props: {\n                row: params.row,\n              },\n            });\n          },\n        },\n        {\n          title: \"订单号\",\n          slot: \"order_id\",\n          minWidth: 160,\n        },\n        {\n          title: \"用户信息\",\n          slot: \"userInfo\",\n          minWidth: 120,\n        },\n        {\n          title: \"商品信息\",\n          slot: \"info\",\n          minWidth: 350,\n        },\n        {\n          title: \"实际支付\",\n          slot: \"pay_price\",\n          minWidth: 120,\n        },\n        {\n          title: \"支付方式\",\n          key: \"pay_type_name\",\n          minWidth: 120,\n        },\n        {\n          title: \"收银店员\",\n          key: \"clerk_name\",\n          minWidth: 120,\n        },\n        {\n          title: \"下单时间\",\n          key: \"add_time\",\n          minWidth: 150,\n        },\n        {\n          title: \"订单状态\",\n          slot: \"statusName\",\n          minWidth: 120,\n        },\n        {\n          title: \"操作\",\n          slot: \"action\",\n          fixed: \"right\",\n          minWidth: 200,\n          align: \"center\",\n        },\n      ],\n      rowActive: {},\n    };\n  },\n  computed: {\n    ...mapState(\"admin/layout\", [\"isMobile\"]),\n    labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    },\n  },\n  created() {\n\tthis.getErpConfig();\n    this.getTabs();\n    this.getChart();\n    this.staffList();\n    this.getList();\n  },\n  mounted() {},\n  methods: {\n\tgetErpConfig(){\n\t\terpConfig().then(res=>{\n\t\t\tthis.openErp = res.data.open_erp;\n\t\t}).catch(err=>{\n\t\t\tthis.$Message.error(err.msg);\n\t\t})\n\t},  \n    remark(row) {\n      this.orderId = row.id;\n      this.$refs.remarks.modals = true;\n      switch (this.currentTab) {\n        case \"3\":\n        case \"4\":\n          this.$refs.remarks.currentTab(this.currentTab, row.remarks);\n          break;\n        default:\n          this.$refs.remarks.currentTab(this.currentTab, row.remark);\n      }\n    },\n    detail(row) {\n      this.orderId = row.id;\n      this.getData(row.id);\n      this.rowActive = row;\n    },\n    distribution(row) {\n      this.$refs.distshow.modals = true;\n      this.$refs.distshow.getList(row.id);\n    },\n    record(row) {\n      this.orderId = row.id;\n      this.$refs.record.modals = true;\n      this.$refs.record.getList(row.id);\n    },\n    // 查看子订单\n    splitOrderDetail(row) {\n      this.$router.push({\n        path: \"split_list\",\n        query: {\n          id: row.id,\n        },\n      });\n    },\n    // 删除单条订单\n    delOrder(row, data) {\n      if (row.is_del === 1) {\n        this.$modalSure(data)\n          .then((res) => {\n            this.$Message.success(res.msg);\n            this.getList();\n          })\n          .catch((res) => {\n            this.$Message.error(res.msg);\n          });\n      } else {\n        const title = \"错误！\";\n        const content =\n          \"<p>您选择的的订单存在用户未删除的订单，无法删除用户未删除的订单！</p>\";\n        this.$Modal.error({\n          title: title,\n          content: content,\n        });\n      }\n    },\n    // 获取详情表单数据\n    getData(id, type) {\n      getDataInfo(id)\n        .then(async (res) => {\n          if (!type) {\n            this.$refs.detailss.modals = true;\n          }\n          this.$refs.detailss.activeName = \"detail\";\n          this.orderDatalist = res.data;\n          if (this.orderDatalist.orderInfo.refund_reason_wap_img) {\n            try {\n              this.orderDatalist.orderInfo.refund_reason_wap_img = JSON.parse(\n                this.orderDatalist.orderInfo.refund_reason_wap_img\n              );\n            } catch (e) {\n              this.orderDatalist.orderInfo.refund_reason_wap_img = [];\n            }\n          }\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 立即核销\n    bindWrite(row) {\n      let self = this;\n      this.$Modal.confirm({\n        title: \"提示\",\n        content: \"确定要核销该订单吗？\",\n        cancelText: \"取消\",\n        closable: true,\n        maskClosable: true,\n        onOk: function () {\n          writeUpdate(row.order_id).then((res) => {\n            self.$Message.success(res.msg);\n            self.getList();\n          });\n        },\n        onCancel: () => {},\n      });\n    },\n    // 配送信息表单数据\n    delivery(row) {\n      getDistribution(row.id)\n        .then(async (res) => {\n          this.FromData = res.data;\n          this.$refs.edits.modals = true;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 编辑\n    edit(row) {\n      this.getOrderData(row.id);\n    },\n    // 获取编辑表单数据\n    getOrderData(id) {\n      getOrdeDatas(id)\n        .then(async (res) => {\n          if (res.data.status === false) {\n            return this.$authLapse(res.data);\n          }\n          this.$authLapse(res.data);\n          this.FromData = res.data;\n          this.$refs.edits.modals = true;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 修改成功(编辑只有未支付时出现)\n    submitFail() {\n      this.status = 0;\n      if (this.currentTab == 3) {\n        this.getRecharge();\n      } else if (this.currentTab == 4) {\n        this.getVipOrder();\n      } else {\n        this.getList();\n        this.getData(this.orderId, 1);\n      }\n    },\n    // 发送货\n    sendOrder(row) {\n      this.$store.commit(\"admin/order/setSplitOrder\", row.total_num);\n      this.$refs.send.modals = true;\n      this.orderId = row.id;\n      this.status = row._status;\n      this.pay_type = row.pay_type;\n      this.$refs.send.getList();\n      this.$refs.send.getDeliveryList();\n      this.$nextTick((e) => {\n        this.$refs.send.getCartInfo(row._status, row.id);\n      });\n    },\n    // 详情\n    showUserInfo(row) {\n      this.$refs.userDetails.modals = true;\n      this.$refs.userDetails.activeName = \"info\";\n      this.$refs.userDetails.getDetails(row.uid);\n    },\n    // 初始化数据\n    clearData() {\n      this.orderData = {\n        page: 1,\n        limit: 15,\n        type: 6,\n        status: \"\",\n        time: \"\",\n        real_name: \"\",\n        store_id: \"\",\n      };\n      this.rechargeData = {\n        nickname: \"\",\n        limit: 15,\n      };\n      this.vipData = {\n        member_type: \"\",\n        limit: 15,\n      };\n    },\n    // 店员列表\n    staffList() {\n      let data = {\n        page: 0,\n        limit: 0,\n      };\n      staffListInfo()\n        .then((res) => {\n          this.staffData = res.data;\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n    // 获取门店订单头部统计\n    getTabs() {\n      orderHeader()\n        .then((res) => {\n          this.tablists = res.data;\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n    // 订单头部数据\n    getChart() {\n      orderChart({ type: this.currentTab })\n        .then((res) => {\n          this.orderChartType = res.data;\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n    // 编辑\n    edit(row) {\n      this.getOrderData(row.id);\n    },\n    //点击切换头部\n    onClickTab() {\n      this.clearData();\n      this.orderData.type = this.currentTab;\n      this.orderData.page = 1;\n      this.timeVal = [];\n      this.getChart();\n      this.searchList();\n    },\n    // 不同类型订单调用列表；\n    searchList() {\n      if (this.currentTab == 3) {\n        this.getRecharge();\n      } else if (this.currentTab == 4) {\n        this.getVipOrder();\n      } else {\n        this.getList();\n      }\n    },\n    // 搜索店员或店员选择\n    userSearchs() {\n      this.orderData.page = 1;\n      this.searchList();\n    },\n    // 切换订单状态\n    selectStatus() {\n      this.orderData.page = 1;\n      this.getList();\n    },\n    // 付费会员订单列表\n    getVipOrder() {\n      this.loading = true;\n      this.tableList = [];\n      this.vipData.name = this.rechargeData.nickname;\n      this.vipData.add_time = this.orderData.time;\n      this.vipData.store_id = this.orderData.store_id;\n      this.vipData.page = this.orderData.page;\n      orderVip(this.vipData)\n        .then((res) => {\n          let data = res.data;\n          this.tableList = data.list;\n          this.total = data.count;\n          this.loading = false;\n        })\n        .catch((err) => {\n          this.loading = false;\n          this.$Message.error(err.msg);\n        });\n    },\n    // 充值订单\n    getRecharge() {\n      this.loading = true;\n      this.tableList = [];\n      this.rechargeData.data = this.orderData.time;\n      this.rechargeData.store_id = this.orderData.store_id;\n      this.rechargeData.page = this.orderData.page;\n      orderRecharge(this.rechargeData)\n        .then((res) => {\n          let data = res.data;\n          this.tableList = data.list;\n          this.total = data.count;\n          this.loading = false;\n        })\n        .catch((err) => {\n          this.loading = false;\n          this.$Message.error(err.msg);\n        });\n    },\n    // 一般订单\n    getList() {\n      this.loading = true;\n      this.tableList = [];\n      orderList(this.orderData)\n        .then((res) => {\n          let data = res.data;\n          data.data.forEach((item) => {\n            if (item.id == this.orderId) {\n              this.rowActive = item;\n            }\n          });\n          this.tableList = data.data;\n          this.total = data.count;\n          this.loading = false;\n        })\n        .catch((err) => {\n          this.loading = false;\n          this.$Message.error(err.msg);\n        });\n    },\n    pageChange(index) {\n      this.orderData.page = index;\n      this.searchList();\n    },\n    // 搜索\n    orderSearch() {\n      this.orderData.page = 1;\n      this.searchList();\n    },\n    // 具体日期\n    onchangeTime(e) {\n      this.timeVal = e;\n      this.orderData.time = this.timeVal.join(\"-\");\n      this.orderData.page = 1;\n      if (!e[0]) {\n        this.orderData.time = \"\";\n      }\n      this.searchList();\n    },\n    // 选择时间\n    selectChange() {\n      this.orderData.page = 1;\n      this.timeVal = [];\n      this.searchList();\n    },\n    getExcelData(excelData) {\n      return new Promise((resolve, reject) => {\n        let type = 1;\n        if (\n          this.currentTab == 6 ||\n          this.currentTab == 7 ||\n          this.currentTab == 5\n        ) {\n          type = 1;\n        } else if (this.currentTab == 3) {\n          type = 2;\n        } else {\n          type = 3;\n        }\n        orderExport(excelData, type).then((res) => {\n          return resolve(res.data);\n        });\n      });\n    },\n  },\n};\n",null]}