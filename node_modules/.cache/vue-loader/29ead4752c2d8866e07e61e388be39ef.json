{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/marketing/live/add_goods.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/marketing/live/add_goods.vue","mtime":1649819790000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapState} from \"vuex\";\nimport goodsList from '@/components/goodsList'\nimport { liveGoodsCreat,liveGoodsAdd } from '@/api/live'\nexport default {\n    name: \"add_goods\",\n    components: {\n        goodsList,\n    },\n    computed: {\n        ...mapState('admin/layout', [\n            'isMobile'\n        ]),\n        labelWidth () {\n            return this.isMobile ? undefined : 100;\n        },\n        labelPosition () {\n            return this.isMobile ? 'top' : 'right';\n        }\n    },\n    data(){\n        return {\n            isShowBox:false,\n            loading:false,\n            modals: false,\n            goodsList: [],\n            tempGoods: {},\n            formValidate:{},\n            columns1:[\n                {\"key\": \"id\", \"title\": \"商品ID\", },\n                {\"slot\": \"img\",  \"title\": \"商品信息\",minWidth:250},\n                {\"key\": \"price\",  \"title\": \"直播售价\",\n                    render: (h, params) => {\n                        return h('Input', {\n                            props: {\n                                type: 'number',\n                                value: params.row.price,\n                            },\n                            on: {\n                                'input': (val) => {\n                                    this.tabList[params.index].price = val;\n                                },\n                            },\n                        });\n                    },\n                },\n                {\"key\": \"cost_price\",  \"title\": \"直播原价\",\n                    render: (h, params) => {\n                        return h('Input', {\n                            props: {\n                                type: 'number',\n                                value: params.row.cost_price,\n                            },\n                            on: {\n                                'input': (val) => {\n                                    this.tabList[params.index].cost_price = val;\n                                },\n                            },\n                        });\n                    },\n                },\n                {\"key\": \"stock\",  \"title\": \"库存\"},\n                {\"slot\": \"action\", \"fixed\": \"right\", \"title\": \"操作\",}\n            ],\n            tabList:[],\n        }\n    },\n    methods:{\n        // 生成直播商品\n        liveGoods(){\n            let array = []\n            this.goodsList.map(el=>{\n                array.push(el.product_id)\n            })\n            liveGoodsCreat({\n                product_id:array\n            }).then(res=>{\n                this.tabList = res.data\n                this.isShowBox = true\n            }).catch(error=>{\n                this.$Message.error(error.msg)\n            })\n        },\n        getProductId (data) {\n            this.goodsList = this.goodsList.concat(data)\n            this.$nextTick(res=>{\n                setTimeout(()=>{\n                    this.modals = false\n                },300)\n            })\n        },\n        bindDelete (index) {\n            this.goodsList.splice(index, 1)\n        },\n        del(row,index){\n            this.tabList.splice(index,1)\n        },\n        // 提交\n        bindSub(){\n            liveGoodsAdd({\n                goods_info:this.tabList\n            }).then(res=>{\n                this.$Message.success('添加成功');\n                setTimeout(() => {\n                    this.$router.push({ path: '/admin/marketing/live/live_goods' });\n                }, 500);\n            }).catch(error=>{\n                this.$Message.error(error.msg)\n            })\n        }\n    }\n}\n",null]}