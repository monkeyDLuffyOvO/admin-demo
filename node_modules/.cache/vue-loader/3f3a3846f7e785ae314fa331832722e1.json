{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/setting/notification/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/setting/notification/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getNotificationList,\n  getNotificationInfo,\n  noticeStatus,\n} from \"@/api/notification.js\";\nimport { routineSyncTemplate, wechatSyncTemplate } from \"@/api/app\";\nexport default {\n  data() {\n    return {\n      modalTitle: \"\",\n      notificationModal: false,\n      headerList: [\n        { label: \"通知会员\", value: \"1\" },\n        { label: \"通知平台\", value: \"2\" },\n      ],\n      columns: [\n        {\n          title: \"ID\",\n          key: \"id\",\n          align: \"center\",\n          width: 50,\n        },\n        {\n          title: \"通知类型\",\n          slot: \"name\",\n          align: \"center\",\n          width: 200,\n        },\n        {\n          title: \"通知场景说明\",\n          slot: \"title\",\n          align: \"center\",\n          minWidth: 200,\n        },\n        {\n          title: \"站内信\",\n          slot: \"is_system\",\n          align: \"center\",\n          minWidth: 100,\n        },\n        {\n          title: \"公众号模板\",\n          slot: \"is_wechat\",\n          align: \"center\",\n          minWidth: 100,\n        },\n        {\n          title: \"小程序订阅\",\n          slot: \"is_routine\",\n          align: \"center\",\n          minWidth: 100,\n        },\n        {\n          title: \"发送短信\",\n          slot: \"is_sms\",\n          align: \"center\",\n          minWidth: 100,\n        },\n        {\n          title: \"企业微信\",\n          slot: \"is_ent_wechat\",\n          align: \"center\",\n          minWidth: 100,\n        },\n        {\n          title: \"设置\",\n          slot: \"setting\",\n          width: 150,\n          align: \"center\",\n        },\n      ],\n      levelLists: [],\n      currentTab: \"1\",\n      loading: false,\n      formData: {},\n      industry: null,\n    };\n  },\n  created() {\n    this.changeTab(this.currentTab);\n  },\n  methods: {\n    changeSwitch(row, item) {\n      noticeStatus(item, row[item], row.id)\n        .then((res) => {\n          this.$Message.success(res.msg);\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n    changeTab(data) {\n      getNotificationList(data).then((res) => {\n        this.levelLists = res.data.list;\n        this.industry = res.data.industry;\n      });\n    },\n    // 同步订阅消息\n    syncTemplate() {\n      routineSyncTemplate()\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.changeTab(this.currentTab);\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n\t\t// 同步公众号模板消息\n\t\twechatTemplate() {\n\t\t  wechatSyncTemplate()\n\t\t    .then((res) => {\n\t\t      this.$Message.success(res.msg);\n\t\t      this.changeTab(this.currentTab);\n\t\t    })\n\t\t    .catch((res) => {\n\t\t      this.$Message.error(res.msg);\n\t\t    });\n\t\t},\n    // 开启关闭\n    changeStatus() {},\n    // 列表\n    notice() {},\n    // 设置\n    setting(item, row) {\n      this.$router.push({\n        path: \"/admin/setting/notification/notificationEdit?id=\" + row.id,\n      });\n    },\n    getData(keys, row, item) {\n      this.formData = {};\n      getNotificationInfo(row.id, item).then((res) => {\n        keys.map((i, v) => {\n          this.formData[i] = res.data[i];\n        });\n        this.formData.type = item;\n        this.notificationModal = true;\n      });\n    },\n  },\n};\n",null]}