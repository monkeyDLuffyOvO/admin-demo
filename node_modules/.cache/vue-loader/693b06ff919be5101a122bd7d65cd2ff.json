{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/setting/notification/notificationEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/setting/notification/notificationEdit.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getNotificationInfo,\n  getNotificationSave,\n} from \"@/api/notification.js\";\nexport default {\n  data() {\n    return {\n      tabs: [\n        {\n          title: \"系统通知\",\n          slot: \"is_system\",\n        },\n        {\n          title: \"短信通知\",\n          slot: \"is_sms\",\n        },\n        {\n          title: \"微信模板消息\",\n          slot: \"is_wechat\",\n        },\n        {\n          title: \"微信小程序提醒\",\n          slot: \"is_routine\",\n        },\n        {\n          title: \"企业微信\",\n          slot: \"is_ent_wechat\",\n        },\n      ],\n      tabsList: [],\n      formData: {},\n      id: 0,\n      loading: true,\n      ruleValidate: {\n        name: [\n          {\n            required: true,\n            message: \"请输入通知场景\",\n            trigger: \"blur\",\n          },\n        ],\n        title: [\n          {\n            required: true,\n            message: \"请输入通知场景\",\n            trigger: \"blur\",\n          },\n        ],\n        content: [\n          {\n            required: true,\n            message: \"请输入通知内容\",\n            trigger: \"blur\",\n          },\n        ],\n      },\n    };\n  },\n  created() {\n    this.id = this.$route.query.id;\n    this.changeTabs(\"is_system\");\n  },\n  methods: {\n    changeTabs(name) {\n      this.getData(this.id, name);\n    },\n    getData(id, name) {\n      this.loading = true;\n      this.formData = {};\n      getNotificationInfo(id, name)\n        .then((res) => {\n          if (!this.tabsList.length) {\n            this.tabs.map((v) => {\n              if (res.data[v.slot]) {\n                this.tabsList.push(v);\n              }\n            });\n          }\n          this.formData = res.data;\n          this.formData.type = name;\n          this.formData.id = id;\n          this.loading = false;\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n    handleSubmit(name) {\n      getNotificationSave(this.formData)\n        .then((res) => {\n          this.$Message.success(\"设置成功\");\n        })\n        .catch((err) => {\n          this.$Message.error(err);\n        });\n    },\n    handleReset(name) {\n      this.$emit(\"close\");\n    },\n  },\n};\n",null]}