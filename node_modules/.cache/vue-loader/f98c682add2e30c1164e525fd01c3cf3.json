{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/product/label/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/product/label/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\nimport {\n  productLabelCate,\n  labelCateCreate,\n  productLabelEdit,\n  productLabel,\n} from \"@/api/product\";\nexport default {\n  name: \"label\",\n  data() {\n    return {\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      loading: false,\n      columns1: [\n        {\n          title: \"ID\",\n          key: \"id\",\n          width: 60,\n        },\n        {\n          title: \"标签分组\",\n          key: \"name\",\n          minWidth: 60,\n        },\n        {\n          title: \"商品标签\",\n          slot: \"labelName\",\n          minWidth: 400,\n        },\n        {\n          title: \"排序\",\n          key: \"sort\",\n          width: 60,\n        },\n        {\n          title: \"创建时间\",\n          key: \"add_time\",\n          minWidth: 100,\n        },\n        {\n          title: \"操作\",\n          slot: \"action\",\n          fixed: \"right\",\n          minWidth: 120,\n        },\n      ],\n      LabelCateFrom: {\n        page: 1,\n        limit: 15,\n        name: \"\",\n      },\n      list: [],\n      total: 0,\n    };\n  },\n  computed: {\n    ...mapState(\"admin/layout\", [\"isMobile\"]),\n    labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    },\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    addLabel(row) {\n      let data = {\n        id: 0,\n        label_cate: row.id,\n        label_name: row.labelVal,\n      };\n      productLabel(data)\n        .then((res) => {\n          this.getList();\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n    addInput(row) {\n      row.isShow = true;\n    },\n    labelCateSearchs() {\n      this.LabelCateFrom.page = 1;\n      this.list = [];\n      this.getList();\n    },\n    // 添加\n    add() {\n      this.$modalForm(labelCateCreate()).then(() => this.getList());\n    },\n    // 标签列表\n    getList() {\n      this.loading = true;\n      productLabelCate(this.LabelCateFrom)\n        .then((res) => {\n          let data = res.data;\n          data.list.forEach((item) => {\n            item.isShow = false;\n            item.labelVal = \"\";\n          });\n          this.list = data.list;\n          this.total = data.count;\n          this.loading = false;\n        })\n        .catch((err) => {\n          this.loading = false;\n          this.$Message.error(err.msg);\n        });\n    },\n    pageChange(index) {\n      this.LabelCateFrom.page = index;\n      this.getList();\n    },\n    //修改\n    edit(id) {\n      this.$modalForm(productLabelEdit(id)).then(() => this.getList());\n    },\n    delLabel(row, tit, num) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `product/label/${row[num].id}`,\n        method: \"DELETE\",\n        ids: \"\",\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.getList();\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n    // 删除\n    del(row, tit, num) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `product/label_cate/${row.id}`,\n        method: \"DELETE\",\n        ids: \"\",\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.list.splice(num, 1);\n\t\t\t\t\tif (!this.list.length) {\n\t\t\t\t\t  this.LabelCateFrom.page =\n\t\t\t\t\t    this.LabelCateFrom.page == 1 ? 1 : this.LabelCateFrom.page - 1;\n\t\t\t\t\t}\n\t\t\t\t\tthis.getList();\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n  },\n};\n",null]}