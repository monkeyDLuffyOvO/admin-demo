{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/supplier/orderStatistics/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/supplier/orderStatistics/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex'\nimport Cardbox from '@/components/cards/cards.vue'\nimport Echarts from '@/components/echartsNew/index.vue'\nimport echartsFrom from '@/components/echarts/index'\nimport {\n  homeHeader,\n  getSupplierList,\n  homeOrder,\n  orderChannel,\n  orderType,\n  homeSupplier,\n} from '@/api/supplier'\nimport { formatDate } from '@/utils/validate'\nexport default {\n  name: '',\n  components: {\n    Cardbox,\n    Echarts,\n    echartsFrom,\n  },\n  props: {},\n  data() {\n    return {\n      active: 1,\n      active2: 3,\n\n      options: {\n        shortcuts: [\n          {\n            text: '今天',\n            value() {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(\n                new Date(\n                  new Date().getFullYear(),\n                  new Date().getMonth(),\n                  new Date().getDate()\n                )\n              )\n              return [start, end]\n            },\n          },\n          {\n            text: '昨天',\n            value() {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(\n                start.setTime(\n                  new Date(\n                    new Date().getFullYear(),\n                    new Date().getMonth(),\n                    new Date().getDate() - 1\n                  )\n                )\n              )\n              end.setTime(\n                end.setTime(\n                  new Date(\n                    new Date().getFullYear(),\n                    new Date().getMonth(),\n                    new Date().getDate() - 1\n                  )\n                )\n              )\n              return [start, end]\n            },\n          },\n          {\n            text: '最近7天',\n            value() {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(\n                start.setTime(\n                  new Date(\n                    new Date().getFullYear(),\n                    new Date().getMonth(),\n                    new Date().getDate() - 6\n                  )\n                )\n              )\n              return [start, end]\n            },\n          },\n          {\n            text: '最近30天',\n            value() {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(\n                start.setTime(\n                  new Date(\n                    new Date().getFullYear(),\n                    new Date().getMonth(),\n                    new Date().getDate() - 29\n                  )\n                )\n              )\n              return [start, end]\n            },\n          },\n          {\n            text: '本月',\n            value() {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(\n                start.setTime(\n                  new Date(new Date().getFullYear(), new Date().getMonth(), 1)\n                )\n              )\n              return [start, end]\n            },\n          },\n          {\n            text: '本年',\n            value() {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(\n                start.setTime(new Date(new Date().getFullYear(), 0, 1))\n              )\n              return [start, end]\n            },\n          },\n        ],\n      },\n      formValidate: {\n        supplier_id: '',\n        data: '',\n      },\n      timeVal: [],\n      optionData: {}, // 趋势图\n      infoList: {}, //  订单来源\n      infoList2: {}, // 订单类型\n      loading: false,\n      loading2: false,\n      style: { height: '400px' },\n      styles: { height: '400px' },\n      columns: [\n        {\n          title: '序号',\n          type: 'index',\n          width: 60,\n          align: 'center',\n        },\n        {\n          title: '来源',\n          key: 'name',\n          minWidth: 80,\n          align: 'center',\n        },\n        {\n          title: '金额',\n          width: 100,\n          key: 'value',\n          align: 'center',\n        },\n        {\n          title: '占比率',\n          slot: 'percent',\n          minWidth: 180,\n          align: 'center',\n        },\n      ],\n      tabList: [],\n      tabList2: [],\n      cardLists:[],\n      supplierColumns: [\n        {\n          title: '供应商信息',\n          key: 'supplier_name',\n          align: 'left',\n        },\n        {\n          title: '订单金额',\n          key: 'order_price',\n          align: 'left',\n        },\n        {\n          title: '订单数',\n          key: 'order_count',\n          align: 'left',\n        },\n        {\n          title: '退款金额',\n          key: 'refund_order_price',\n          align: 'left',\n        },\n        {\n          title: '退款订单数',\n          key: 'refund_order_count',\n          align: 'left',\n        },\n      ],\n      supplierName: [],\n      supplierList: [],\n      page: {\n        total: 0, // 总条数\n        pageNum: 1, // 当前页\n        pageSize: 10, // 每页显示条数\n      },\n    }\n  },\n  computed: {\n    ...mapState('admin/layout', ['isMobile']),\n    labelWidth() {\n      return this.isMobile ? undefined : 96\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right'\n    },\n  },\n  watch: {},\n  created() {\n    this.homeHeader()\n    this.getSupplierList()\n    this.homeOrder()\n    this.orderChannel()\n    this.orderType()\n    this.homeSupplier()\n    const end = new Date()\n    const start = new Date()\n    start.setTime(\n      start.setTime(\n        new Date(\n          new Date().getFullYear(),\n          new Date().getMonth(),\n          new Date().getDate() - 29\n        )\n      )\n    )\n    this.timeVal = [start, end]\n\n    this.formValidate.data =\n      formatDate(start, 'yyyy/MM/dd') + '-' + formatDate(end, 'yyyy/MM/dd')\n  },\n  mounted() {},\n  methods: {\n    // 具体日期\n    onchangeTime(e) {\n      this.timeVal = e\n      this.formValidate.data = this.timeVal.join('-')\n      this.homeHeader()\n      this.homeOrder()\n      this.orderChannel()\n      this.orderType()\n      this.homeSupplier()\n    },\n    // 选择供应商\n    selectChange() {\n      this.homeHeader()\n      this.homeOrder()\n      this.orderChannel()\n      this.orderType()\n      this.homeSupplier()\n    },\n    // 分页方法\n    pageChange(index) {\n      this.page.pageNum = index\n      thie.homeSupplier()\n    },\n    limitChange(limit) {\n      this.page.pageSize = limit\n      this.homeSupplier()\n    },\n    one(num) {\n      this.active = num\n    },\n    activeTwo(num) {\n      this.active2 = num\n    },\n    // 获取供应商内容\n    getSupplierList() {\n      getSupplierList()\n        .then(async (res) => {\n          this.supplierName = res.data\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg)\n        })\n    },\n    // 首页数据\n    homeHeader() {\n      homeHeader(this.formValidate)\n        .then(async (res) => {\n          let arr = ['pay_price', 'pay_count', 'refund_price', 'refund_count']\n          this.cardLists.map((i, index) => {\n            i.count = res.data[arr[index]]\n          })\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg)\n        })\n    },\n    // 趋势图\n    homeOrder() {\n      homeOrder(this.formValidate)\n        .then(async (res) => {\n          let legend = res.data.series.map((item) => {\n            return item.name\n          })\n          let xAxis = res.data.xAxis\n          let col = ['#5B8FF9', '#5AD8A6', '#FFAB2B', '#5D7092']\n          let series = []\n          res.data.series.map((item, index) => {\n            series.push({\n              name: item.name,\n              type: 'line',\n              data: item.data,\n              itemStyle: {\n                normal: {\n                  color: col[index],\n                },\n              },\n              smooth: 0,\n            })\n          })\n          this.optionData = {\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'cross',\n                label: {\n                  backgroundColor: '#6a7985',\n                },\n              },\n            },\n            legend: {\n              x: 'center',\n              data: legend,\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true,\n            },\n            toolbox: {\n            \tshow: true,\n\t\t\t\t\t\t\t\tright: '2%',\n              feature: {\n              \n                saveAsImage: {\n                  name: '营业趋势_'+formatDate(new Date(Number(new Date().getTime())), 'yyyyMMddhhmmss')\n                }\n              },\n            },\n            xAxis: {\n              type: 'category',\n              boundaryGap: true,\n\n              axisLabel: {\n                interval: 0,\n                rotate: 40,\n                textStyle: {\n                  color: '#000000',\n                },\n              },\n              data: xAxis,\n            },\n            yAxis: {\n              type: 'value',\n              axisLine: {\n                show: false,\n              },\n              axisTick: {\n                show: false,\n              },\n              axisLabel: {\n                textStyle: {\n                  color: '#7F8B9C',\n                },\n              },\n              splitLine: {\n                show: true,\n                lineStyle: {\n                  color: '#F5F7F9',\n                },\n              },\n            },\n            series: series,\n          }\n          this.spinShow = false\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg)\n        })\n    },\n    // 订单来源\n    orderChannel() {\n      this.loading = true\n      orderChannel(this.formValidate)\n        .then(async (res) => {\n          this.infoList = res.data\n          this.tabList = res.data.list\n          this.loading = false\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg)\n        })\n    },\n    // 订单类型\n    orderType() {\n      this.loading2 = true\n      orderType(this.formValidate)\n        .then(async (res) => {\n          this.infoList2 = res.data\n          this.tabList2 = res.data.list\n          this.loading2 = false\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg)\n        })\n    },\n    // 供应商数据\n    homeSupplier() {\n      homeSupplier(this.formValidate)\n        .then(async (res) => {\n          this.supplierList = res.data\n          this.page.total =  this.supplierList.length\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg)\n        })\n    },\n  },\n}\n",null]}