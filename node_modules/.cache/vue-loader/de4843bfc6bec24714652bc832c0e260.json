{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/marketing/storeBargain/create.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/marketing/storeBargain/create.vue","mtime":1662341777000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex';\nimport goodsList from '@/components/goodsList/index';\nimport uploadPictures from '@/components/uploadPictures';\nimport freightTemplate from \"@/components/freightTemplate\";\nimport { bargainInfoApi, bargainCreatApi, productAttrsApi } from '@/api/marketing';\nimport { productGetTemplateApi, productAllUnit, productUnitCreate } from '@/api/product';\nimport WangEditor from \"@/components/wangEditor/index.vue\";\nexport default {\n    name: 'storeBargainCreate',\n    components: { goodsList, uploadPictures, WangEditor, freightTemplate },\n    data() {\n        return {\n            template: false,\n            submitOpen: false,\n            spinShow: false,\n            myConfig: {\n                autoHeightEnabled: false, // 编辑器不自动被内容撑高\n                initialFrameHeight: 500, // 初始容器高度\n                initialFrameWidth: '100%', // 初始容器宽度\n                UEDITOR_HOME_URL: '/admin/UEditor/',\n                serverUrl: ''\n            },\n            isChoice: '',\n            current: 0,\n            modalPic: false,\n            grid: {\n                xl: 12,\n                lg: 20,\n                md: 24,\n                sm: 24,\n                xs: 24\n            },\n            grid2: {\n                xl: 8,\n                lg: 8,\n                md: 12,\n                sm: 24,\n                xs: 24\n            },\n            gridPic: {\n                xl: 6,\n                lg: 8,\n                md: 12,\n                sm: 12,\n                xs: 12\n            },\n            gridBtn: {\n                xl: 4,\n                lg: 8,\n                md: 8,\n                sm: 8,\n                xs: 8\n            },\n            modals: false,\n            modal_loading: false,\n            images: [],\n            templateList: [],\n            columns: [],\n            specsData: [],\n            unitNameList: [],\n            formValidate: {\n                is_support_refund: 0,\n                product_type: 0,\n                freight: 1, //运费设置\n                delivery_type: [],\n                images: [],\n                info: '',\n                title: '',\n                store_name: '',\n                image: '',\n                unit_name: '',\n                price: 0,\n                min_price: 0,\n                bargain_max_price: 10,\n                bargain_min_price: 0.01,\n                cost: 0,\n                bargain_num: 1,\n                people_num: 2,\n                stock: 1,\n                sales: 0,\n                sort: 0,\n                num: 1,\n                give_integral: 0,\n                postage: 0,\n                is_postage: 0,\n                is_hot: 0,\n                status: 0,\n                section_time: [],\n                description: '',\n                rule: '',\n                id: 0,\n                product_id: 0,\n                temp_id: '',\n                attrs: [],\n                items: []\n            },\n            rule: \"\",\n            description: '',\n            ruleValidate: {\n                image: [\n                    { required: true, message: '请选择主图', trigger: 'change' }\n                ],\n                images: [\n                    { required: true, type: 'array', message: '请选择主图', trigger: 'change' },\n                    { type: 'array', min: 1, message: 'Choose two hobbies at best', trigger: 'change' }\n                ],\n                title: [\n                    { required: true, message: '请输入砍价活动名称', trigger: 'blur' }\n                ],\n                info: [\n                    { required: true, message: '请输入砍价活动简介', trigger: 'blur' }\n                ],\n                store_name: [\n                    { required: true, message: '请输入砍价商品名称', trigger: 'blur' }\n                ],\n                section_time: [\n                    { required: true, type: 'array', message: '请选择活动时间', trigger: 'change' }\n                ],\n                unit_name: [\n                    {\n                        required: true,\n                        message: \"请输入单位\",\n                        trigger: \"change\",\n                    }\n                ],\n                price: [\n                    { required: true, type: 'number', message: '请输入原价', trigger: 'blur' }\n                ],\n                min_price: [\n                    { required: true, type: 'number', message: '请输入最低购买价', trigger: 'blur' }\n                ],\n                // bargain_max_price: [\n                //     { required: true, type: 'number', message: '请输单次砍价最大金额', trigger: 'blur' }\n                // ],\n                // bargain_min_price: [\n                //     { required: true, type: 'number', message: '单次砍价最小金额', trigger: 'blur' }\n                // ],\n                cost: [\n                    { required: true, type: 'number', message: '请输入成本价', trigger: 'blur' }\n                ],\n                bargain_num: [\n                    { required: true, type: 'number', message: '请输入帮砍次数', trigger: 'blur' }\n                ],\n                people_num: [\n                    { required: true, type: 'number', message: '请输入砍价人数', trigger: 'blur' }\n                ],\n                stock: [\n                    { required: true, type: 'number', message: '请输入库存', trigger: 'blur' }\n                ],\n                num: [\n                    { required: true, type: 'number', message: '请输入单次允许购买数量', trigger: 'blur' }\n                ]\n            },\n            currentid: '',\n            picTit: '',\n            tableIndex: 0,\n            copy: 0\n        }\n    },\n    computed: {\n        ...mapState('admin/layout', [\n            'isMobile',\n            'menuCollapse'\n        ]),\n        labelWidth() {\n            return this.isMobile ? undefined : 135;\n        },\n        labelPosition() {\n            return this.isMobile ? 'top' : 'right';\n        }\n    },\n    mounted() {\n        if (this.$route.params.id !== '0' && this.$route.params.id) {\n            this.copy = this.$route.params.copy;\n            this.current = 1;\n            this.getInfo();\n        }\n        this.productGetTemplate();\n        this.getAllUnit();\n    },\n    methods: {\n        changeTemplate(msg) {\n            this.template = msg;\n        },\n        // 添加运费模板\n        addTemp() {\n            this.$refs.templates.isTemplate = true;\n        },\n        addUnit() {\n            this.$modalForm(productUnitCreate()).then(() => this.getAllUnit());\n        },\n        getAllUnit() {\n            productAllUnit().then(res => {\n                this.unitNameList = res.data;\n            }).catch(err => {\n                this.$Message.error(err.msg);\n            })\n        },\n        getEditorContent(data) {\n            this.formValidate.description = data;\n        },\n        getEditorContent2(data) {\n            this.formValidate.rule = data;\n        },\n        // 砍价规格；\n        productAttrs(row) {\n            let that = this;\n            productAttrsApi(row.id, 2).then(res => {\n                let data = res.data.info;\n                let radio = {\n                    title: '选择',\n                    key: 'chose',\n                    width: 60,\n                    align: 'center',\n                    render: (h, params) => {\n                        let uid = params.index;\n                        let flag = false;\n                        if (this.currentid === uid) {\n                            flag = true\n                        } else {\n                            flag = false\n                        }\n                        let self = this;\n                        return h('div', [\n                            h('Radio', {\n                                props: {\n                                    value: flag\n                                },\n                                on: {\n                                    'on-change': () => {\n                                        self.currentid = uid;\n                                        let attrs = [];\n                                        attrs.push(params.row);\n                                        self.formValidate.attrs = attrs;\n                                    }\n                                }\n                            })\n                        ])\n                    }\n                };\n                that.columns = data.header;\n                that.columns.unshift(radio);\n                that.specsData = data.attrs;\n                that.formValidate.items = data.items;\n            }).catch(res => {\n                that.$Message.error(res.msg);\n            })\n        },\n        // 获取运费模板；\n        productGetTemplate() {\n            productGetTemplateApi().then(res => {\n                this.templateList = res.data;\n            })\n        },\n        // 商品id\n        getProductId(row) {\n            this.modal_loading = false;\n            this.modals = false;\n            setTimeout(() => {\n                this.formValidate = {\n                    is_support_refund: row.is_support_refund,\n                    product_type: row.product_type,\n                    images: row.slider_image,\n                    info: row.store_info,\n                    title: row.store_name,\n                    store_name: row.store_name,\n                    image: row.image,\n                    unit_name: row.unit_name,\n                    price: 0, // 不取商品中的原价\n                    min_price: 0,\n                    bargain_max_price: 10,\n                    bargain_min_price: 0.01,\n                    cost: row.cost,\n                    bargain_num: 1,\n                    people_num: 2,\n                    stock: row.stock,\n                    sales: row.sales,\n                    sort: row.sort,\n                    num: 1,\n                    give_integral: row.give_integral,\n                    postage: row.postage,\n                    is_postage: row.is_postage,\n                    is_hot: row.is_hot,\n                    status: 0,\n                    section_time: [],\n                    description: row.description, // 不取商品中的\n                    rule: '',\n                    id: 0,\n                    product_id: row.id,\n                    temp_id: row.temp_id,\n                    freight: 1, //运费设置\n                    delivery_type: []\n                };\n                this.description = row.description\n                this.rule = row.rule\n                this.productAttrs(row);\n            }, 500);\n        },\n        cancel() {\n            this.modals = false;\n        },\n        // 移动\n        handleDragStart(e, item) {\n            this.dragging = item;\n        },\n        handleDragEnd(e, item) {\n            this.dragging = null\n        },\n        // 首先把div变成可以放置的元素，即重写dragenter/dragover\n        handleDragOver(e) {\n            e.dataTransfer.dropEffect = 'move'\n        },\n        handleDragEnter(e, item) {\n            e.dataTransfer.effectAllowed = 'move'\n            if (item === this.dragging) {\n                return\n            }\n            const newItems = [...this.formValidate.images]\n            const src = newItems.indexOf(this.dragging)\n            const dst = newItems.indexOf(item)\n            newItems.splice(dst, 0, ...newItems.splice(src, 1))\n            this.formValidate.images = newItems;\n        },\n        // 具体日期\n        onchangeTime(e) {\n            this.formValidate.section_time = e;\n        },\n        // 详情\n        getInfo() {\n            this.spinShow = true;\n            bargainInfoApi(this.$route.params.id).then(async res => {\n                let that = this;\n                let info = res.data.info;\n                this.formValidate = info;\n                this.description = info.description;\n                this.rule = info.rule;\n                this.formValidate.rule = info.rule === null ? '' : info.rule;\n                this.$set(this.formValidate, 'items', info.attrs.items);\n                this.columns = info.attrs.header;\n                let radio = {\n                    title: '选择',\n                    key: 'chose',\n                    width: 60,\n                    align: 'center',\n                    render: (h, params) => {\n                        let uid = params.index;\n                        let flag = false;\n                        if (this.currentid === uid) {\n                            flag = true\n                        } else {\n                            flag = false\n                        }\n                        let self = this;\n                        return h('div', [\n                            h('Radio', {\n                                props: {\n                                    value: flag\n                                },\n                                on: {\n                                    'on-change': () => {\n                                        self.currentid = uid;\n                                        let attrs = [];\n                                        attrs.push(params.row);\n                                        self.formValidate.attrs = attrs;\n                                    }\n                                }\n                            })\n                        ])\n                    }\n                };\n                that.columns.unshift(radio);\n                this.specsData = info.attrs.value;\n                let defaultAttrs = [];\n                info.attrs.value.forEach(function (item, index) {\n                    if (item.opt) {\n                        defaultAttrs.push(item);\n                        that.$set(that, 'currentid', index);\n                        that.$set(that.formValidate, 'attrs', defaultAttrs)\n                    }\n                });\n                this.spinShow = false;\n            }).catch(res => {\n                this.spinShow = false;\n                this.$Message.error(res.msg);\n            })\n        },\n        // 下一步\n        next(name) {\n            if (this.current === 3) {\n                this.rule = this.formValidate.rule\n                this.$refs[name].validate((valid) => {\n                    if (valid) {\n                        if (this.currentid === '') {\n                            return this.$Message.error('请选择属性规格');\n                        } else {\n                            let val = this.specsData[this.currentid];\n                            let formValidate = this.formValidate.attrs[0];\n                            formValidate.price = val.price;\n                            formValidate.min_price = val.min_price;\n                            formValidate.quota = val.quota;\n                            if (this.formValidate.attrs[0].quota <= 0) {\n                                return this.$Message.error('砍价限量必须大于0');\n                            }\n                        }\n                        if (this.copy == 1) this.formValidate.copy = 1;\n                        this.formValidate.id = (this.$route.params.id) || 0;\n                        this.submitOpen = true;\n                        if (!this.formValidate.product_type) {\n                            this.formValidate.is_support_refund = 1;\n                        }\n                        bargainCreatApi(this.formValidate).then(async res => {\n                            this.submitOpen = false;\n                            this.$Message.success(res.msg);\n                            setTimeout(() => {\n                                this.$router.push({ path: '/admin/marketing/store_bargain/index' });\n                            }, 500);\n                        }).catch(res => {\n                            this.submitOpen = false;\n                            this.$Message.error(res.msg);\n                        })\n                    } else {\n                        return false;\n                    }\n                })\n            } else if (this.current === 2) {\n                this.description = this.formValidate.description\n                this.rule = this.formValidate.rule\n                this.current += 1;\n            } else if (this.current === 1) {\n                this.$refs[name].validate((valid) => {\n                    if (valid) {\n                        if (this.formValidate.people_num == 1) {\n                            return this.$Message.error('砍价人数必须大于1')\n                        }\n                        if(this.formValidate.product_type == 0 && !this.formValidate.delivery_type.length){\n                            return this.$Message.warning(\"请选择配送方式\");\n                        }\n                        if (this.formValidate.product_type == 0 && this.formValidate.freight == 2 && this.formValidate.postage <= 0) {\n                            return this.$Message.warning(\"物流设置-固定邮费不能为0\");\n                        }\n                        if (this.formValidate.product_type == 0 && this.formValidate.freight == 3 && !this.formValidate.temp_id) {\n                            return this.$Message.warning(\"物流设置-运费模板不能为空\");\n                        }\n                        if (this.formValidate.id && parseInt(this.formValidate.status) === 0) {\n                            return this.$Modal.confirm({\n                                title: '检测到您要下架该砍价商品',\n                                content: '下架将会删除前台用户已砍的所有记录，所有用户将重新发起砍价,您确定要这样操作吗？',\n                                okText: '我想好了，确定要下架',\n                                cancelText: '取消下架，活动状态改为开启',\n                                onOk: () => {\n                                    this.current += 1;\n                                },\n                                onCancel: () => {\n                                    this.formValidate.status = 1;\n                                    this.current += 1;\n                                }\n                            });\n                        }\n                        this.current += 1;\n                    } else {\n                        return this.$Message.warning('请完善商品信息');\n                    }\n                })\n            } else {\n                if (this.formValidate.image) {\n                    this.current += 1;\n                } else {\n                    this.$Message.warning('请选择商品');\n                }\n            }\n        },\n        // 上一步\n        step() {\n            this.current--;\n        },\n        // 内容\n        getContent(val) {\n            this.formValidate.description = val;\n        },\n        // 规则\n        getRole(val) {\n            this.formValidate.rule = val;\n        },\n        // 点击商品图\n        modalPicTap(tit, picTit, index) {\n            this.modalPic = true;\n            this.isChoice = tit === 'dan' ? '单选' : '多选';\n            this.picTit = picTit;\n            this.tableIndex = index;\n        },\n        // 获取单张图片信息\n        getPic(pc) {\n            switch (this.picTit) {\n                case 'danFrom':\n                    this.formValidate.image = pc.att_dir;\n                    break;\n                default:\n                    this.specsData[this.tableIndex].pic = pc.att_dir;\n                    this.formValidate.attrs[0].pic = pc.att_dir;\n            }\n            this.modalPic = false;\n        },\n        // 获取多张图信息\n        getPicD(pc) {\n            this.images = pc;\n            this.images.map((item) => {\n                this.formValidate.images.push(item.att_dir);\n                this.formValidate.images = this.formValidate.images.splice(0, 10);\n            });\n            this.modalPic = false;\n        },\n        handleRemove(i) {\n            this.images.splice(i, 1);\n            this.formValidate.images.splice(i, 1);\n        },\n        // 选择商品\n        changeGoods() {\n            this.modals = true;\n            this.$refs.goodslist.getList();\n            this.$refs.goodslist.goodsCategory();\n        },\n        // 表单验证\n        validate(prop, status, error) {\n            if (status === false) {\n                this.$Message.error(error);\n            }\n        },\n        // 添加自定义弹窗\n        addCustomDialog(editorId) {\n            window.UE.registerUI('test-dialog', function (editor, uiName) {\n                // 创建 dialog\n                let dialog = new window.UE.ui.Dialog({\n                    // 指定弹出层中页面的路径，这里只能支持页面，路径参考常见问题 2\n                    iframeUrl: '/admin/widget.images/index.html?fodder=dialog',\n                    // 需要指定当前的编辑器实例\n                    editor: editor,\n                    // 指定 dialog 的名字\n                    name: uiName,\n                    // dialog 的标题\n                    title: '上传图片',\n                    // 指定 dialog 的外围样式\n                    cssRules: 'width:1200px;height:500px;padding:20px;'\n                });\n                this.dialog = dialog;\n                var btn = new window.UE.ui.Button({\n                    name: 'dialog-button',\n                    title: '上传图片',\n                    cssRules: `background-image: url(../../../assets/images/icons.png);background-position: -726px -77px;`,\n                    onclick: function () {\n                        // 渲染dialog\n                        dialog.render();\n                        dialog.open();\n                    }\n                });\n                return btn;\n            }, 37);\n        }\n    }\n}\n",null]}