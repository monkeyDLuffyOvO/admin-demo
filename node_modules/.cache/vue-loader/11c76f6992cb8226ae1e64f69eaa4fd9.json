{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/components/mobileConfig/c_new_vip.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/components/mobileConfig/c_new_vip.vue","mtime":1659665784000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport toolCom from '@/components/mobileConfigRight/index.js'\nimport rightBtn from '@/components/rightBtn/index.vue';\nimport { mapState, mapMutations, mapActions } from 'vuex'\nimport { newcomerList } from '@/api/diy'\nexport default {\n    name: 'c_new_vip',\n    componentsName: 'home_new_vip',\n    components: {\n        ...toolCom,\n        rightBtn\n    },\n    props: {\n        activeIndex: {\n            type: null\n        },\n        num: {\n            type: null\n        },\n        index: {\n            type: null\n        }\n    },\n    data () {\n        return {\n            configObj: {},\n            rCom: [\n                {\n                    components: toolCom.c_set_up,\n                    configNme: 'setUp'\n                }\n            ]\n        }\n    },\n    watch: {\n        num (nVal) {\n            this.configObj = this.$store.state.admin.mobildConfig.defaultArray[nVal]\n        },\n        configObj: {\n            handler (nVal, oVal) {\n                this.$store.commit('admin/mobildConfig/UPDATEARR', { num: this.num, val: nVal });\n            },\n            deep: true\n        },\n        'configObj.setUp.tabVal': {\n            handler (nVal, oVal) {\n                var arr = [this.rCom[0]]\n                if (nVal == 0) {\n                    let tempArr = [\n                        {\n                            components: toolCom.c_txt_tab,\n                            configNme: 'itemSort'\n                        },\n                        {\n                            components: toolCom.c_input_number,\n                            configNme: 'numConfig'\n                        },\n                        {\n                            components: toolCom.c_checkbox,\n                            configNme: 'checkboxInfo'\n                        }\n                    ];\n                    this.rCom = arr.concat(tempArr)\n                } else {\n                    let tempArr = [\n                        {\n                            components: toolCom.c_bg_color,\n                            configNme: 'bgColor'\n                        },\n                        {\n                            components: toolCom.c_bg_color,\n                            configNme: 'textColor'\n                        },\n                        {\n                            components: toolCom.c_bg_color,\n                            configNme: 'priceColor'\n                        },\n                        {\n                            components: toolCom.c_txt_tab,\n                            configNme: 'itemStyle'\n                        },\n                        {\n                            components: toolCom.c_slider,\n                            configNme: 'prConfig'\n                        },\n                        {\n                            components: toolCom.c_slider,\n                            configNme: 'mbCongfig'\n                        }\n                    ];\n                    this.rCom = arr.concat(tempArr)\n                }\n            },\n            deep: true\n        }\n    },\n    mounted () {\n        this.$nextTick(() => {\n            let value = JSON.parse(JSON.stringify(this.$store.state.admin.mobildConfig.defaultArray[this.num]))\n            this.configObj = value;\n        })\n    },\n    methods: {\n        // 获取组件参数\n        getConfig (data) {\n            newcomerList({\n                page: 1,\n                limit: this.configObj.numConfig.val,\n                priceOrder: this.configObj.itemSort.type == 2 ? 'desc' : '',\n                salesOrder: this.configObj.itemSort.type == 1 ? 'desc' : ''\n            }).then(res=>{\n                this.configObj.newVipList.list = res.data;\n            }).catch(err=>{\n               return this.$message.error(err.msg);\n            })\n        },\n        handleSubmit (name) {\n            let obj = {}\n            obj.activeIndex = this.activeIndex\n            obj.data = this.configObj\n            this.add(obj);\n        },\n        ...mapMutations({\n            add: 'admin/mobildConfig/UPDATEARR'\n        })\n    }\n}\n",null]}