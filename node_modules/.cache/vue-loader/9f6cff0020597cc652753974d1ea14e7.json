{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/supplier/orderList/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/supplier/orderList/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport tabList from '../components/tableList.vue'\nimport expandRow from \"@/pages/order/orderList/components/tableExpand.vue\";\nimport { mapState, mapMutations } from 'vuex'\nimport timeOptions from '@/utils/timeOptions'\nimport { getSupplierList, getList } from '@/api/supplier'\n\n\nexport default {\n  name: '',\n  components: {\n    tabList,\n    expandRow\n  },\n  props: {},\n  data() {\n    return {\n      options: timeOptions,\n      ruleValidate: {},\n      formValidate: {\n        status: '', // 订单状态\n        pay_type: '', // 支付方式\n        data: '', // 时间\n        field_key: '', //订单搜索\n        real_name: '', // 订单搜索内容\n        type: '', // 订单类型\n        supplier_id: '', // 供应商id\n      },\n      page: {\n        total: 0, // 总条数\n        pageNum: 1, // 当前页\n        pageSize: 10, // 每页显示条数\n      },\n      grid: {\n        xl: 7,\n        lg: 12,\n        md: 24,\n        sm: 24,\n        xs: 24,\n      },\n      timeVal: [],\n      supplierName: [],\n      typeList: [\n        { label: '全部订单', val: '' },\n        { label: '普通订单', val: '0' },\n        { label: '秒杀订单', val: '1' },\n        { label: '拼团订单', val: '3' },\n        { label: '砍价订单', val: '2' },\n        { label: '预售商品', val: '8' },\n      ],\n      payList: [\n        { label: '全部', val: '' },\n        { label: '微信支付', val: '1' },\n        { label: '支付宝支付', val: '4' },\n        { label: '余额支付', val: '2' },\n        { label: '线下支付', val: '3' },\n      ],\n      cityList: [\n        {\n          value: 'beijing',\n          label: '北京市',\n        },\n        {\n          value: 'shanghai',\n          label: '上海市',\n        },\n        {\n          value: 'shenzhen',\n          label: '深圳市',\n        },\n        {\n          value: 'hangzhou',\n          label: '杭州市',\n        },\n      ],\n      orderList: [],\n\n      columns: [\n          {\n          type: \"expand\",\n          width: 30,\n          render: (h, params) => {\n            return h(expandRow, {\n              props: {\n                row: params.row,\n              },\n            });\n          },\n        },\n        // {\n        //   type: 'selection',\n        //   width: 60,\n        //   align: 'center'\n        // },\n        {\n          title: '订单号',\n          align: 'center',\n          slot: 'order_id',\n          minWidth: 180,\n        },\n        {\n          title: '商品信息',\n          slot: 'info',\n          minWidth: 330,\n            align: 'left',\n        },\n        {\n          title: '供应商名称',\n          key: 'supplier_name',\n          minWidth: 80,\n        },\n        {\n          title: '用户信息',\n          slot: 'nickname',\n          minWidth: 100,\n        },\n        {\n          title: '实际支付',\n          key: 'pay_price',\n          minWidth: 70,\n        },\n        {\n          title: '支付方式',\n          key: 'pay_type_name',\n          minWidth: 110,\n        },\n        {\n          title: '支付时间',\n          key: '_pay_time',\n          minWidth: 150,\n        },\n        {\n          title: '订单类型',\n          key: 'pink_name',\n          minWidth: 120,\n        },\n        {\n          title: '订单状态',\n\n          slot: 'statusName',\n          minWidth: 120,\n        },\n        {\n          title: '操作',\n          slot: 'action',\n          fixed: 'right',\n          minWidth: 170,\n          align: 'left',\n        },\n      ],\n    }\n  },\n  computed: {\n    ...mapState('admin/layout', ['isMobile']),\n    labelWidth() {\n      return this.isMobile ? undefined : 96\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right'\n    },\n  },\n  watch: {},\n  created() {\n    this.getSupplierList()\n    this.getList()\n  },\n  mounted() {},\n  methods: {\n    \n    // 选择时间\n    onchangeTime(e) {\n      if (e[1].slice(-8) === '00:00:00') {\n        e[1] = e[1].slice(0, -8) + '23:59:59'\n        this.timeVal = e\n      } else {\n        this.timeVal = e\n      }\n      this.formValidate.data = this.timeVal[0] ? this.timeVal.join('-') : ''\n    },\n    changeGetTabs() {\n      this.$refs.table.getTabs()\n    },\n\n    // 获取供应商内容\n    getSupplierList() {\n      getSupplierList()\n        .then(async (res) => {\n          this.supplierName = res.data\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg)\n        })\n    },\n\n    // 获取订单列表\n    getList() {\n      let data = {\n        status: this.formValidate.status,\n        pay_type: this.formValidate.pay_type,\n        data: this.formValidate.data,\n        field_key: this.formValidate.field_key,\n        real_name: this.formValidate.real_name,\n        supplier_id: this.formValidate.supplier_id,\n        type: this.formValidate.type,\n        page: this.page.pageNum,\n        limit: this.page.pageSize,\n      }\n\n      getList(data)\n        .then(async (res) => {\n          this.orderList = res.data.data\n          this.page.total = res.data.count\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg)\n        })\n    },\n\n    // 重置\n    reset() {\n      this.formValidate = {}\n      this.formValidate.data = ''\n      this.timeVal = []\n      this.getList()\n    },\n  },\n}\n",null]}