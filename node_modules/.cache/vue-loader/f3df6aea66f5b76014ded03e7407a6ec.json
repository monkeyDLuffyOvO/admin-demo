{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/statistic/user/components/userInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/statistic/user/components/userInfo.vue","mtime":1652232731000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import { statisticUserBasicApi, statisticUserTrendApi } from '@/api/statistic'\n    import echartsNew from '@/components/echartsNew/index'\n\t\timport { formatDate } from '@/utils/validate';\n    export default {\n        name: \"userInfo\",\n        components: {\n            echartsNew\n        },\n        props: {\n            formInline:{\n                type:Object,\n                default:function () {\n                    return {\n                        channel_type: '',\n                        data: ''\n                    }\n                }\n            }\n        },\n        data() {\n            return {\n                spinShow: false,\n                grid: {\n                    xl: 4,\n                    lg: 8,\n                    md: 12,\n                    sm: 24,\n                    xs: 24\n                },\n                name: '近30天',\n                timeVal: [],\n                dataTime: '',\n                list: [],\n                optionData: {},\n                style: { height: '400px' }\n            }\n        },\n        mounted() {\n            this.getStatistics();\n            this.getTrend();\n        },\n        methods: {\n            onSeach(){\n                this.getStatistics();\n                this.getTrend();\n            },\n            // 具体日期\n            onchangeTime (e) {\n                this.timeVal = e\n                this.dataTime = this.timeVal.join('-');\n                this.name = this.dataTime;\n            },\n            // 统计\n            getStatistics() {\n                statisticUserBasicApi(this.formInline).then(async res => {\n                    const cardLists = res.data;\n                    this.list = [\n                        {\n                            name: '访客数',\n                            icon: 'iconfangkeshu',\n                            list: cardLists.people,\n                            colors: 'one',\n\t\t\t\t\t\t\ttxt: '在选定条件下，访问商城页面的去重人数'\n                        },\n                        {\n                            name: '浏览量',\n                            icon: 'iconshangpinliulanliang',\n                            list: cardLists.browse,\n                            colors: 'two',\n\t\t\t\t\t\t\ttxt: '在选定条件下，用户浏览商城页面的次数。每打开一个页面或每刷新一次页面都记录1次'\n                        },\n                        {\n                            name: '新增用户数',\n                            icon: 'iconxinzengyonghushu',\n                            list: cardLists.newUser,\n                            colors: 'three',\n\t\t\t\t\t\t\ttxt: '在选定条件下，新注册的用户'\n                        },\n                        {\n                            name: '成交用户数',\n                            icon: 'iconchengjiaoyonghushu',\n                            list: cardLists.payPeople,\n                            colors: 'four',\n\t\t\t\t\t\t\ttxt: '在选定条件下，下单并支付成功的用户'\n                        },\n                        {\n                            name: '访客-支付转化率',\n                            icon: 'iconfangke-zhifuzhuanhuashuai',\n                            list: cardLists.payPercent,\n                            colors: 'three',\n\t\t\t\t\t\t\ttxt: '在选定条件下，全部成交客户数 / 商城访客数'\n                        },\n                        {\n                            name: '激活付费会员数',\n                            icon: 'iconfufeihuiyuanshu',\n                            list: cardLists.payUser,\n                            colors: 'four',\n\t\t\t\t\t\t\ttxt: '在选定条件下，通过各种方式成为付费会员的用户数'\n                        },\n                        {\n                            name: '充值用户数',\n                            icon: 'iconchongzhiyonghushu',\n                            list: cardLists.rechargePeople,\n                            colors: 'two',\n\t\t\t\t\t\t\ttxt: '在选定条件下，成功充值的用户'\n                        },\n                        {\n                            name: '客单价',\n                            icon: 'iconkedanjia',\n                            list: cardLists.payPrice,\n                            colors: 'one',\n\t\t\t\t\t\t\ttxt: '在选定条件下，用户支付的总金额 / 支付人数'\n                        },\n                        {\n                            name: '累计用户',\n                            icon: 'iconleijiyonghu',\n                            list: cardLists.cumulativeUser,\n                            colors: 'four',\n\t\t\t\t\t\t\ttxt: '商城的总用户'\n                        },\n                        {\n                            name: '累计付费会员数',\n                            icon: 'iconfufeihuiyuanshu',\n                            list: cardLists.cumulativePayUser,\n                            colors: 'one',\n\t\t\t\t\t\t\ttxt: '筛选时间截止时，具有商城付费会员身份的用户数'\n                        },\n                        {\n                            name: '累计充值用户数',\n                            icon: 'iconchongzhiyonghushu',\n                            list: cardLists.cumulativeRechargePeople,\n                            colors: 'four',\n\t\t\t\t\t\t\ttxt: '筛选时间截止时，商城成功充值过的用户'\n                        },\n                        {\n                            name: '累计成交用户数',\n                            icon: 'iconchengjiaoyonghushu',\n                            list: cardLists.cumulativePayPeople,\n                            colors: 'three',\n\t\t\t\t\t\t\ttxt: '筛选时间截止时，下单并支付成功的用户'\n                        }\n                    ]\n                }).catch(res => {\n                    this.$Message.error(res.msg)\n                })\n            },\n            // 统计图\n            getTrend() {\n                this.spinShow = true;\n                statisticUserTrendApi(this.formInline).then(async res => {\n                    let legend = res.data.series.map(item => {\n                        return item.name\n                    })\n                    let xAxis = res.data.xAxis;\n                    let col = ['#5B8FF9', '#5AD8A6', '#FFAB2B', '#5D7092'];\n                    let series = []\n                    res.data.series.map((item,index) => {\n                        series.push({\n                            name: item.name,\n                            type: 'line',\n                            data: item.value,\n                            itemStyle: {\n                                normal: {\n                                    color: col[index]\n                                }\n                            },\n                            smooth: true\n                        })\n                    })\n                    this.optionData = {\n                        tooltip: {\n                            trigger: 'axis',\n                            axisPointer: {\n                                type: 'cross',\n                                label: {\n                                    backgroundColor: '#6a7985'\n                                }\n                            }\n                        },\n                        legend: {\n                            x:'center',\n                            data: legend\n                        },\n                        grid: {\n                            left: '3%',\n                            right: '4%',\n                            bottom: '3%',\n                            containLabel: true\n                        },\n                        toolbox: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tright: '2%',\n                            feature: {\n                                saveAsImage: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: '用户统计_'+formatDate(new Date(Number(new Date().getTime())), 'yyyyMMddhhmmss')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n                            }\n                        },\n                        xAxis: {\n                            type: 'category',\n                            boundaryGap: true,\n                            // axisTick:{\n                            //     show:false\n                            // },\n                            // axisLine:{\n                            //     show:false\n                            // },\n                            // splitLine: {\n                            //     show: false\n                            // },\n                            axisLabel: {\n                                interval: 0,\n                                rotate: 40,\n                                textStyle: {\n                                    color: '#000000'\n                                }\n                            },\n                            data: xAxis\n                        },\n                        yAxis: {\n                            type: 'value',\n                            axisLine: {\n                                show: false\n                            },\n                            axisTick: {\n                                show: false\n                            },\n                            axisLabel: {\n                                textStyle: {\n                                    color: '#7F8B9C'\n                                }\n                            },\n                            splitLine: {\n                                show: true,\n                                lineStyle: {\n                                    color: '#F5F7F9'\n                                }\n                            }\n                        },\n                        series: series\n                    }\n                    this.spinShow = false;\n                }).catch(res => {\n                    this.$Message.error(res.msg);\n                    this.spinShow = false;\n                })\n            },\n        }\n    }\n",null]}