{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/setting/storage/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/setting/storage/index.vue","mtime":1662686947000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ClipboardJS from \"clipboard\";\nimport uploadPictures from \"@/components/uploadPictures\";\n\nimport {\n  addConfigApi,\n  addStorageApi,\n  storageListApi,\n  storageSynchApi,\n  storageStatusApi,\n  editStorageApi,\n  getConfigImageApi,\n  saveBasicsApi\n} from \"@/api/setting\";\nexport default {\n  name: 'setting_storage',\n  components: { uploadPictures },\n  data() {\n      let isInteger = (rule, value, callback) => {\n          if (!value || /(^(-)?[0-9]*$)/.test(value)) {\n              callback();\n          } else {\n              callback(new Error('必须为整数'));\n          }\n      };\n    return {\n      modalPic: false,\n      isChoice: \"单选\",\n      gridBtn: {\n        xl: 4,\n        lg: 8,\n        md: 8,\n        sm: 8,\n        xs: 8,\n      },\n      gridPic: {\n        xl: 6,\n        lg: 8,\n        md: 12,\n        sm: 12,\n        xs: 12,\n      },\n      configuModal: false,\n      configData: \"\",\n      headerList: [\n        { label: \"基础配置\", value: \"1\" },\n        { label: \"阿里云储存\", value: \"3\" },\n        { label: \"腾讯云储存\", value: \"4\" },\n        { label: \"七牛云储存\", value: \"2\" }\n      ],\n      columns: [\n        {\n          title: \"储存空间名称\",\n          key: \"name\",\n          align: \"center\",\n          minWidth: 200,\n        },\n        {\n          title: \"区域\",\n          key: \"_region\",\n          align: \"center\",\n          minWidth: 100,\n        },\n        {\n          title: \"空间域名\",\n          key: \"domain\",\n          align: \"center\",\n          minWidth: 200,\n        },\n        {\n          title: \"使用状态\",\n          slot: \"status\",\n          align: \"center\",\n          width: 90,\n        },\n        {\n          title: \"创建时间\",\n          key: \"_add_time\",\n          align: \"center\",\n          minWidth: 150,\n        },\n        {\n          title: \"更新时间\",\n          key: \"_update_time\",\n          align: \"center\",\n          minWidth: 150,\n        },\n        {\n          title: \"操作\",\n          slot: \"action\",\n          width: 210,\n          align: \"center\",\n        },\n      ],\n      total: 0,\n      list: {\n        page: 1,\n        limit: 15,\n        type: \"1\",\n      },\n      levelLists: [],\n      currentTab: \"1\",\n      loading: false,\n      addData: {\n        input: \"\",\n        select: \"\",\n        jurisdiction: \"1\",\n        type: \"1\",\n      },\n      confData: {\n        AccessKeyId: \"\",\n        AccessKeySecret: \"\",\n      },\n      formData: {\n        upload_type: 1,\n        image_watermark_status: 0,\n        thumb_big_width: '',\n        thumb_big_height: '',\n        thumb_mid_width: '',\n        thumb_mid_height: '',\n        thumb_small_width: '',\n        thumb_small_height: '',\n        watermark_type: 1,\n        watermark_text: '',\n        watermark_text_angle: '',\n        watermark_text_color: '',\n        watermark_text_size: '',\n        watermark_position: 1,\n        watermark_image: '',\n        watermark_opacity: '',\n        watermark_rotate: '',\n        watermark_x: '',\n        watermark_y: ''\n      },\n      rules: {\n          thumb_big_width: [\n              {\n                  validator: isInteger,\n                  trigger: 'blur'\n              }\n          ],\n          thumb_big_height: [\n              {\n                  validator: isInteger,\n                  trigger: 'blur'\n              }\n          ],\n          thumb_mid_width: [\n              {\n                  validator: isInteger,\n                  trigger: 'blur'\n              }\n          ],\n          thumb_mid_height: [\n              {\n                  validator: isInteger,\n                  trigger: 'blur'\n              }\n          ],\n          thumb_small_width: [\n              {\n                  validator: isInteger,\n                  trigger: 'blur'\n              }\n          ],\n          thumb_small_height: [\n              {\n                  validator: isInteger,\n                  trigger: 'blur'\n              }\n          ],\n          watermark_x: [\n              {\n                  validator: isInteger,\n                  trigger: 'blur'\n              }\n          ],\n          watermark_y: [\n              {\n                  validator: isInteger,\n                  trigger: 'blur'\n              }\n          ]\n      },\n      visible: false\n    };\n  },\n  computed: {\n    positionText () {\n        return ['左上', '中上', '右上', '左中', '中', '右中', '左下', '中下', '右下'][this.formData.watermark_position - 1];\n    }\n  },\n  created() {\n    this.getConfigImage();\n  },\n  mounted: function () {\n    this.$nextTick(function () {\n      const clipboard = new ClipboardJS(\".copy-data\");\n      clipboard.on(\"success\", () => {\n        this.$Message.success(\"复制成功\");\n      });\n    });\n  },\n  methods: {\n    //   获取缩略图配置\n      getConfigImage() {\n          getConfigImageApi().then(res => {\n                let data = res.data;\n                this.formData.upload_type = data.upload_type.value;\n                this.formData.image_watermark_status = data.image_watermark_status.value;\n                this.formData.thumb_big_width = data.thumb_big_width.value;\n                this.formData.thumb_big_height = data.thumb_big_height.value;\n                this.formData.thumb_mid_width = data.thumb_mid_width.value;\n                this.formData.thumb_mid_height = data.thumb_mid_height.value;\n                this.formData.thumb_small_width = data.thumb_small_width.value;\n                this.formData.thumb_small_height = data.thumb_small_height.value;\n                this.formData.watermark_type = data.watermark_type.value;\n                this.formData.watermark_text = data.watermark_text.value;\n                this.formData.watermark_text_angle = data.watermark_text_angle.value;\n                this.formData.watermark_text_color = data.watermark_text_color.value;\n                this.formData.watermark_text_size = data.watermark_text_size.value;\n                this.formData.watermark_position = data.watermark_position.value;\n                this.formData.watermark_image = data.watermark_image.value;\n                this.formData.watermark_opacity = data.watermark_opacity.value;\n                this.formData.watermark_rotate = data.watermark_rotate.value;\n                this.formData.watermark_x = data.watermark_x.value;\n                this.formData.watermark_y = data.watermark_y.value;\n          });\n      },\n    //   基础配置保存\n    handleSubmit(name) {\n        this.$refs[name].validate(valid => {\n            if (valid) {\n                saveBasicsApi(this.formData).then(res => {\n                    this.$Message.success(res.msg);\n                }).catch(res => {\n                    this.$Message.error(res.msg);\n                });\n            }\n        });\n    },\n    // 选择图片\n    modalPicTap() {\n      this.modalPic = true;\n    },\n    // 选中图片\n    getPic(pc) {\n      this.formData.watermark_image = pc.att_dir;\n      this.modalPic = false;\n    },\n    // CNAME配置\n    config(row) {\n      this.configuModal = true;\n      this.configData = row;\n    },\n    //同步储存空间\n    synchro() {\n      storageSynchApi(this.currentTab)\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.getlist();\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n    // 添加存储空间\n    addStorageBtn() {\n      this.$modalForm(addStorageApi(this.currentTab)).then(() => {\n        this.getlist();\n      });\n    },\n    // 修改配置信息\n    addConfigBtn() {\n      this.$modalForm(addConfigApi(this.currentTab)).then(() => {\n        this.getlist();\n      });\n    },\n    //修改空间域名\n    edit(row) {\n      this.$modalForm(editStorageApi(row.id)).then(() => {\n        this.getlist();\n      });\n    },\n    // 使用状态\n    changeSwitch(row, item) {\n      return new Promise((resolve) => {\n        this.$Modal.confirm({\n          title: \"切换状态\",\n          content: \"您确认要切换使用状态吗？\",\n          onOk: () => {\n            // resolve();\n            storageStatusApi(row.id)\n              .then((res) => {\n                this.$Message.success(res.msg);\n                this.getlist();\n              })\n              .catch((err) => {\n                this.$Message.error(err.msg);\n              });\n          },\n          onCancel: () => {\n            this.$Message.info(\"已取消\");\n            this.getlist();\n          },\n        });\n      });\n    },\n    // 云存储列表\n    getlist() {\n      this.loading = true;\n      storageListApi(this.list).then((res) => {\n        this.total = res.data.count;\n        this.levelLists = res.data.list;\n        this.loading = false;\n      });\n    },\n    // 切换选项卡\n    changeTab(data) {\n      this.currentTab = data;\n      this.list.type = data;\n      this.list.page = 1;\n      if (data == 1) {\n          this.getConfigImage();\n      } else {\n        this.getlist();\n      }\n    },\n    // 删除\n    del(row, tit, num) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `setting/config/storage/${row.id}`,\n        method: \"DELETE\",\n        ids: \"\",\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.getlist();\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    pageChange(index) {\n      this.list.page = index;\n      this.getlist();\n    },\n    handleView () {\n        this.visible = true;\n    },\n    handleRemove () {\n        this.formData.watermark_image = '';\n    }\n  },\n};\n",null]}