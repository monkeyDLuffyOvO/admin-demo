{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/notify/smsConfig/tableList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/notify/smsConfig/tableList.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  smsRecordApi,\n  serveInfoApi,\n  serveSmsOpenApi,\n  serveOpnExpressApi,\n  serveOpnOtherApi,\n  serveRecordListApi,\n  exportTempApi,\n  exportAllApi,\n  serveSign,\n  captchaApi,\n  serveOpen,\n  serveDumpOpen,\n} from \"@/api/setting\";\nexport default {\n  name: \"tableList\",\n  props: {\n    copy: {\n      type: Object,\n      default: null,\n    },\n    dump: {\n      type: Object,\n      default: null,\n    },\n    query: {\n      type: Object,\n      default: null,\n    },\n    sms: {\n      type: Object,\n      default: null,\n    },\n    accountInfo: {\n      type: Object,\n      default: null,\n    },\n  },\n  data() {\n    const validatePhone = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error(\"请填写手机号\"));\n      } else if (!/^1[3456789]\\d{9}$/.test(value)) {\n        callback(new Error(\"手机号格式不正确!\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      cutNUm: \"获取验证码\",\n      canClick: true,\n      spinShow: true,\n      formInline: {\n        sign: \"\",\n        phone: \"\",\n        code: \"\",\n      },\n\t  sign:'',\n      ruleInline: {\n        sign: [{ required: true, message: \"请输入短信签名\", trigger: \"blur\" }],\n        phone: [{ required: true, validator: validatePhone, trigger: \"blur\" }],\n        code: [{ required: true, message: \"请输入验证码\", trigger: \"blur\" }],\n      },\n      isChecked: \"4\",\n      columns1: [\n        // {\n        //     title: 'ID',\n        //     key: 'id',\n        //     width: 80\n        // },\n        {\n          title: \"手机号\",\n          key: \"phone\",\n          minWidth: 100,\n        },\n        {\n          title: \"模板内容\",\n          key: \"content\",\n          width: 590,\n        },\n        // {\n        //     title: '模板ID',\n        //     key: 'template',\n        //     minWidth: 100\n        // },\n        {\n          title: \"发送时间\",\n          key: \"add_time\",\n          minWidth: 150,\n        },\n        {\n          title: \"状态码\",\n          key: \"_resultcode\",\n          minWidth: 100,\n        },\n      ],\n      columns2: [],\n      tableFrom: {\n        page: 1,\n        limit: 20,\n        type: \"\",\n      },\n      total: 0,\n      loading: false,\n      tableList: [],\n      formInlineDump: {\n        temp_id: \"\",\n        com: \"\",\n        to_name: \"\",\n        to_tel: \"\",\n        siid: \"\",\n        to_address: \"\",\n      },\n      ruleInlineDump: {\n        com: [{ required: true, message: \"请选择快递公司\", trigger: \"change\" }],\n        temp_id: [\n          { required: true, message: \"请选择打印模板\", trigger: \"change\" },\n        ],\n        to_name: [\n          { required: true, message: \"请输寄件人姓名\", trigger: \"blur\" },\n        ],\n        to_tel: [{ required: true, validator: validatePhone, trigger: \"blur\" }],\n        siid: [\n          { required: true, message: \"请输入云打印机编号\", trigger: \"blur\" },\n        ],\n        to_address: [\n          { required: true, message: \"请输寄件人地址\", trigger: \"blur\" },\n        ],\n      },\n      tempImg: \"\", // 图片\n      exportTempList: [], // 电子面单模板\n      exportList: [], // 快递公司列表\n      isSms: false, // 是否开通短信\n      isDump: false, // 是否开通电子面单,是否开通物流查询\n      isCopy: false, // 是否开通商品采集\n      modals: false,\n      isDumpOpen: false,\n    };\n  },\n  watch: {\n    copy(n) {\n      if (n.open === 1) this.getRecordList();\n    },\n  },\n  created() {\n    if (this.isChecked === \"4\" && this.copy.open === 1) this.getRecordList();\n  },\n  mounted() {\n    serveDumpOpen().then((res) => {\n      this.isDumpOpen = res.data.isOpen;\n    });\n  },\n  methods: {\n    //短信模板页\n    shortMes() {\n      this.$router.push({\n        path: \"/admin/setting/sms/sms_template_apply/index\",\n      });\n    },\n    // 短信验证码\n    cutDown() {\n      if (this.formInline.phone) {\n        if (!this.canClick) return;\n        this.canClick = false;\n        this.cutNUm = 60;\n        let data = {\n          phone: this.formInline.phone,\n        };\n        captchaApi(data)\n          .then(async (res) => {\n            this.$Message.success(res.msg);\n          })\n          .catch((res) => {\n            this.$Message.error(res.msg);\n          });\n        let time = setInterval(() => {\n          this.cutNUm--;\n          if (this.cutNUm === 0) {\n            this.cutNUm = \"获取验证码\";\n            this.canClick = true;\n            clearInterval(time);\n          }\n        }, 1000);\n      } else {\n        this.$Message.warning(\"请填写手机号!\");\n      }\n    },\n    editSign() {\n      if (this.accountInfo.sms.sign_status === 0) {\n        this.$Message.warning(\"签名待审核中，暂无法修改\");\n        return;\n      }\n\t  this.sign = this.accountInfo.sms.sign;\n      this.formInline.sign = '';\n      this.formInline.phone = this.accountInfo.phone;\n      this.modals = true;\n    },\n    cancel(name) {\n      this.modals = false;\n      this.$refs[name].resetFields();\n    },\n    // 提交\n    editSubmit(name) {\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          serveSign(this.formInline)\n            .then((res) => {\n              this.modals = false;\n              this.$Message.success(res.msg);\n              this.$refs[name].resetFields();\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg);\n            });\n        }\n      });\n    },\n    onChangeImg(item) {\n      this.exportTempList.map((i) => {\n        if (i.temp_id === item) this.tempImg = i.pic;\n      });\n    },\n    // 物流公司\n    exportTempAllList() {\n      exportAllApi()\n        .then(async (res) => {\n          this.exportList = res.data;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 快递公司选择\n    onChangeExport(val) {\n      this.formInlineDump.temp_id = \"\";\n      this.exportTemp(val);\n    },\n    // 电子面单模板\n    exportTemp(val) {\n      exportTempApi({ com: val })\n        .then(async (res) => {\n          this.exportTempList = res.data.data;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    onChangeType() {\n\t\t\tthis.tableFrom.page = 1;\n      if (this.isChecked === \"1\" && this.sms.open === 1) {\n        this.tableFrom.type = \"\";\n        this.getList();\n      } else {\n        if (this.isChecked === \"2\" && this.query.open === 0)\n          this.isDump = false;\n        if (\n          this.dump.open === 1 ||\n          this.query.open === 1 ||\n          this.copy.open === 1\n        )\n          this.getRecordList();\n      }\n      if (this.dump.open === 0 && this.isChecked === \"3\") {\n        this.isDumpOpen = false;\n      }\n    },\n    // 其他列表\n    getRecordList() {\n      this.loading = true;\n      this.tableFrom.type = this.isChecked;\n      serveRecordListApi(this.tableFrom)\n        .then(async (res) => {\n          let data = res.data;\n          this.tableList = data.data;\n          this.total = res.data.count;\n          switch (this.isChecked) {\n            case \"2\":\n              this.columns2 = [\n                {\n                  title: \"订单号\",\n                  key: \"order_id\",\n                  minWidth: 150,\n                },\n                {\n                  title: \"发货人\",\n                  key: \"from_name\",\n                  minWidth: 120,\n                },\n                {\n                  title: \"收货人\",\n                  key: \"to_name\",\n                  minWidth: 120,\n                },\n                {\n                  title: \"快递单号\",\n                  key: \"num\",\n                  minWidth: 120,\n                },\n                {\n                  title: \"快递公司编码\",\n                  key: \"code\",\n                  minWidth: 120,\n                },\n                {\n                  title: \"状态\",\n                  key: \"_resultcode\",\n                  minWidth: 100,\n                },\n                {\n                  title: \"打印时间\",\n                  key: \"add_time\",\n                  minWidth: 150,\n                },\n              ];\n              break;\n            case \"3\":\n              this.columns2 = [\n                {\n                  title: \"快递单号\",\n                  slot: \"num\",\n                  minWidth: 120,\n                },\n                {\n                  title: \"快递公司编码\",\n                  key: \"code\",\n                  minWidth: 120,\n                },\n                {\n                  title: \"状态\",\n                  key: \"_resultcode\",\n                  minWidth: 120,\n                },\n                {\n                  title: \"添加时间\",\n                  key: \"add_time\",\n                  minWidth: 150,\n                },\n              ];\n              break;\n            default:\n              this.columns2 = [\n                {\n                  title: \"复制URL\",\n                  key: \"url\",\n                  minWidth: 400,\n                },\n                {\n                  title: \"请求状态\",\n                  key: \"_resultcode\",\n                  minWidth: 120,\n                },\n                {\n                  title: \"添加时间\",\n                  key: \"add_time\",\n                  minWidth: 150,\n                },\n              ];\n              break;\n          }\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    pageChangeOther(index) {\n      this.tableFrom.page = index;\n      this.getRecordList();\n    },\n    // 开通短信提交\n    handleSubmit(name) {\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          serveSmsOpenApi(this.formInline)\n            .then(async (res) => {\n              this.$Message.success(\"开通成功!\");\n              this.getList();\n              this.$emit(\"openService\", \"sms\");\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg);\n            });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 首页去开通\n    onOpenIndex(val) {\n      switch (val) {\n        case \"sms\":\n          this.isChecked = \"1\";\n          this.isSms = true;\n          break;\n        case \"copy\":\n          this.isChecked = \"4\";\n          this.openOther();\n          break;\n        case \"query\":\n          this.isChecked = \"3\";\n          this.onDumpOpen();\n          break;\n        default:\n          this.isChecked = \"2\";\n          this.openDump();\n          break;\n      }\n    },\n    // 开通按钮\n    onOpen() {\n      if (this.isChecked === \"1\") this.isSms = true;\n      if (this.isChecked === \"2\") this.openDump();\n      if (this.isChecked === \"4\") this.openOther();\n      if (this.isChecked === \"3\") this.onDumpOpen();\n    },\n    // 开通物流\n    onDumpOpen() {\n      this.$Modal.confirm({\n        title: \"开通物流查询吗\",\n        content: \"<p>确定要开通物流查询吗</p>\",\n        onOk: () => {\n          serveOpen().then((res) => {\n            this.$Message.info(res.msg);\n          });\n        },\n        onCancel: () => {\n          // this.$Message.info('Clicked cancel');\n        },\n      });\n    },\n    // 开通其他\n    openOther() {\n      this.$Modal.confirm({\n        title: \"开通商品采集吗\",\n        content: \"<p>确定要开通商品采集吗</p>\",\n        loading: true,\n        onOk: () => {\n          this.$Modal.remove();\n          setTimeout(() => {\n            serveOpnOtherApi({ type: 1 })\n              .then(async (res) => {\n                this.getRecordList();\n                this.$emit(\"openService\", \"copy\");\n              })\n              .catch((res) => {\n                this.$Message.error(res.msg);\n              });\n          }, 300);\n        },\n        onCancel: () => {},\n      });\n    },\n    // 开通电子面单\n    openDump() {\n      this.exportTempAllList();\n      this.isDumpOpen = true;\n    },\n    // 选择\n    selectChange(tab) {\n      this.tableFrom.type = tab;\n      this.tableFrom.page = 1;\n      this.getList();\n    },\n    // 列表\n    getList() {\n      this.loading = true;\n      smsRecordApi(this.tableFrom)\n        .then(async (res) => {\n          let data = res.data;\n          this.tableList = data.data;\n          this.total = res.data.count;\n          this.spinShow = false;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.spinShow = false;\n          this.loading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    pageChange(index) {\n      this.tableFrom.page = index;\n      this.getList();\n    },\n    // 表格搜索\n    userSearchs() {\n      this.getList();\n    },\n    handleSubmitDump(name) {\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          serveOpnExpressApi(this.formInlineDump)\n            .then(async (res) => {\n              this.$Message.success(\"开通成功!\");\n              this.getRecordList();\n              this.$emit(\"openService\", \"dump\");\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg);\n            });\n        } else {\n          return false;\n        }\n      });\n    },\n  },\n};\n",null]}