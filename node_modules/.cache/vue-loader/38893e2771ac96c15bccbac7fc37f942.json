{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/marketing/live/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/marketing/live/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\nimport { liveList,liveShow,liveRoomGoodsAdd,liveSyncRoom } from '@/api/live'\nimport detailsFrom from './components/live_detail'\nimport addGoods from './components/add_goods'\nimport goodsList from '@/components/goodsList'\nexport default {\n    name: \"live\",\n    components: {\n        detailsFrom,\n        addGoods,\n        goodsList\n    },\n    data(){\n        return {\n            isShowBox:false,\n            modals:false,\n            total:0,\n            grid: {\n                xl: 7,\n                lg: 7,\n                md: 12,\n                sm: 24,\n                xs: 24\n            },\n            formValidate: {\n                status: '',\n                kerword: '',\n                page: 1,\n                limit: 20\n            },\n            treeData: {\n                withdrawal: [\n                    {\n                        title: '全部',\n                        value: ''\n                    },\n                    {\n                        title: '直播中',\n                        value: 1\n                    },\n                    {\n                        title: '未开始',\n                        value: 2\n                    },\n                    {\n                        title: '已结束',\n                        value: 3\n                    }\n                ],\n            },\n            columns1:[\n                {\"key\":\"id\",\"title\":\"直播间ID\",\"width\":80,},\n                {\"key\":\"name\",\"minWidth\":120,\"title\":\"直播间名称\",},\n                {\"key\":\"anchor_name\",\"minWidth\":120,\"title\":\"主播昵称\",},\n                {\"key\":\"anchor_wechat\",\"minWidth\":120,\"title\":\"主播微信号\",},\n                {\"key\":\"start_time\",\"minWidth\":130,\"title\":\"直播开始时间\",},\n                {\"key\":\"end_time\",\"minWidth\":130,\"title\":\"计划结束时间\",},\n                {\"key\":\"add_time\",\"minWidth\":130,\"title\":\"创建时间\",},\n                {\"slot\":\"is_mer_show\",\"title\":\"显示状态\",\"minWidth\":80,},\n                {\"slot\":\"status\",\"minWidth\":80,\"title\":\"直播状态\",},\n                {\"key\":\"sort\",\"minWidth\":70,\"title\":\"排序\",},\n                {\"slot\":\"action\",\"fixed\":\"right\",\"title\":\"操作\",\"minWidth\":160,}\n            ],\n            tabList:[],\n            loading: false,\n            activeItem:{}\n        }\n    },\n    computed: {\n        ...mapState('admin/layout', [\n            'isMobile'\n        ]),\n        labelWidth () {\n            return this.isMobile ? undefined : 96;\n        },\n        labelPosition () {\n            return this.isMobile ? 'top' : 'right';\n        }\n    },\n    created() {\n        this.getList()\n    },\n    methods:{\n        // 获取直播列表\n        getList(){\n            this.loading = true\n            liveList(this.formValidate).then(res=>{\n                this.total = res.data.count\n                this.tabList = res.data.list\n                this.loading = false\n            })\n\n        },\n        // 选择\n        selChange () {\n            this.formValidate.page = 1;\n            this.getList();\n        },\n        // 添加直播间\n        menusAdd(){\n            this.$router.push({\n                path:'/admin/marketing/live/add_live_room'\n            })\n        },\n        // 分页\n        pageChange(index){\n            this.formValidate.page = index\n            this.getList();\n        },\n        // 直播间显示隐藏\n        onchangeIsShow({id,is_show}){\n            liveShow(id,is_show).then(res=>{\n                this.$Message.success(res.msg)\n            }).catch(error=>{\n                this.$Message.error(error.msg)\n            })\n        },\n        //  详情\n        detail(row){\n            this.modals = true\n            this.$refs.studioDetail.getData(row.id)\n        },\n        // 直播间添加商品\n        addGoods(row){\n            this.activeItem = row\n            this.isShowBox = true\n        },\n        getData(data){\n            liveRoomGoodsAdd({\n                room_id:this.activeItem.id,\n                goods_ids:data\n            }).then(res=>{\n                this.$Message.success(res.msg)\n                this.isShowBox = false\n                this.$refs.liveAdd.goodsList = []\n            }).catch(error=>{\n                this.$Message.error(error.msg)\n                this.isShowBox = false\n                this.$refs.liveAdd.goodsList = []\n            })\n        },\n        // 同步直播间\n        syncRoom(){\n            liveSyncRoom().then(res=>{\n                this.$Message.success(res.msg)\n                this.getList()\n            }).catch(error=>{\n                this.$Message.error(res.msg)\n            })\n        },\n        // 删除\n        del(row, tit, num){\n            let delfromData = {\n                title: tit,\n                num: num,\n                url: `live/room/del/${row.id}`,\n                method: 'DELETE',\n                ids: ''\n            };\n            this.$modalSure(delfromData).then((res) => {\n                this.$Message.success(res.msg);\n                this.tabList.splice(num, 1);\n\n                this.getList();\n            }).catch(res => {\n                this.$Message.error(res.msg);\n            });\n        },\n        getProductId (data) {\n            let arr = []\n            data.map(el=>{\n                arr.push(el.product_id)\n            })\n            this.getData(arr)\n        },\n    }\n}\n",null]}