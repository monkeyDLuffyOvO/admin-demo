{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/kefu/pc/components/delivery.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/kefu/pc/components/delivery.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\nimport { splitCartInfo } from \"@/api/order\";\nimport {\n  orderExport,\n  orderTemp,\n  orderDeliveryAll,\n  orderDelivery,\n  getSender,\n  splitDelivery,\n} from \"@/api/kefu\";\nexport default {\n  name: \"delivery\",\n  props: {\n    isShow: {\n      type: Boolean,\n      default: false,\n    },\n    orderId: {\n      type: String | Number,\n      default: \"\",\n    },\n    exportOpen: {\n      type: String,\n      default: \"0\",\n    },\n    orderType: {\n      type: Number,\n      default: 0,\n    },\n  },\n  computed: {\n    ...mapState(\"admin/order\", [\"splitOrder\"]),\n  },\n  watch: {\n    \"formValidate.shipStatus\": {\n      handler(nVal, oVal) {\n        if (nVal == 1) {\n          this.getOrderExport(\"\");\n        }\n        if (nVal == 2 && !this.formValidate.sendName) {\n          getSender().then((res) => {\n            this.formValidate.sendName = res.data.to_name;\n            this.formValidate.sendPhone = res.data.to_tel;\n            this.formValidate.sendAddress = res.data.to_add;\n          });\n          this.getOrderExport(1);\n        }\n        this.$refs[\"formValidate\"].resetFields();\n      },\n      deep: true,\n    },\n    \"formValidate.gender\": {\n      handler(nVal, oVal) {\n        this.$refs[\"formValidate\"].resetFields();\n      },\n      deep: true,\n    },\n  },\n  data() {\n    return {\n\t  productType:0,\t\n      splitSwitch: true,\n      shipType: [\n        {\n          key: 1,\n          title: \"手动填写\",\n        },\n        {\n          key: 2,\n          title: \"电子面单打印\",\n        },\n      ],\n      radioList: [\n        {\n          key: 1,\n          title: \"发货\",\n        },\n        {\n          key: 2,\n          title: \"送货\",\n        },\n        {\n          key: 3,\n          title: \"虚拟\",\n        },\n      ],\n      ruleInline: {\n        logisticsCode: [\n          { required: true, message: \"请选择快递公司\", trigger: \"change\" },\n        ],\n        number: [\n          { required: true, message: \"请填写快递单号\", trigger: \"change\" },\n        ],\n        sendName: [\n          { required: true, message: \"请填写寄件人姓名\", trigger: \"change\" },\n        ],\n        sendPhone: [\n          { required: true, message: \"请填写寄件人手机\", trigger: \"change\" },\n          {\n            pattern: /^1[3456789]\\d{9}$/,\n            message: \"手机号码格式不正确\",\n            trigger: \"blur\",\n          },\n        ],\n        sendAddress: [\n          { required: true, message: \"请填写寄件人地址\", trigger: \"change\" },\n        ],\n        msg: [{ required: true, message: \"请填写备注信息\", trigger: \"change\" }],\n      },\n      formValidate: {\n        gender: 1,\n        shipStatus: 1,\n        logisticsCode: \"\", // 快递公司编号\n        logisticsName: \"\", // 快递公司名称\n        number: \"\", // 快递单号\n        electronic: \"\", //电子面单\n        sendName: \"\", //寄件人姓名\n        sendPhone: \"\", // 寄件人电话\n        sendAddress: \"\", //寄件人地址\n        postPeople: \"\", // 配送员\n        msg: \"\", // 备注\n      },\n      logisticsList: [],\n      orderTempList: [],\n      deliveryList: [],\n      manyFormValidate: [],\n      orderStatus: 0,\n      selectData: [],\n      header: [\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\",\n        },\n        {\n          title: \"商品信息\",\n          slot: \"image\",\n          width: 200,\n          align: \"center\",\n        },\n        {\n          title: \"规格\",\n          slot: \"value\",\n          align: \"center\",\n          minWidth: 120,\n        },\n        {\n          title: \"商品售价\",\n          slot: \"sellPrice\",\n          align: \"center\",\n          minWidth: 100,\n        },\n        {\n          title: \"商品优惠价\",\n          slot: \"price\",\n          align: \"center\",\n          minWidth: 100,\n        },\n        {\n          title: \"总数\",\n          key: \"cart_num\",\n          align: \"center\",\n          minWidth: 80,\n        },\n        {\n          title: \"待发数量\",\n          key: \"surplus_num\",\n          align: \"center\",\n          width: 180,\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\"InputNumber\", {\n                props: {\n                  min: 1,\n                  max: params.row.numShow,\n                  value: params.row.surplus_num || 1,\n                },\n                on: {\n                  \"on-change\": (e) => {\n                    params.row.surplus_num = e || 1;\n                    this.manyFormValidate[params.index] = params.row;\n                    this.selectData.forEach((v, index) => {\n                      if (v.cart_id === params.row.cart_id) {\n                        this.selectData.splice(index, 1, params.row);\n                      }\n                    });\n                  },\n                },\n              }),\n            ]);\n          },\n        },\n      ],\n    };\n  },\n  mounted() {\n    this.getOrderExport();\n    this.getDelivery();\n    this.$nextTick((e) => {\n      this.getCartInfo(this.orderType);\n    });\n  },\n  methods: {\n    // 获取配送人\n    getDelivery() {\n      orderDeliveryAll().then((res) => {\n        this.deliveryList = res.data;\n      });\n    },\n    //查看大图\n    inited(viewer) {\n      this.$viewer = viewer;\n    },\n    //物流公司\n    getOrderExport(status) {\n      orderExport(status ? status : \"\").then((res) => {\n        this.logisticsList = res.data;\n      });\n    },\n    changeSplitStatus(status) {\n      if (status) {\n        splitCartInfo(this.orderId).then((res) => {\n          let data = res.data;\n          data.forEach((item) => {\n            item.numShow = item.surplus_num;\n          });\n          this.manyFormValidate = data;\n        });\n      }\n    },\n    getCartInfo(data) {\n      this.$set(this, \"orderStatus\", data);\n      this.$set(this, \"splitSwitch\", data === 8 ? true : false);\n      // if (data === 8) {\n      splitCartInfo(this.orderId).then((res) => {\n        let data = res.data;\n        data.forEach((item) => {\n          item.numShow = item.surplus_num;\n        });\n        this.manyFormValidate = data;\n\t\tthis.productType = data[0].product_type;\n\t\tif(this.productType==3){\n\t\t\tthis.radioList.splice(0,2);\n\t\t\tthis.formValidate.gender = 3;\n\t\t}\n      });\n      // }\n    },\n    selectOne(data) {\n      this.selectData = data;\n    },\n    handleSubmit(name) {\n      if (this.formValidate.gender == 1) {\n        this.$refs[name].validate((valid) => {\n          let paramsData = {};\n          paramsData.type = this.formValidate.gender;\n          paramsData.express_record_type = parseFloat(\n            this.formValidate.shipStatus\n          );\n          paramsData.delivery_name = this.formValidate.logisticsName;\n          paramsData.delivery_code = this.formValidate.logisticsCode;\n          paramsData.cart_ids = [];\n          // 手动\n          if (\n            this.formValidate.gender == 1 &&\n            this.formValidate.shipStatus == 1\n          ) {\n            paramsData.delivery_id = this.formValidate.number;\n          }\n          // 电子\n          if (\n            this.formValidate.gender == 1 &&\n            this.formValidate.shipStatus == 2\n          ) {\n            paramsData.to_name = this.formValidate.sendName;\n            paramsData.to_tel = this.formValidate.sendPhone;\n            paramsData.to_addr = this.formValidate.sendAddress;\n            paramsData.express_temp_id = this.formValidate.electronic;\n          }\n          if (valid && !this.splitSwitch) {\n\n            orderDelivery(this.orderId, paramsData)\n              .then((res) => {\n                this.$Message.success(res.msg);\n                this.$emit(\"ok\");\n              })\n              .catch((error) => {\n                this.$Message.error(error.msg);\n              });\n          } else if (valid && this.splitSwitch) {\n            let data = {\n              id: this.orderId,\n              datas: { ...paramsData },\n            };\n            data.datas.cart_ids = [];\n            this.selectData.forEach((v) => {\n              data.datas.cart_ids.push({\n                cart_id: v.cart_id,\n                cart_num: v.surplus_num,\n              });\n            });\n            splitDelivery(data)\n              .then((res) => {\n                this.modals = false;\n                this.$Message.success(res.msg);\n                this.$emit(\"ok\");\n                this.splitSwitch = false;\n              })\n              .catch((res) => {\n                this.$Message.error(res.msg);\n              });\n          } else {\n          }\n        });\n      }\n      if (this.formValidate.gender == 2) {\n        let people = {};\n        this.deliveryList.forEach((el, index) => {\n          if (el.uid == this.formValidate.postPeople) {\n            people = el;\n          }\n        });\n        if (!this.splitSwitch) {\n          orderDelivery(this.orderId, {\n            type: this.formValidate.gender,\n            sh_delivery_name: people.wx_name,\n            sh_delivery_id: people.phone,\n            sh_delivery_uid: people.uid,\n          })\n            .then((res) => {\n              this.$Message.success(res.msg);\n              this.$emit(\"ok\");\n            })\n            .catch((error) => {\n              this.$Message.error(error.msg);\n            });\n        } else {\n          let paramsData = {\n            type: this.formValidate.gender,\n            sh_delivery_name: people.wx_name,\n            sh_delivery_id: people.phone,\n            sh_delivery_uid: people.uid,\n            cart_ids: [],\n          };\n          this.selectData.forEach((v) => {\n            paramsData.cart_ids.push({\n              cart_id: v.cart_id,\n              cart_num: v.surplus_num,\n            });\n          });\n          let data = {\n            id: this.orderId,\n            datas: { ...paramsData },\n          };\n          splitDelivery(data)\n            .then((res) => {\n              this.modals = false;\n              this.$Message.success(res.msg);\n              this.$emit(\"ok\");\n              this.splitSwitch = false;\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg);\n            });\n        }\n      }\n      if (this.formValidate.gender == 3) {\n        orderDelivery(this.orderId, {\n          type: this.formValidate.gender,\n          remark: this.formValidate.msg,\n        })\n          .then((res) => {\n            this.$Message.success(res.msg);\n            this.$emit(\"ok\");\n          })\n          .catch((error) => {\n            this.$Message.error(error.msg);\n          });\n      }\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n    // 物流选中\n    bindChange(val) {\n      this.formValidate.logisticsName = val.label;\n      if (this.formValidate.shipStatus == 2) {\n        orderTemp({\n          com: val.value,\n        }).then((res) => {\n          this.orderTempList = res.data.data;\n        });\n      }\n    },\n    lookImg() {\n      if (this.formValidate.electronic) {\n        this.orderTempList.forEach((el, index) => {\n          if (el.temp_id == this.formValidate.electronic) {\n            this.$viewer.view(index);\n          }\n        });\n      } else {\n        this.$Message.error(\"请选择电子面单\");\n      }\n    },\n  },\n};\n",null]}