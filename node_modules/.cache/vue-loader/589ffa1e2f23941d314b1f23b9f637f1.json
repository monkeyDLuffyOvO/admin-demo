{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/product/productBrand/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/product/productBrand/index.vue","mtime":1661486457000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport menusFrom from \"./components/menusFrom\";\nimport { mapState } from \"vuex\";\nimport { productBrandlist, productBrandShow } from \"@/api/product\";\nexport default {\n  name: \"index\",\n  components: {\n    menusFrom,\n  },\n  data() {\n    return {\n      grid: {\n        xl: 12,\n        lg: 12,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      grids: {\n        xl: 10,\n        lg: 10,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      brandData: {\n        keyword: \"\",\n      },\n      loading: false,\n      tableData: [],\n      formValidate: {},\n      titleFrom: \"\",\n    };\n  },\n  computed: {\n    ...mapState(\"admin/layout\", [\"isMobile\"]),\n    labelWidth() {\n      return this.isMobile ? undefined : 96;\n    },\n    labelPosition() {\n      return this.isMobile ? \"top\" : \"right\";\n    },\n  },\n  mounted() {\n    this.getData();\n  },\n  methods: {\n    search() {\n      this.getData();\n    },\n    getData() {\n      this.loading = true;\n      productBrandlist({ brand_name: this.brandData.keyword }).then((res) => {\n        this.loading = false;\n        this.tableData = res.data.list;\n      });\n    },\n\t\tloadChildrenMethod ({row}){\n\t\t\t  return new Promise((resolve, reject) => {\n\t\t\t\t\tproductBrandlist({ brand_name: this.brandData.keyword,pid:row.id }).then(res=>{\n\t\t\t\t\t\tlet arr = res.data.list;\n\t\t\t\t\t\tresolve(arr);\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t},\n    menusAdd() {\n      this.$refs.menusFrom.modals = true;\n      this.$refs.menusFrom.titleFrom = \"添加品牌分类\";\n      this.formValidate = {\n        sort: 0,\n      };\n      this.formValidate.fid = [0];\n      this.formValidate.is_show = 1;\n      this.$refs.menusFrom.type = 1;\n    },\n    // 修改状态\n    onchangeIsShow(row) {\n      productBrandShow(row.id, row.is_show)\n        .then((res) => {\n          this.getData();\n          this.$Message.success(res.msg);\n        })\n        .catch((err) => {\n          this.getData();\n          this.$Message.error(err.msg);\n        });\n    },\n    // 添加子品牌\n    addE(row) {\n      this.$refs.menusFrom.modals = true;\n      this.$refs.menusFrom.titleFrom = \"添加品牌分类\";\n      this.formValidate = {\n        sort: 0,\n      };\n      this.formValidate.fid = row.fid_son;\n      this.formValidate.is_show = 1;\n      this.$refs.menusFrom.type = 3;\n    },\n    // 编辑\n    edit(row) {\n      this.$refs.menusFrom.modals = true;\n      this.$refs.menusFrom.titleFrom = \"编辑品牌分类\";\n      this.formValidate = row;\n      if (row.fid.length == 0) {\n        this.formValidate.fid = [0];\n      }\n      this.$refs.menusFrom.type = 2;\n    },\n    // 删除\n    del(row, tit) {\n      let delfromData = {\n        title: tit,\n        url: `product/brand/${row.id}`,\n        method: \"DELETE\",\n        ids: \"\",\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.$refs.menusFrom.getAddFrom();\n          this.getData();\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n  },\n};\n",null]}