{"remainingRequest":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js??ref--0-2!/home/darkcrossunicorn/文档/admin/src/pages/setting/special/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darkcrossunicorn/文档/admin/src/pages/setting/special/index.vue","mtime":1658973957000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkcrossunicorn/文档/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {categoryList, diyGetInfo, diySave, getUrl, setDefault, recovery} from \"@/api/diy\";\nimport vuedraggable from \"vuedraggable\";\nimport mPage from \"@/components/mobilePage/index.js\";\nimport mConfig from \"@/components/mobileConfig/index.js\";\nimport footPage from \"@/components/pagesFoot\";\nimport {mapState} from \"vuex\";\n\nlet idGlobal = 0;\nexport default {\n  inject: ['reload'],\n  name: \"index.vue\",\n  components: {\n    footPage,\n    draggable: vuedraggable,\n    ...mPage,\n    ...mConfig,\n  },\n  filters: {\n    filterTxt(val) {\n      if (val) {\n        return (val = val.substr(0, val.length - 1));\n      }\n    },\n  },\n  computed: {\n    ...mapState({\n      titleTxt: (state) => state.admin.mobildConfig.pageTitle || \"专题页\",\n      titleTxt2: (state) => state.admin.mobildConfig,\n    }),\n  },\n  data() {\n    return {\n      clientHeight:'',//页面动态高度\n      rollHeight:'',\n      leftMenu: [], // 左侧菜单\n      lConfig: [], // 左侧组件\n      mConfig: [], // 中间组件渲染\n      rConfig: [], // 右侧组件配置\n      activeConfigName: \"\",\n      propsObj: {}, // 组件传递的数据,\n      activeIndex: -99, // 选中的下标\n      number: 0,\n      pageId: \"\",\n      pageName: \"\",\n      pageType: \"\",\n      category: [],\n      tabList: [\n        {\n          title: \"组件库\",\n          key: 0,\n        },\n        {\n          title: \"页面链接\",\n          key: 1,\n        },\n      ],\n      tabCur: 0,\n      urlList: [],\n      footActive: false,\n      loading: false,\n      isSearch: false,\n      isTab: false,\n      isFllow: false\n    };\n  },\n  created() {\n    this.categoryList();\n    this.getUrlList();\n    this.pageId = this.$route.query.id;\n    this.pageName = this.$route.query.name;\n    this.pageType = this.$route.query.type;\n    this.lConfig = this.objToArr(mPage);\n  },\n  mounted() {\n    let imgList =  {\n      imgList: [require('@/assets/images/foot-009.png'), require('@/assets/images/foot-0010.png')],\n      name: '主题页',\n      link: '/pages/annex/special/index?id='+this.pageId\n    }\n    this.$nextTick(() => {\n      this.$store.commit(\"admin/mobildConfig/FOOTER\",{'title':'是否显示','name':imgList});\n      this.arraySort();\n      if (this.pageId != 0) {\n        this.getDefaultConfig();\n      }\n      this.clientHeight = `${document.documentElement.clientHeight}`-65.81;//获取浏览器可视区域高度\n      let H = `${document.documentElement.clientHeight}`-180;\n      this.rollHeight = H>650?650:H;\n      let that = this;\n      window.onresize = function(){\n        that.clientHeight =  `${document.documentElement.clientHeight}`-65.81;\n        let H = `${document.documentElement.clientHeight}`-180;\n        that.rollHeight = H>650?650:H;\n      }\n    });\n  },\n  methods: {\n    leftRemove({to, from, item, clone, oldIndex, newIndex}) {\n      if (this.isSearch && newIndex == 0) {\n        if (item._underlying_vm_.name == \"z_wechat_attention\") {\n          this.isFllow = true;\n        } else {\n          this.$store.commit(\n                  \"admin/mobildConfig/ARRAYREAST\",\n                  this.mConfig[0].num\n          );\n          this.mConfig.splice(0, 1);\n        }\n      }\n      if (this.isFllow = true && newIndex >= 1) {\n        this.$store.commit(\n                \"admin/mobildConfig/ARRAYREAST\",\n                this.mConfig[0].num\n        );\n      }\n    },\n    onMove(e) {\n      if (e.relatedContext.element.name == \"search_box\") return false;\n      if (e.relatedContext.element.name == \"nav_bar\") return false;\n      return true;\n    },\n    onCopy() {\n      this.$Message.success(\"复制成功\");\n    },\n    onError() {\n      this.$Message.error(\"复制失败\");\n    },\n    //设置默认数据\n    setmoren(){\n      setDefault(this.pageId).then((res)=>{\n        this.$Message.success(res.msg)\n      }).catch(err=>{\n        this.$Message.error(err.msg)\n      })\n    },\n    //恢复默认\n    getmoren(){\n      recovery(this.pageId).then((res)=>{\n        this.$Message.success(res.msg)\n        this.reload();\n      }).catch(err=>{\n        this.$Message.error(err.msg)\n      })\n    },\n    // 获取url\n    getUrlList() {\n      getUrl().then((res) => {\n        this.urlList = res.data.url;\n      });\n    },\n    // 左侧tab\n    bindTab(index) {\n      this.tabCur = index;\n    },\n    // 页面标题点击\n    showTitle() {\n      this.activeIndex = -100;\n      let obj = {};\n      for (var i in mConfig) {\n        if (i == \"pageTitle\") {\n          // this.rConfig = obj\n          obj = mConfig[i];\n          obj.configName = mConfig[i].name;\n          obj.cname = \"页面设置\";\n        }\n      }\n      let abc = obj;\n      this.rConfig = [];\n      this.rConfig[0] = JSON.parse(JSON.stringify(obj));\n    },\n    // 页面底部点击\n    showFoot() {\n      this.activeIndex = -101;\n      let obj = {};\n      for (var i in mConfig) {\n        if (i == \"pageFoot\") {\n          // this.rConfig = obj\n          obj = mConfig[i];\n          obj.configName = mConfig[i].name;\n          obj.cname = \"底部菜单\";\n        }\n      }\n      let abc = obj;\n      this.rConfig = [];\n      this.rConfig[0] = JSON.parse(JSON.stringify(obj));\n    },\n    // 对象转数组\n    objToArr(data) {\n      let obj = Object.keys(data);\n      let m = obj.map((key) => data[key]);\n      return m;\n    },\n    log(evt) {\n      // 中间拖拽排序\n      if (evt.moved) {\n        if (evt.moved.element.name == \"search_box\") {\n          return this.$Message.warning(\"该组件禁止拖拽\");\n        }\n        if (evt.moved.element.name == \"nav_bar\") {\n          return this.$Message.warning(\"该组件禁止拖拽\");\n        }\n        evt.moved.oldNum = this.mConfig[evt.moved.oldIndex].num;\n        evt.moved.newNum = this.mConfig[evt.moved.newIndex].num;\n        evt.moved.status = evt.moved.oldIndex > evt.moved.newIndex;\n        this.mConfig.forEach((el, index) => {\n          el.num = new Date().getTime() * 1000 + index;\n        });\n        evt.moved.list = this.mConfig;\n        this.rConfig = [];\n        let item = evt.moved.element;\n        let tempItem = JSON.parse(JSON.stringify(item));\n        this.rConfig.push(tempItem);\n        this.activeIndex = evt.moved.newIndex;\n        this.$store.commit(\"admin/mobildConfig/SETCONFIGNAME\", item.name);\n        this.$store.commit(\"admin/mobildConfig/defaultArraySort\", evt.moved);\n      }\n      // 从左向右拖拽排序\n      if (evt.added) {\n        let data = evt.added.element;\n        let obj = {};\n        let timestamp = new Date().getTime() * 1000;\n        data.num = timestamp;\n        this.activeConfigName = data.name;\n        let tempItem = JSON.parse(JSON.stringify(data));\n        tempItem.id = \"id\" + tempItem.num;\n        this.mConfig[evt.added.newIndex] = tempItem;\n        this.rConfig = [];\n        this.rConfig.push(tempItem);\n        this.mConfig.forEach((el, index) => {\n          el.num = new Date().getTime() * 1000 + index;\n        });\n        evt.added.list = this.mConfig;\n        this.activeIndex = evt.added.newIndex;\n        // 保存组件名称\n        this.$store.commit(\"admin/mobildConfig/SETCONFIGNAME\", data.name);\n        this.$store.commit(\"admin/mobildConfig/defaultArraySort\", evt.added);\n      }\n    },\n    cloneDog(data) {\n      // this.mConfig.push(tempItem)\n      return {\n        ...data,\n      };\n    },\n    //数组元素互换位置\n    swapArray(arr, index1, index2) {\n      arr[index1] = arr.splice(index2, 1, arr[index1])[0];\n      return arr;\n    },\n    //点击上下移动；\n    movePage(item,index,type){\n      if(type){\n        if(index == 0){\n          return\n        }\n      }else {\n        if(index == this.mConfig.length-1){\n          return\n        }\n      }\n      if (item.name == \"search_box\") {\n        return this.$Message.warning(\"该组件禁止移动\");\n      }\n      if (item.name == \"nav_bar\") {\n        return this.$Message.warning(\"该组件禁止移动\");\n      }\n      if(type){\n        if(this.mConfig[index-1].name  == \"search_box\" || this.mConfig[index-1].name  == \"nav_bar\"){\n          return this.$Message.warning(\"搜索框、商品分类必须为顶部\");\n        }\n        this.swapArray(this.mConfig, index-1, index);\n      }else {\n        this.swapArray(this.mConfig, index, index+1);\n      }\n      let obj = {};\n      this.rConfig = [];\n      obj.oldIndex = index;\n      if(type){\n        obj.newIndex = index-1;\n      }else {\n        obj.newIndex = index+1;\n      }\n      this.mConfig.forEach((el, index) => {\n        el.num = new Date().getTime() * 1000 + index;\n      });\n      let tempItem = JSON.parse(JSON.stringify(item));\n      this.rConfig.push(tempItem);\n      obj.element = item;\n      obj.list = this.mConfig;\n      if(type){\n        this.activeIndex = index-1;\n      }else {\n        this.activeIndex = index+1;\n      }\n      this.$store.commit(\"admin/mobildConfig/SETCONFIGNAME\", item.name);\n      this.$store.commit(\"admin/mobildConfig/defaultArraySort\", obj);\n    },\n    // 组件添加\n    addDomCon(item,type,index){\n      if (item.name == \"search_box\") {\n        if (this.isSearch) return this.$Message.error(\"该组件只能添加一次\");\n        this.isSearch = true;\n      }\n      if (item.name == \"nav_bar\") {\n        if (this.isTab) return this.$Message.error(\"该组件只能添加一次\");\n        this.isTab = true;\n      }\n      idGlobal += 1;\n      let obj = {};\n      let timestamp = new Date().getTime() * 1000;\n      item.num = `${timestamp}`;\n      item.id = `id${timestamp}`;\n      this.activeConfigName = item.name;\n      let tempItem = JSON.parse(JSON.stringify(item));\n      if (item.name == \"search_box\") {\n        this.rConfig = [];\n        this.mConfig.unshift(tempItem);\n        this.activeIndex = 0;\n        this.rConfig.push(tempItem);\n      } else if (item.name == \"nav_bar\") {\n        this.rConfig = [];\n        if (this.mConfig[0]&&this.mConfig[0].name === \"search_box\") {\n          this.mConfig.splice(1, 0, tempItem);\n          this.activeIndex = 1;\n        } else {\n          this.mConfig.splice(0, 0, tempItem);\n          this.activeIndex = 0;\n        }\n        this.rConfig.push(tempItem);\n      } else {\n        if(type){\n          this.rConfig = [];\n          this.mConfig.push(tempItem);\n          this.activeIndex = this.mConfig.length - 1;\n          this.rConfig.push(tempItem);\n        }else {\n          this.mConfig.splice(index+1, 0, tempItem);\n          this.activeIndex = index;\n        }\n      }\n      this.mConfig.forEach((el, index) => {\n        el.num = new Date().getTime() * 1000 + index;\n      });\n      // 保存组件名称\n      obj.element = item;\n      obj.list = this.mConfig;\n      this.$store.commit(\"admin/mobildConfig/SETCONFIGNAME\", item.name);\n      this.$store.commit(\"admin/mobildConfig/defaultArraySort\", obj);\n    },\n    //中间页点击添加模块；\n    bindAddDom(item, type, index) {\n      let i = item;\n      this.lConfig.forEach(j=>{\n        if(item.name==j.name){\n          i = j\n        }\n      });\n      this.addDomCon(i,type,index);\n    },\n    //左边配置模块点击添加；\n    addDom(item, type) {\n      this.addDomCon(item,type);\n    },\n    // 点击显示相应的配置\n    bindconfig(item, index) {\n      this.rConfig = [];\n      let tempItem = JSON.parse(JSON.stringify(item));\n      this.rConfig.push(tempItem);\n      this.activeIndex = index;\n      this.$store.commit(\"admin/mobildConfig/SETCONFIGNAME\", item.name);\n    },\n    // 组件删除\n    bindDelete(item, key) {\n      if (item.name == \"search_box\") {\n        this.isSearch = false;\n      }\n      if (item.name == \"nav_bar\") {\n        this.isTab = false;\n      }\n      this.mConfig.splice(key, 1);\n      this.rConfig.splice(0, 1);\n      if(this.mConfig.length != key){\n        this.rConfig.push(this.mConfig[key]);\n      }else {\n        if(this.mConfig.length){\n          this.activeIndex = key-1;\n          this.rConfig.push(this.mConfig[key-1]);\n        }else {\n          this.showTitle()\n        }\n      }\n      // 删除第几个配置\n      this.$store.commit(\"admin/mobildConfig/DELETEARRAY\", item);\n    },\n    // 组件返回\n    config(data) {\n      let propsObj = this.propsObj;\n      propsObj.data = data;\n      propsObj.name = this.activeConfigName;\n    },\n    addSort(arr, index1, index2) {\n      arr[index1] = arr.splice(index2, 1, arr[index1])[0];\n      return arr;\n    },\n    // 数组排序\n    arraySort() {\n      let tempArr = [];\n      let basis = {\n        title: \"基础组件\",\n        list: [],\n        isOpen: true,\n      };\n      let marketing = {\n        title: \"营销组件\",\n        list: [],\n        isOpen: true,\n      };\n      let tool = {\n        title: \"工具组件\",\n        list: [],\n        isOpen: true,\n      };\n      this.lConfig.map((el, index) => {\n        if (el.type == 0) {\n          basis.list.push(el);\n        }\n        if (el.type == 1) {\n          marketing.list.push(el);\n        }\n        if (el.type == 2) {\n          tool.list.push(el);\n        }\n      });\n      tempArr.push(basis, marketing, tool);\n      this.leftMenu = tempArr;\n    },\n    // 保存配置\n    saveConfig() {\n      if (this.mConfig.length == 0) {\n        return this.$Message.error(\"暂未添加任何组件，保存失败！\");\n      }\n      this.loading = true;\n      let val = this.$store.state.admin.mobildConfig.defaultArray;\n      if (!this.footActive) {\n        let timestamp = new Date().getTime() * 1000;\n        val[timestamp] = this.$store.state.admin.mobildConfig.pageFooter;\n        this.footActive = true;\n      }\n      diySave(this.pageId, {\n        name: this.pageName,\n        type: this.pageType,\n        value: val,\n        title: this.titleTxt,\n      })\n              .then((res) => {\n                this.loading = false;\n                this.pageId = res.data.id;\n                this.$Message.success(res.msg);\n              })\n              .catch((res) => {\n                this.loading = false;\n                this.$Message.error(res.msg);\n              });\n    },\n    // 获取默认配置\n    getDefaultConfig() {\n      diyGetInfo(this.pageId, {\n        type: 2,\n      }).then(({data}) => {\n        let obj = {};\n        let tempARR = [];\n        this.$store.commit(\"admin/mobildConfig/titleUpdata\", data.info.title);\n        let newArr = this.objToArr(data.info.value);\n\n        function sortNumber(a, b) {\n          return a.timestamp - b.timestamp;\n        }\n\n        newArr.sort(sortNumber);\n        newArr.map((el, index) => {\n          if (el.name == \"headerSerch\") {\n            this.isSearch = true;\n          }\n          if (el.name == \"tabNav\") {\n            this.isTab = true;\n          }\n          el.id = \"id\" + el.timestamp;\n          this.lConfig.map((item, j) => {\n            if (el.name == item.defaultName) {\n              item.num = el.timestamp;\n              item.id = \"id\" + el.timestamp;\n              let tempItem = JSON.parse(JSON.stringify(item));\n              tempARR.push(tempItem);\n              obj[el.timestamp] = el;\n              this.mConfig.push(tempItem);\n              // 保存默认组件配置\n              this.$store.commit(\"admin/mobildConfig/ADDARRAY\", {\n                num: el.timestamp,\n                val: el,\n              });\n            }\n          });\n        });\n\n        let objs = newArr[newArr.length - 1];\n\n        if (objs.name == \"pageFoot\") {\n          this.$store.commit(\"admin/mobildConfig/footPageUpdata\", objs);\n        }\n        this.rConfig = [];\n        this.activeIndex = 0;\n        this.rConfig.push(this.mConfig[0]);\n      });\n    },\n    categoryList() {\n      categoryList((res) => {\n        this.category = res.data;\n      });\n    },\n    // 重置\n    reast() {\n      if (this.pageId == 0) {\n        this.$Message.error(\"新增页面，无法重置\");\n      } else {\n        this.$Modal.confirm({\n          title: \"提示\",\n          content: \"<p>是否重置当前页面数据</p>\",\n          onOk: () => {\n            this.mConfig = [];\n            this.rConfig = [];\n            this.activeIndex = -99;\n            this.getDefaultConfig();\n          },\n          onCancel: () => {\n          },\n        });\n      }\n    },\n  },\n  beforeDestroy() {\n    this.$store.commit(\"admin/mobildConfig/titleUpdata\", \"\");\n    this.$store.commit(\"admin/mobildConfig/SETEMPTY\");\n  },\n  destroyed() {\n    this.$store.commit(\"admin/mobildConfig/titleUpdata\", \"\");\n    this.$store.commit(\"admin/mobildConfig/SETEMPTY\");\n  },\n};\n",null]}